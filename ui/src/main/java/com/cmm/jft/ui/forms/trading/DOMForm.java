
package com.cmm.jft.ui.forms.trading;

import java.awt.Color;
import java.awt.Point;
import java.awt.event.MouseEvent;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SpinnerModel;

import com.cmm.jft.ui.controller.DOMController;
import com.cmm.jft.ui.forms.AbstractForm;
import com.cmm.jft.ui.forms.model.DOMCellRenderer;
import com.cmm.jft.ui.forms.model.DOMTableModel;

/**
 *
 * @author crist
 */
public class DOMForm extends AbstractForm implements PropertyChangeListener {

    private DOMController controller;


    /** Creates new form Test */
    public DOMForm() {
        initComponents();
        configureTable();
    }

    private void configureTable() {
        //tblDOM.setModel(new DOMTableModel());
        tblDOM.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblDOM.setGridColor(Color.black);


        tblDOM.getColumnModel()
              .getColumn(0)
              .setCellRenderer(new DOMCellRenderer());
        tblDOM.getColumnModel()
              .getColumn(1)
              .setCellRenderer(new DOMCellRenderer());
        tblDOM.getColumnModel()
              .getColumn(2)
              .setCellRenderer(new DOMCellRenderer());
        tblDOM.getColumnModel()
              .getColumn(3)
              .setCellRenderer(new DOMCellRenderer());
        tblDOM.getColumnModel()
              .getColumn(4)
              .setCellRenderer(new DOMCellRenderer());
        tblDOM.getColumnModel()
              .getColumn(5)
              .setCellRenderer(new DOMCellRenderer());
        tblDOM.getColumnModel()
              .getColumn(6)
              .setCellRenderer(new DOMCellRenderer());
        controller = new DOMController();
        controller.setTblModel((DOMTableModel) tblDOM.getModel());
        controller.addPropertyChangeListener(this);


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDOM = new javax.swing.JTable();
        pnlControls = new javax.swing.JPanel();
        lblFinPos = new javax.swing.JLabel();
        btnCp = new javax.swing.JButton();
        btnZero = new javax.swing.JButton();
        btnInv = new javax.swing.JButton();
        lblBalance = new javax.swing.JLabel();
        lblVolPos = new javax.swing.JLabel();
        btnVd = new javax.swing.JButton();
        spnQty = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblDOM.setModel(new DOMTableModel());
        tblDOM.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tblDOMMouseMoved(evt);
            }
        });
        tblDOM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblDOMMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDOMMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDOM);
        if (tblDOM.getColumnModel().getColumnCount() > 0) {
            tblDOM.getColumnModel().getColumn(0).setHeaderValue("Ord Cp");
            tblDOM.getColumnModel().getColumn(1).setHeaderValue("VolCp");
            tblDOM.getColumnModel().getColumn(2).setHeaderValue("QtCp");
            tblDOM.getColumnModel().getColumn(3).setHeaderValue("Preço");
            tblDOM.getColumnModel().getColumn(4).setHeaderValue("QtVd");
            tblDOM.getColumnModel().getColumn(5).setHeaderValue("VolVd");
            tblDOM.getColumnModel().getColumn(6).setHeaderValue("Ord Vd");
        }

        lblFinPos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFinPos.setText("0,00");

        btnCp.setText("Cp");
        btnCp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCpActionPerformed(evt);
            }
        });

        btnZero.setText("Zerar");
        btnZero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZeroActionPerformed(evt);
            }
        });

        btnInv.setText("Inverter");
        btnInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvActionPerformed(evt);
            }
        });

        lblBalance.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblBalance.setText("0,00");

        lblVolPos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblVolPos.setText("0");

        btnVd.setText("Vd");
        btnVd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVdActionPerformed(evt);
            }
        });

        spnQty.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnQtyStateChanged(evt);
            }
        });

        jLabel2.setText("Qty");

        txtPrice.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel1.setText("Preço");

        jLabel3.setText("Posição");

        javax.swing.GroupLayout pnlControlsLayout = new javax.swing.GroupLayout(pnlControls);
        pnlControls.setLayout(pnlControlsLayout);
        pnlControlsLayout.setHorizontalGroup(
            pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.CENTER, pnlControlsLayout.createSequentialGroup()
                        .addComponent(btnCp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnZero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnInv)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVd))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(pnlControlsLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblVolPos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblFinPos, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlControlsLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnQty, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlControlsLayout.setVerticalGroup(
            pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFinPos)
                    .addComponent(lblBalance)
                    .addComponent(lblVolPos)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnQty, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCp)
                    .addComponent(btnZero)
                    .addComponent(btnInv)
                    .addComponent(btnVd))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
            .addComponent(pnlControls, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlControls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }//GEN-END:initComponents

    private void btnCpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCpActionPerformed

    private void btnZeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnZeroActionPerformed

    private void btnInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnInvActionPerformed

    private void btnVdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnVdActionPerformed

    private void tblDOMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDOMMouseClicked
        
        //System.out.println(evt.getButton() + " - " + System.currentTimeMillis());
        
        
    }//GEN-LAST:event_tblDOMMouseClicked

    private void tblDOMMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDOMMouseReleased
        switch (evt.getButton()) {
        case MouseEvent.BUTTON1:
            //System.out.println(tblDOM.getSelectedColumn());
            controller.addOrder(tblDOM.getSelectedRow(), tblDOM.getSelectedColumn());
            break;
        case MouseEvent.BUTTON2:

            break;
        case MouseEvent.BUTTON3:
            //controller.removeOrder(tblDOM.getSelectedRow(), tblDOM.getSelectedColumn());
            break;
        }
    }//GEN-LAST:event_tblDOMMouseReleased

    private void spnQtyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnQtyStateChanged
        SpinnerModel sm = spnQty.getModel();
        controller.setQty((Integer)sm.getValue());
    }//GEN-LAST:event_spnQtyStateChanged

    private void tblDOMMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDOMMouseMoved
        Point p = evt.getPoint();
        int row = tblDOM.rowAtPoint(p);
        if(row >-1){
            tblDOM.clearSelection();
            tblDOM.setRowSelectionInterval(row, 3);
        }
        else{
            tblDOM.setSelectionBackground(Color.decode("#77ce90"));
        }
        
    }//GEN-LAST:event_tblDOMMouseMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing
                                                                   .UIManager
                                                                   .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing
                         .UIManager
                         .setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util
                .logging
                .Logger
                .getLogger(DOMForm.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util
                .logging
                .Logger
                .getLogger(DOMForm.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util
                .logging
                .Logger
                .getLogger(DOMForm.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util
                .logging
                .Logger
                .getLogger(DOMForm.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt
            .EventQueue
            .invokeLater(new Runnable() {
                public void run() {
                    new DOMForm().setVisible(true);
                }
            });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCp;
    private javax.swing.JButton btnInv;
    private javax.swing.JButton btnVd;
    private javax.swing.JButton btnZero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblBalance;
    private javax.swing.JLabel lblFinPos;
    private javax.swing.JLabel lblVolPos;
    private javax.swing.JPanel pnlControls;
    private javax.swing.JSpinner spnQty;
    private javax.swing.JTable tblDOM;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables
    
    @Override
    public void propertyChange(PropertyChangeEvent propertyChangeEvent) {

        switch (propertyChangeEvent.getPropertyName()) {
        case "openQty":
            lblVolPos.setText(propertyChangeEvent.getNewValue().toString());
            break;
        case "openFin":
            lblFinPos.setText(propertyChangeEvent.getNewValue().toString());
            break;
        case "balance":
            lblBalance.setText(propertyChangeEvent.getNewValue().toString());
            break;
        case "price":
            txtPrice.setText(propertyChangeEvent.getNewValue().toString());
        }

    }
}
