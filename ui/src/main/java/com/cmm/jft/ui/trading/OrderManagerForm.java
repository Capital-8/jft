/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cmm.jft.ui.trading;

import com.cmm.jft.db.DBFacade;
import com.cmm.jft.db.exceptions.DataBaseException;
import com.cmm.jft.trading.Orders;
import com.cmm.jft.ui.ObjectForms;
import com.cmm.jft.ui.forms.AbstractForm;
import com.cmm.jft.ui.forms.Events;
import com.cmm.jft.ui.forms.FormStates;
import com.cmm.jft.ui.forms.FormsFactory;
import com.cmm.jft.ui.utils.GenericTableModel;

import java.awt.event.ActionEvent;

import com.cmm.logging.Logging;

import org.apache.log4j.Level;

/**
 *
 * @author Cristiano M Martins
 */
public class OrderManagerForm extends AbstractForm {

    /**
     * Creates new form OrderManagerForm
     */
    public OrderManagerForm() {
	initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar = new javax.swing.JToolBar();
        btnAddOrder = new javax.swing.JButton();
        btnEditOrder = new javax.swing.JButton();
        btnCancelOrder = new javax.swing.JButton();
        jScrollPane = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jToolBar.setFloatable(false);
        jToolBar.setRollover(true);

        btnAddOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons/ticket--plus.png"))); // NOI18N
        btnAddOrder.setFocusable(false);
        btnAddOrder.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAddOrder.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar.add(btnAddOrder);

        btnEditOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons/ticket--pencil.png"))); // NOI18N
        btnEditOrder.setFocusable(false);
        btnEditOrder.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditOrder.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar.add(btnEditOrder);

        btnCancelOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons/ticket--minus.png"))); // NOI18N
        btnCancelOrder.setFocusable(false);
        btnCancelOrder.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelOrder.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar.add(btnCancelOrder);

        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Order", "Security", "Side", "Volume", "Price", "Status"
            }
        ));
        jScrollPane.setViewportView(tblOrders);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
            .addComponent(jScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddOrder;
    private javax.swing.JButton btnCancelOrder;
    private javax.swing.JButton btnEditOrder;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JToolBar jToolBar;
    private javax.swing.JTable tblOrders;
    // End of variables declaration//GEN-END:variables
    /* (non-Javadoc)
     * @see com.cmm.jft_ui.AbstractForm#addListeners()
     */
    @Override
    public void addListeners() {

	btnAddOrder.addActionListener(new GerEvents(this));
	btnCancelOrder.addActionListener(new GerEvents(this));
	btnEditOrder.addActionListener(new GerEvents(this));

    }

    /* (non-Javadoc)
     * @see com.cmm.jft_ui.forms.AbstractForm#loadData()
     */
    @Override
    public void loadData() {
	//super.loadData();

	GenericTableModel<Orders> model = new GenericTableModel<Orders>(Orders.class);

	model.showColumnWithAlias("orderSerial", "Order");
	model.showColumnWithAlias("securityID", "Security");
	model.showColumnWithAlias("side", "Side");
	model.showColumnWithAlias("volume", "Volume");
	model.showColumnWithAlias("price", "Price");
	model.showColumnWithAlias("orderStatus", "Order Status");

	model.rebuildColumns();
	try {
	    model.setValues(DBFacade.getInstance()._listResults("Orders.findAll", null));
	} catch (DataBaseException e) {
	    Logging.getInstance().log(getClass(), e, Level.ERROR);
	}


    }


    private class GerEvents extends Events{

	/**
	 * @param frame
	 */
	public GerEvents(AbstractForm frame) {
	    super(frame);
	}

	/* (non-Javadoc)
	 * @see com.cmm.jft_ui.forms.Events#actionPerformed(java.awt.event.ActionEvent)
	 */
	@Override
	public void actionPerformed(ActionEvent e) {
	    super.actionPerformed(e);

	    if(e.getSource() == btnAddOrder) {
		FormsFactory.openForm(ObjectForms.PLACE_ORDER, FormStates.OK);
	    }
	    else if(e.getSource() == btnCancelOrder) {

		int r = tblOrders.getSelectedRow();
		if(r > -1) {

		    String serial = (String) tblOrders.getValueAt(r, 0);

//		    Event ev = new Event();
//		    ev.setEventType(MarketEvents.CANCEL);
//		    ev.setMessage("Cancelando ordem: " + serial);
//		    ev.setOrderSerial(serial);
//
//		    try {
//			OrderService.getInstance().addEvent(ev);
//		    } catch (MarketConnectionException | OrderException | DataBaseException ex) {
//			ex.printStackTrace();
//		    }
		}
		else {

		}

	    }
	    else if(e.getSource() == btnEditOrder) {
		FormsFactory.openForm(ObjectForms.ORDER, FormStates.UPDATE);
	    }
	}

    }

}
