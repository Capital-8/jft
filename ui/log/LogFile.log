2015-06-09 20:24:39,443 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Earning [OPTIMISTIC_FORCE_INCREMENT]: select earning0_.earningID as earningI1_13_0_, earning0_.EarningType as EarningT2_13_0_, earning0_.EarningValue as EarningV3_13_0_, earning0_.ExDate as ExDate4_13_0_, earning0_.ExPrice as ExPrice5_13_0_, earning0_.securityID as security6_13_0_ from Earning earning0_ where earning0_.earningID=?
  2015-06-09 20:24:39,445 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.securities.Earning: select earning0_.earningID as earningI1_13_2_, earning0_.EarningType as EarningT2_13_2_, earning0_.EarningValue as EarningV3_13_2_, earning0_.ExDate as ExDate4_13_2_, earning0_.ExPrice as ExPrice5_13_2_, earning0_.securityID as security6_13_2_, security1_.securityID as security1_30_0_, security1_.Description as Descript2_30_0_, security1_.securityInfoID_securityInfoID as security4_30_0_, security1_.Symbol as Symbol3_30_0_, historical2_.securityID as securit15_30_4_, historical2_.historicalQuoteID as historic1_16_4_, historical2_.historicalQuoteID as historic1_16_1_, historical2_.AdjClose as AdjClose2_16_1_, historical2_.Ask as Ask3_16_1_, historical2_.AvgPrice as AvgPrice4_16_1_, historical2_.Bid as Bid5_16_1_, historical2_.Close as Close6_16_1_, historical2_.High as High7_16_1_, historical2_.Low as Low8_16_1_, historical2_.Open as Open9_16_1_, historical2_.QDateTime as QDateTi10_16_1_, historical2_.QuoteFactor as QuoteFa11_16_1_, historical2_.securityID as securit15_16_1_, historical2_.TradedQuantity as TradedQ12_16_1_, historical2_.TradedUnits as TradedU13_16_1_, historical2_.Volume as Volume14_16_1_ from Earning earning0_ inner join Security security1_ on earning0_.securityID=security1_.securityID left outer join HistoricalQuote historical2_ on security1_.securityID=historical2_.securityID where earning0_.earningID=? order by historical2_.QDateTime
  2015-06-09 20:24:39,446 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.securities.Earning: select earning0_.earningID as earningI1_13_2_, earning0_.EarningType as EarningT2_13_2_, earning0_.EarningValue as EarningV3_13_2_, earning0_.ExDate as ExDate4_13_2_, earning0_.ExPrice as ExPrice5_13_2_, earning0_.securityID as security6_13_2_, security1_.securityID as security1_30_0_, security1_.Description as Descript2_30_0_, security1_.securityInfoID_securityInfoID as security4_30_0_, security1_.Symbol as Symbol3_30_0_, historical2_.securityID as securit15_30_4_, historical2_.historicalQuoteID as historic1_16_4_, historical2_.historicalQuoteID as historic1_16_1_, historical2_.AdjClose as AdjClose2_16_1_, historical2_.Ask as Ask3_16_1_, historical2_.AvgPrice as AvgPrice4_16_1_, historical2_.Bid as Bid5_16_1_, historical2_.Close as Close6_16_1_, historical2_.High as High7_16_1_, historical2_.Low as Low8_16_1_, historical2_.Open as Open9_16_1_, historical2_.QDateTime as QDateTi10_16_1_, historical2_.QuoteFactor as QuoteFa11_16_1_, historical2_.securityID as securit15_16_1_, historical2_.TradedQuantity as TradedQ12_16_1_, historical2_.TradedUnits as TradedU13_16_1_, historical2_.Volume as Volume14_16_1_ from Earning earning0_ inner join Security security1_ on earning0_.securityID=security1_.securityID left outer join HistoricalQuote historical2_ on security1_.securityID=historical2_.securityID where earning0_.earningID=? order by historical2_.QDateTime
  2015-06-09 20:24:39,446 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:39,446 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select securityID from Security where securityID =?
  2015-06-09 20:24:39,446 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select security_.securityID, security_.Description as Descript2_30_, security_.securityInfoID_securityInfoID as security4_30_, security_.Symbol as Symbol3_30_ from Security security_ where security_.securityID=?
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Security (Description, securityInfoID_securityInfoID, Symbol, securityID) values (?, ?, ?, ?)
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Security set Description=?, securityInfoID_securityInfoID=?, Symbol=? where securityID=?
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Security where securityID=?
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6869a3b3]
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27ace0b1]
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.category
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.currencyID
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.emissionDate
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.exercisePrice
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.expirationDate
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.futureSerie
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.minimalVolume
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.objectAsset
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.optionSerie
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.optionStyle
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.quoteFactor
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.symbolDate
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.securityID
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : securityInfoID.securityID
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:24:39,447 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,448 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,449 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}
          - JOIN (JoinDefinedByMetadata(securityInfoID)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.SecurityInfo)
                - SQL table alias mapping - securityin1_
                - alias suffix - 1_
                - suffixed key columns - {security1_31_1_}

  2015-06-09 20:24:39,449 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [NONE]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_, securityin1_.securityInfoID as security1_31_1_, securityin1_.Category as Category2_31_1_, securityin1_.currencyID as currenc13_31_1_, securityin1_.EmissionDate as Emission3_31_1_, securityin1_.ExcercisePrice as Excercis4_31_1_, securityin1_.ExpirationDate as Expirati5_31_1_, securityin1_.FutureSerie as FutureSe6_31_1_, securityin1_.MinimalVolume as MinimalV7_31_1_, securityin1_.ObjectAsset as ObjectAs8_31_1_, securityin1_.OptionSerie as OptionSe9_31_1_, securityin1_.OptionStyle as OptionS10_31_1_, securityin1_.QuoteFactor as QuoteFa11_31_1_, securityin1_.SymbolDate as SymbolD12_31_1_ from Security security0_ left outer join SecurityInfo securityin1_ on security0_.securityInfoID_securityInfoID=securityin1_.securityInfoID where security0_.securityID=?
  2015-06-09 20:24:39,449 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@431f1eaf]
  2015-06-09 20:24:39,449 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,449 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:24:39,449 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:24:39,449 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:24:39,449 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:24:39,449 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c59e45e]
  2015-06-09 20:24:39,449 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.category
  2015-06-09 20:24:39,449 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.currencyID
  2015-06-09 20:24:39,449 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.emissionDate
  2015-06-09 20:24:39,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.exercisePrice
  2015-06-09 20:24:39,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.expirationDate
  2015-06-09 20:24:39,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.futureSerie
  2015-06-09 20:24:39,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.minimalVolume
  2015-06-09 20:24:39,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.objectAsset
  2015-06-09 20:24:39,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.optionSerie
  2015-06-09 20:24:39,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.optionStyle
  2015-06-09 20:24:39,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.quoteFactor
  2015-06-09 20:24:39,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.symbolDate
  2015-06-09 20:24:39,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.securityID
  2015-06-09 20:24:39,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : securityInfoID.securityID
  2015-06-09 20:24:39,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:24:39,450 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,450 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,450 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}
          - JOIN (JoinDefinedByMetadata(securityInfoID)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.SecurityInfo)
                - SQL table alias mapping - securityin1_
                - alias suffix - 1_
                - suffixed key columns - {security1_31_1_}

  2015-06-09 20:24:39,450 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [READ]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_, securityin1_.securityInfoID as security1_31_1_, securityin1_.Category as Category2_31_1_, securityin1_.currencyID as currenc13_31_1_, securityin1_.EmissionDate as Emission3_31_1_, securityin1_.ExcercisePrice as Excercis4_31_1_, securityin1_.ExpirationDate as Expirati5_31_1_, securityin1_.FutureSerie as FutureSe6_31_1_, securityin1_.MinimalVolume as MinimalV7_31_1_, securityin1_.ObjectAsset as ObjectAs8_31_1_, securityin1_.OptionSerie as OptionSe9_31_1_, securityin1_.OptionStyle as OptionS10_31_1_, securityin1_.QuoteFactor as QuoteFa11_31_1_, securityin1_.SymbolDate as SymbolD12_31_1_ from Security security0_ left outer join SecurityInfo securityin1_ on security0_.securityInfoID_securityInfoID=securityin1_.securityInfoID where security0_.securityID=?
  2015-06-09 20:24:39,451 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63bde6c2]
  2015-06-09 20:24:39,451 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,451 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:24:39,451 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:24:39,451 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:24:39,451 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:24:39,451 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dd82486]
  2015-06-09 20:24:39,451 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:24:39,452 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,452 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,452 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:24:39,452 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [UPGRADE]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=? for update
  2015-06-09 20:24:39,452 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56078cea]
  2015-06-09 20:24:39,452 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,452 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:24:39,452 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:24:39,452 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:24:39,452 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:24:39,452 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36fcf6c0]
  2015-06-09 20:24:39,452 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:24:39,452 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,452 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,452 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:24:39,452 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [UPGRADE_NOWAIT]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=? for update nowait 
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aac188d]
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d23faef]
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [UPGRADE_SKIPLOCKED]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=? for update
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cb8437d]
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43f61afb]
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,453 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,454 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:24:39,454 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [FORCE]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=? for update nowait 
  2015-06-09 20:24:39,454 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@713064e8]
  2015-06-09 20:24:39,454 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,454 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:24:39,454 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:24:39,454 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:24:39,454 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:24:39,454 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bf39d06]
  2015-06-09 20:24:39,454 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:24:39,454 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,454 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [PESSIMISTIC_READ]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=? for share
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68217d41]
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e5d4f6b]
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [PESSIMISTIC_WRITE]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=? for update
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39c1fe0b]
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:24:39,455 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:24:39,456 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62891fc8]
  2015-06-09 20:24:39,456 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:24:39,456 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,456 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,456 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:24:39,456 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [PESSIMISTIC_FORCE_INCREMENT]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=? for update nowait 
  2015-06-09 20:24:39,456 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@367b22e5]
  2015-06-09 20:24:39,456 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,456 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:24:39,456 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:24:39,456 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:24:39,456 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:24:39,456 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10bd9df0]
  2015-06-09 20:24:39,456 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:24:39,456 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,456 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,457 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:24:39,457 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [OPTIMISTIC]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=?
  2015-06-09 20:24:39,457 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ae0b770]
  2015-06-09 20:24:39,457 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,457 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:24:39,457 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:24:39,457 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:24:39,457 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:24:39,457 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30e6a763]
  2015-06-09 20:24:39,457 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:24:39,457 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,457 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,457 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:24:39,457 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [OPTIMISTIC_FORCE_INCREMENT]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=?
  2015-06-09 20:24:39,458 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.securities.Security: select security0_.securityID as security1_30_1_, security0_.Description as Descript2_30_1_, security0_.securityInfoID_securityInfoID as security4_30_1_, security0_.Symbol as Symbol3_30_1_, historical1_.securityID as securit15_30_3_, historical1_.historicalQuoteID as historic1_16_3_, historical1_.historicalQuoteID as historic1_16_0_, historical1_.AdjClose as AdjClose2_16_0_, historical1_.Ask as Ask3_16_0_, historical1_.AvgPrice as AvgPrice4_16_0_, historical1_.Bid as Bid5_16_0_, historical1_.Close as Close6_16_0_, historical1_.High as High7_16_0_, historical1_.Low as Low8_16_0_, historical1_.Open as Open9_16_0_, historical1_.QDateTime as QDateTi10_16_0_, historical1_.QuoteFactor as QuoteFa11_16_0_, historical1_.securityID as securit15_16_0_, historical1_.TradedQuantity as TradedQ12_16_0_, historical1_.TradedUnits as TradedU13_16_0_, historical1_.Volume as Volume14_16_0_ from Security security0_ left outer join HistoricalQuote historical1_ on security0_.securityID=historical1_.securityID where security0_.securityID=? order by historical1_.QDateTime
  2015-06-09 20:24:39,458 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.securities.Security: select security0_.securityID as security1_30_1_, security0_.Description as Descript2_30_1_, security0_.securityInfoID_securityInfoID as security4_30_1_, security0_.Symbol as Symbol3_30_1_, historical1_.securityID as securit15_30_3_, historical1_.historicalQuoteID as historic1_16_3_, historical1_.historicalQuoteID as historic1_16_0_, historical1_.AdjClose as AdjClose2_16_0_, historical1_.Ask as Ask3_16_0_, historical1_.AvgPrice as AvgPrice4_16_0_, historical1_.Bid as Bid5_16_0_, historical1_.Close as Close6_16_0_, historical1_.High as High7_16_0_, historical1_.Low as Low8_16_0_, historical1_.Open as Open9_16_0_, historical1_.QDateTime as QDateTi10_16_0_, historical1_.QuoteFactor as QuoteFa11_16_0_, historical1_.securityID as securit15_16_0_, historical1_.TradedQuantity as TradedQ12_16_0_, historical1_.TradedUnits as TradedU13_16_0_, historical1_.Volume as Volume14_16_0_ from Security security0_ left outer join HistoricalQuote historical1_ on security0_.securityID=historical1_.securityID where security0_.securityID=? order by historical1_.QDateTime
  2015-06-09 20:24:39,464 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for entity com.cmm.jft.trading.securities.Security [NONE]: select security0_.securityID as security1_30_1_, security0_.Description as Descript2_30_1_, security0_.securityInfoID_securityInfoID as security4_30_1_, security0_.Symbol as Symbol3_30_1_, securityin1_.securityInfoID as security1_31_0_, securityin1_.Category as Category2_31_0_, securityin1_.currencyID as currenc13_31_0_, securityin1_.EmissionDate as Emission3_31_0_, securityin1_.ExcercisePrice as Excercis4_31_0_, securityin1_.ExpirationDate as Expirati5_31_0_, securityin1_.FutureSerie as FutureSe6_31_0_, securityin1_.MinimalVolume as MinimalV7_31_0_, securityin1_.ObjectAsset as ObjectAs8_31_0_, securityin1_.OptionSerie as OptionSe9_31_0_, securityin1_.OptionStyle as OptionS10_31_0_, securityin1_.QuoteFactor as QuoteFa11_31_0_, securityin1_.SymbolDate as SymbolD12_31_0_ from Security security0_ left outer join SecurityInfo securityin1_ on security0_.securityInfoID_securityInfoID=securityin1_.securityInfoID where security0_.securityInfoID_securityInfoID=?
  2015-06-09 20:24:39,464 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.Deposit
  2015-06-09 20:24:39,464 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select depositID from Deposit where depositID =?
  2015-06-09 20:24:39,464 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select deposit_.depositID, deposit_.DepositAccount as DepositA5_11_, deposit_.DepositDate as DepositD2_11_, deposit_.Description as Descript3_11_, deposit_.Value as Value4_11_ from Deposit deposit_ where deposit_.depositID=?
  2015-06-09 20:24:39,464 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Deposit (DepositAccount, DepositDate, Description, Value, depositID) values (?, ?, ?, ?, ?)
  2015-06-09 20:24:39,464 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Deposit set DepositAccount=?, DepositDate=?, Description=?, Value=? where depositID=?
  2015-06-09 20:24:39,464 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Deposit where depositID=?
  2015-06-09 20:24:39,469 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c29adc8]
  2015-06-09 20:24:39,469 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:24:39,469 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:24:39,469 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,469 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,469 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,470 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,470 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:24:39,470 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [NONE]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=?
  2015-06-09 20:24:39,470 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bbb49b0]
  2015-06-09 20:24:39,470 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:24:39,470 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:24:39,470 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,470 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,470 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,470 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,470 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [READ]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=?
  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3effd4f3]
  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [UPGRADE]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=? for update
  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15f8701f]
  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:24:39,471 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [UPGRADE_NOWAIT]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=? for update nowait 
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11d4dbd6]
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [UPGRADE_SKIPLOCKED]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=? for update
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39e43310]
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [FORCE]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=? for update nowait 
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@390877d2]
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,472 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [PESSIMISTIC_READ]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=? for share
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@186cb891]
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [PESSIMISTIC_WRITE]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=? for update
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@440eaa07]
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,473 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:24:39,474 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [PESSIMISTIC_FORCE_INCREMENT]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=? for update nowait 
  2015-06-09 20:24:39,474 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aa9e414]
  2015-06-09 20:24:39,474 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:24:39,474 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:24:39,474 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,474 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,474 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,474 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,475 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:24:39,475 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [OPTIMISTIC]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=?
  2015-06-09 20:24:39,475 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@624a24f6]
  2015-06-09 20:24:39,475 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:24:39,475 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:24:39,475 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,475 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,475 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,475 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,475 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:24:39,475 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [OPTIMISTIC_FORCE_INCREMENT]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=?
  2015-06-09 20:24:39,475 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.Deposit: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=?
  2015-06-09 20:24:39,475 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.Deposit: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=?
  2015-06-09 20:24:39,475 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.TaxSetup
  2015-06-09 20:24:39,475 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select taxSetupID from TaxSetup where taxSetupID =?
  2015-06-09 20:24:39,477 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select taxsetup_.taxSetupID, taxsetup_.Aliquota as Aliquota2_36_, taxsetup_.SetupName as SetupNam3_36_, taxsetup_.taxID as taxID5_36_, taxsetup_.TaxValue as TaxValue4_36_ from TaxSetup taxsetup_ where taxsetup_.taxSetupID=?
  2015-06-09 20:24:39,477 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into TaxSetup (Aliquota, SetupName, taxID, TaxValue, taxSetupID) values (?, ?, ?, ?, ?)
  2015-06-09 20:24:39,477 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update TaxSetup set Aliquota=?, SetupName=?, taxID=?, TaxValue=? where taxSetupID=?
  2015-06-09 20:24:39,477 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from TaxSetup where taxSetupID=?
  2015-06-09 20:24:39,477 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338cc75f]
  2015-06-09 20:24:39,477 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:24:39,477 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:24:39,477 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:24:39,477 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:24:39,477 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:24:39,477 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,477 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,477 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [NONE]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=?
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c9bdee9]
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [READ]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=?
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f98635e]
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [UPGRADE]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=? for update
  2015-06-09 20:24:39,478 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b0615ae]
  2015-06-09 20:24:39,479 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:24:39,479 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:24:39,479 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:24:39,479 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:24:39,479 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:24:39,479 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,479 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,479 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:24:39,479 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [UPGRADE_NOWAIT]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=? for update nowait 
  2015-06-09 20:24:39,479 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@221dad51]
  2015-06-09 20:24:39,479 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:24:39,479 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:24:39,479 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:24:39,479 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:24:39,479 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:24:39,479 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,479 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [UPGRADE_SKIPLOCKED]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=? for update
  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@771cbb1a]
  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [FORCE]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=? for update nowait 
  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b2e0f78]
  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:24:39,480 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [PESSIMISTIC_READ]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=? for share
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3659d7b1]
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [PESSIMISTIC_WRITE]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=? for update
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bdb2c78]
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:24:39,481 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [PESSIMISTIC_FORCE_INCREMENT]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=? for update nowait 
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c758545]
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [OPTIMISTIC]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=?
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73a19967]
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,482 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,483 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:24:39,483 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [OPTIMISTIC_FORCE_INCREMENT]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=?
  2015-06-09 20:24:39,483 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.TaxSetup: select taxsetup0_.taxSetupID as taxSetup1_36_1_, taxsetup0_.Aliquota as Aliquota2_36_1_, taxsetup0_.SetupName as SetupNam3_36_1_, taxsetup0_.taxID as taxID5_36_1_, taxsetup0_.TaxValue as TaxValue4_36_1_, ruleset1_.taxSetupID as taxSetup9_36_3_, ruleset1_.ruleID as ruleID1_27_3_, ruleset1_.ruleID as ruleID1_27_0_, ruleset1_.ApplyTax as ApplyTax2_27_0_, ruleset1_.ApplyValue as ApplyVal3_27_0_, ruleset1_.creditAccountID as creditAc5_27_0_, ruleset1_.debitAccountID as debitAcc6_27_0_, ruleset1_.distributionRuleID as distribu7_27_0_, ruleset1_.Object as Object4_27_0_, ruleset1_.ruleFormulaID as ruleForm8_27_0_, ruleset1_.taxSetupID as taxSetup9_27_0_ from TaxSetup taxsetup0_ left outer join Rule ruleset1_ on taxsetup0_.taxSetupID=ruleset1_.taxSetupID where taxsetup0_.taxSetupID=?
  2015-06-09 20:24:39,483 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.TaxSetup: select taxsetup0_.taxSetupID as taxSetup1_36_1_, taxsetup0_.Aliquota as Aliquota2_36_1_, taxsetup0_.SetupName as SetupNam3_36_1_, taxsetup0_.taxID as taxID5_36_1_, taxsetup0_.TaxValue as TaxValue4_36_1_, ruleset1_.taxSetupID as taxSetup9_36_3_, ruleset1_.ruleID as ruleID1_27_3_, ruleset1_.ruleID as ruleID1_27_0_, ruleset1_.ApplyTax as ApplyTax2_27_0_, ruleset1_.ApplyValue as ApplyVal3_27_0_, ruleset1_.creditAccountID as creditAc5_27_0_, ruleset1_.debitAccountID as debitAcc6_27_0_, ruleset1_.distributionRuleID as distribu7_27_0_, ruleset1_.Object as Object4_27_0_, ruleset1_.ruleFormulaID as ruleForm8_27_0_, ruleset1_.taxSetupID as taxSetup9_27_0_ from TaxSetup taxsetup0_ left outer join Rule ruleset1_ on taxsetup0_.taxSetupID=ruleset1_.taxSetupID where taxsetup0_.taxSetupID=?
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.Currency
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select currencyID from Currency where currencyID =?
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select currency_.currencyID, currency_.CurrSymbol as CurrSymb2_9_, currency_.Description as Descript3_9_, currency_.FractionalUnit as Fraction4_9_, currency_.Sign as Sign5_9_ from Currency currency_ where currency_.currencyID=?
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Currency (CurrSymbol, Description, FractionalUnit, Sign, currencyID) values (?, ?, ?, ?, ?)
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Currency set CurrSymbol=?, Description=?, FractionalUnit=?, Sign=? where currencyID=?
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Currency where currencyID=?
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e1b9411]
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [NONE]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=?
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec46cdd]
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:24:39,484 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [READ]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=?
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@112d1c8e]
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [UPGRADE]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=? for update
  2015-06-09 20:24:39,485 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4016ccc1]
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [UPGRADE_NOWAIT]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=? for update nowait 
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ffb3598]
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:24:39,486 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [UPGRADE_SKIPLOCKED]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=? for update
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b2f4a93]
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [FORCE]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=? for update nowait 
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@470a659f]
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,487 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [PESSIMISTIC_READ]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=? for share
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a23350]
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [PESSIMISTIC_WRITE]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=? for update
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fca5907]
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:24:39,488 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,489 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,489 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:24:39,489 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [PESSIMISTIC_FORCE_INCREMENT]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=? for update nowait 
  2015-06-09 20:24:39,489 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bebcd65]
  2015-06-09 20:24:39,490 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:24:39,490 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:24:39,490 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:24:39,490 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,490 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,490 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:24:39,490 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:24:39,490 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:24:39,490 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,491 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,491 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:24:39,491 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [OPTIMISTIC]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=?
  2015-06-09 20:24:39,491 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7afb1741]
  2015-06-09 20:24:39,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:24:39,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:24:39,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:24:39,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:24:39,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:24:39,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:24:39,493 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,493 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,493 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:24:39,493 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [OPTIMISTIC_FORCE_INCREMENT]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=?
  2015-06-09 20:24:39,494 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.Currency: select currency0_.currencyID as currency1_9_1_, currency0_.CurrSymbol as CurrSymb2_9_1_, currency0_.Description as Descript3_9_1_, currency0_.FractionalUnit as Fraction4_9_1_, currency0_.Sign as Sign5_9_1_, accountset1_.currencyID as currency9_9_3_, accountset1_.accountID as accountI1_0_3_, accountset1_.accountID as accountI1_0_0_, accountset1_.AccName as AccName2_0_0_, accountset1_.AccountCategory as AccountC3_0_0_, accountset1_.AccountType as AccountT4_0_0_, accountset1_.Balance as Balance5_0_0_, accountset1_.CreditLimit as CreditLi6_0_0_, accountset1_.currencyID as currency9_0_0_, accountset1_.Description as Descript7_0_0_, accountset1_.fatherAccountID as fatherA10_0_0_, accountset1_.Open as Open8_0_0_ from Currency currency0_ left outer join Account accountset1_ on currency0_.currencyID=accountset1_.currencyID where currency0_.currencyID=?
  2015-06-09 20:24:39,494 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.Currency: select currency0_.currencyID as currency1_9_1_, currency0_.CurrSymbol as CurrSymb2_9_1_, currency0_.Description as Descript3_9_1_, currency0_.FractionalUnit as Fraction4_9_1_, currency0_.Sign as Sign5_9_1_, accountset1_.currencyID as currency9_9_3_, accountset1_.accountID as accountI1_0_3_, accountset1_.accountID as accountI1_0_0_, accountset1_.AccName as AccName2_0_0_, accountset1_.AccountCategory as AccountC3_0_0_, accountset1_.AccountType as AccountT4_0_0_, accountset1_.Balance as Balance5_0_0_, accountset1_.CreditLimit as CreditLi6_0_0_, accountset1_.currencyID as currency9_0_0_, accountset1_.Description as Descript7_0_0_, accountset1_.fatherAccountID as fatherA10_0_0_, accountset1_.Open as Open8_0_0_ from Currency currency0_ left outer join Account accountset1_ on currency0_.currencyID=accountset1_.currencyID where currency0_.currencyID=?
  2015-06-09 20:24:39,495 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.OrderExecution
  2015-06-09 20:24:39,495 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select orderExecutionID from OrderExecution where orderExecutionID =?
  2015-06-09 20:24:39,495 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select orderexecu_.orderExecutionID, orderexecu_.ExecutionDateTime as Executio2_25_, orderexecu_.orderID as orderID5_25_, orderexecu_.Price as Price3_25_, orderexecu_.Volume as Volume4_25_ from OrderExecution orderexecu_ where orderexecu_.orderExecutionID=?
  2015-06-09 20:24:39,495 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into OrderExecution (ExecutionDateTime, orderID, Price, Volume, orderExecutionID) values (?, ?, ?, ?, ?)
  2015-06-09 20:24:39,496 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update OrderExecution set ExecutionDateTime=?, orderID=?, Price=?, Volume=? where orderExecutionID=?
  2015-06-09 20:24:39,496 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from OrderExecution where orderExecutionID=?
  2015-06-09 20:24:39,496 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31edeac]
  2015-06-09 20:24:39,496 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:24:39,496 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,496 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,496 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,496 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,496 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,496 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:24:39,496 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [NONE]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=?
  2015-06-09 20:24:39,496 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45bb2aa1]
  2015-06-09 20:24:39,496 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:24:39,496 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,496 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,496 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,498 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,498 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,498 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:24:39,498 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [READ]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=?
  2015-06-09 20:24:39,498 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b1a43d8]
  2015-06-09 20:24:39,498 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:24:39,498 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,498 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,498 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,498 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,499 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,499 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:24:39,499 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [UPGRADE]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=? for update
  2015-06-09 20:24:39,499 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73545b80]
  2015-06-09 20:24:39,499 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:24:39,499 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,499 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,499 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,499 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,500 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,500 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:24:39,500 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [UPGRADE_NOWAIT]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=? for update nowait 
  2015-06-09 20:24:39,500 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74db12c2]
  2015-06-09 20:24:39,500 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:24:39,500 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,500 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,500 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [UPGRADE_SKIPLOCKED]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=? for update
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ea899a9]
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [FORCE]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=? for update nowait 
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b174a73]
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,501 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,502 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:24:39,502 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [PESSIMISTIC_READ]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=? for share
  2015-06-09 20:24:39,502 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1460c81d]
  2015-06-09 20:24:39,502 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:24:39,502 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,502 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,502 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,502 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,503 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,503 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:24:39,503 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [PESSIMISTIC_WRITE]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=? for update
  2015-06-09 20:24:39,503 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@327ed9f5]
  2015-06-09 20:24:39,503 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:24:39,503 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,503 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,503 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [PESSIMISTIC_FORCE_INCREMENT]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=? for update nowait 
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@756b58a7]
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [OPTIMISTIC]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=?
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68b58644]
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,504 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,505 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:24:39,505 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [OPTIMISTIC_FORCE_INCREMENT]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=?
  2015-06-09 20:24:39,505 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.OrderExecution: select orderexecu0_.orderExecutionID as orderExe1_25_2_, orderexecu0_.ExecutionDateTime as Executio2_25_2_, orderexecu0_.orderID as orderID5_25_2_, orderexecu0_.Price as Price3_25_2_, orderexecu0_.Volume as Volume4_25_2_, orders1_.orderID as orderID1_26_0_, orders1_.AveragePrice as AverageP2_26_0_, orders1_.Comment as Comment3_26_0_, orders1_.Duration as Duration4_26_0_, orders1_.ExecutedVolume as Executed5_26_0_, orders1_.OrderDateTime as OrderDat6_26_0_, orders1_.OrderSerial as OrderSer7_26_0_, orders1_.OrderStatus as OrderSta8_26_0_, orders1_.OrderType as OrderTyp9_26_0_, orders1_.Price as Price10_26_0_, orders1_.securityID as securit15_26_0_, orders1_.Side as Side11_26_0_, orders1_.StopPrice as StopPri12_26_0_, orders1_.TradeType as TradeTy13_26_0_, orders1_.Volume as Volume14_26_0_, eventslist2_.orderID as orderID5_26_4_, eventslist2_.orderEventID as orderEve1_24_4_, eventslist2_.orderEventID as orderEve1_24_1_, eventslist2_.EventDateTime as EventDat2_24_1_, eventslist2_.EventType as EventTyp3_24_1_, eventslist2_.Message as Message4_24_1_, eventslist2_.orderID as orderID5_24_1_ from OrderExecution orderexecu0_ inner join Orders orders1_ on orderexecu0_.orderID=orders1_.orderID left outer join OrderEvent eventslist2_ on orders1_.orderID=eventslist2_.orderID where orderexecu0_.orderExecutionID=?
  2015-06-09 20:24:39,506 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.OrderExecution: select orderexecu0_.orderExecutionID as orderExe1_25_2_, orderexecu0_.ExecutionDateTime as Executio2_25_2_, orderexecu0_.orderID as orderID5_25_2_, orderexecu0_.Price as Price3_25_2_, orderexecu0_.Volume as Volume4_25_2_, orders1_.orderID as orderID1_26_0_, orders1_.AveragePrice as AverageP2_26_0_, orders1_.Comment as Comment3_26_0_, orders1_.Duration as Duration4_26_0_, orders1_.ExecutedVolume as Executed5_26_0_, orders1_.OrderDateTime as OrderDat6_26_0_, orders1_.OrderSerial as OrderSer7_26_0_, orders1_.OrderStatus as OrderSta8_26_0_, orders1_.OrderType as OrderTyp9_26_0_, orders1_.Price as Price10_26_0_, orders1_.securityID as securit15_26_0_, orders1_.Side as Side11_26_0_, orders1_.StopPrice as StopPri12_26_0_, orders1_.TradeType as TradeTy13_26_0_, orders1_.Volume as Volume14_26_0_, eventslist2_.orderID as orderID5_26_4_, eventslist2_.orderEventID as orderEve1_24_4_, eventslist2_.orderEventID as orderEve1_24_1_, eventslist2_.EventDateTime as EventDat2_24_1_, eventslist2_.EventType as EventTyp3_24_1_, eventslist2_.Message as Message4_24_1_, eventslist2_.orderID as orderID5_24_1_ from OrderExecution orderexecu0_ inner join Orders orders1_ on orderexecu0_.orderID=orders1_.orderID left outer join OrderEvent eventslist2_ on orders1_.orderID=eventslist2_.orderID where orderexecu0_.orderExecutionID=?
  2015-06-09 20:24:39,506 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.CurrencyQuote
  2015-06-09 20:24:39,506 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select currencyQuoteID from CurrencyQuote where currencyQuoteID =?
  2015-06-09 20:24:39,506 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select currencyqu_.currencyQuoteID, currencyqu_.currencyID as currency4_10_, currencyqu_.QDateTime as QDateTim2_10_, currencyqu_.Value as Value3_10_ from CurrencyQuote currencyqu_ where currencyqu_.currencyQuoteID=?
  2015-06-09 20:24:39,506 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into CurrencyQuote (currencyID, QDateTime, Value, currencyQuoteID) values (?, ?, ?, ?)
  2015-06-09 20:24:39,506 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update CurrencyQuote set currencyID=?, QDateTime=?, Value=? where currencyQuoteID=?
  2015-06-09 20:24:39,506 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from CurrencyQuote where currencyQuoteID=?
  2015-06-09 20:24:39,506 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ae3fb94]
  2015-06-09 20:24:39,506 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,506 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:24:39,506 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,506 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,506 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [NONE]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=?
  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d48673]
  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [READ]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=?
  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21c7208d]
  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [UPGRADE]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=? for update
  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c129ef6]
  2015-06-09 20:24:39,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,508 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:24:39,508 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,508 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,509 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,509 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:24:39,509 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [UPGRADE_NOWAIT]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=? for update nowait 
  2015-06-09 20:24:39,509 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8cbffe]
  2015-06-09 20:24:39,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:24:39,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,509 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,509 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,509 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:24:39,509 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [UPGRADE_SKIPLOCKED]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=? for update
  2015-06-09 20:24:39,509 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e7bf2f]
  2015-06-09 20:24:39,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:24:39,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,509 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,509 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [FORCE]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=? for update nowait 
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25e49cb2]
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [PESSIMISTIC_READ]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=? for share
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23382f76]
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [PESSIMISTIC_WRITE]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=? for update
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d5508e0]
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,510 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,511 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,511 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:24:39,511 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [PESSIMISTIC_FORCE_INCREMENT]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=? for update nowait 
  2015-06-09 20:24:39,511 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37ed010a]
  2015-06-09 20:24:39,511 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,511 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:24:39,511 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,511 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,511 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,511 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:24:39,511 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [OPTIMISTIC]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=?
  2015-06-09 20:24:39,511 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@367d2816]
  2015-06-09 20:24:39,511 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,511 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:24:39,511 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,511 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,511 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [OPTIMISTIC_FORCE_INCREMENT]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=?
  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.CurrencyQuote: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=?
  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.CurrencyQuote: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=?
  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.securities.Segment
  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select segmentID from Segment where segmentID =?
  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select segment_.segmentID, segment_.SegmentName as SegmentN2_32_, segment_.subsectorID as subsecto3_32_ from Segment segment_ where segment_.segmentID=?
  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Segment (SegmentName, subsectorID, segmentID) values (?, ?, ?)
  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Segment set SegmentName=?, subsectorID=? where segmentID=?
  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Segment where segmentID=?
  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a82ebf8]
  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:24:39,512 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [NONE]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=?
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@379ce046]
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [READ]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=?
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d8b319e]
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [UPGRADE]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=? for update
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77e7246b]
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,513 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [UPGRADE_NOWAIT]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=? for update nowait 
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d7b1f1c]
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [UPGRADE_SKIPLOCKED]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=? for update
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f44ddab]
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [FORCE]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=? for update nowait 
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65b66b08]
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:24:39,514 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,515 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,515 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:24:39,515 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [PESSIMISTIC_READ]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=? for share
  2015-06-09 20:24:39,515 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7eb6b6b6]
  2015-06-09 20:24:39,515 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:24:39,515 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:24:39,515 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:24:39,515 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,515 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,515 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:24:39,515 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [PESSIMISTIC_WRITE]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=? for update
  2015-06-09 20:24:39,515 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28e19366]
  2015-06-09 20:24:39,515 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:24:39,515 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:24:39,515 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:24:39,515 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,515 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,516 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:24:39,516 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [PESSIMISTIC_FORCE_INCREMENT]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=? for update nowait 
  2015-06-09 20:24:39,516 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10ef5fa0]
  2015-06-09 20:24:39,516 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:24:39,516 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:24:39,516 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:24:39,516 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,516 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,516 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:24:39,516 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [OPTIMISTIC]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=?
  2015-06-09 20:24:39,516 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10acd6]
  2015-06-09 20:24:39,516 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:24:39,516 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:24:39,516 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:24:39,516 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,516 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,519 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:24:39,519 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [OPTIMISTIC_FORCE_INCREMENT]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=?
  2015-06-09 20:24:39,519 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.securities.Segment: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=?
  2015-06-09 20:24:39,519 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.securities.Segment: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=?
  2015-06-09 20:24:39,520 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.Tax
  2015-06-09 20:24:39,520 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select taxID from Tax where taxID =?
  2015-06-09 20:24:39,520 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select tax_.taxID, tax_.TaxName as TaxName2_35_ from Tax tax_ where tax_.taxID=?
  2015-06-09 20:24:39,520 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Tax (TaxName, taxID) values (?, ?)
  2015-06-09 20:24:39,520 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Tax set TaxName=? where taxID=?
  2015-06-09 20:24:39,520 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Tax where taxID=?
  2015-06-09 20:24:39,520 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b25b095]
  2015-06-09 20:24:39,520 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:24:39,520 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:24:39,520 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,520 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,520 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:24:39,520 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [NONE]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=?
  2015-06-09 20:24:39,520 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59c33386]
  2015-06-09 20:24:39,520 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:24:39,520 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:24:39,520 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,521 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,521 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:24:39,521 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [READ]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=?
  2015-06-09 20:24:39,521 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@719d35e8]
  2015-06-09 20:24:39,521 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:24:39,521 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:24:39,521 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,521 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,521 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:24:39,521 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [UPGRADE]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=? for update
  2015-06-09 20:24:39,521 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ffa56fa]
  2015-06-09 20:24:39,521 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:24:39,521 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:24:39,521 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,521 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,522 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:24:39,522 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [UPGRADE_NOWAIT]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=? for update nowait 
  2015-06-09 20:24:39,522 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@747d1932]
  2015-06-09 20:24:39,522 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:24:39,522 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:24:39,522 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,522 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,522 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:24:39,522 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [UPGRADE_SKIPLOCKED]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=? for update
  2015-06-09 20:24:39,522 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e93dcb9]
  2015-06-09 20:24:39,522 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:24:39,522 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:24:39,522 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,522 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [FORCE]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=? for update nowait 
  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a34e9f]
  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [PESSIMISTIC_READ]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=? for share
  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fc05ea2]
  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [PESSIMISTIC_WRITE]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=? for update
  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6240651f]
  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:24:39,523 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:24:39,524 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,524 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,524 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:24:39,524 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [PESSIMISTIC_FORCE_INCREMENT]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=? for update nowait 
  2015-06-09 20:24:39,524 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ff55ff]
  2015-06-09 20:24:39,524 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:24:39,524 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:24:39,524 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,524 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,524 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:24:39,524 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [OPTIMISTIC]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=?
  2015-06-09 20:24:39,524 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5496c165]
  2015-06-09 20:24:39,524 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:24:39,524 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:24:39,524 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,524 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,524 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:24:39,525 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [OPTIMISTIC_FORCE_INCREMENT]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=?
  2015-06-09 20:24:39,525 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.Tax: select tax0_.taxID as taxID1_35_1_, tax0_.TaxName as TaxName2_35_1_, taxsetupse1_.taxID as taxID5_35_3_, taxsetupse1_.taxSetupID as taxSetup1_36_3_, taxsetupse1_.taxSetupID as taxSetup1_36_0_, taxsetupse1_.Aliquota as Aliquota2_36_0_, taxsetupse1_.SetupName as SetupNam3_36_0_, taxsetupse1_.taxID as taxID5_36_0_, taxsetupse1_.TaxValue as TaxValue4_36_0_ from Tax tax0_ left outer join TaxSetup taxsetupse1_ on tax0_.taxID=taxsetupse1_.taxID where tax0_.taxID=?
  2015-06-09 20:24:39,525 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.Tax: select tax0_.taxID as taxID1_35_1_, tax0_.TaxName as TaxName2_35_1_, taxsetupse1_.taxID as taxID5_35_3_, taxsetupse1_.taxSetupID as taxSetup1_36_3_, taxsetupse1_.taxSetupID as taxSetup1_36_0_, taxsetupse1_.Aliquota as Aliquota2_36_0_, taxsetupse1_.SetupName as SetupNam3_36_0_, taxsetupse1_.taxID as taxID5_36_0_, taxsetupse1_.TaxValue as TaxValue4_36_0_ from Tax tax0_ left outer join TaxSetup taxsetupse1_ on tax0_.taxID=taxsetupse1_.taxID where tax0_.taxID=?
  2015-06-09 20:24:39,525 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.Account
  2015-06-09 20:24:39,525 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select accountID from Account where accountID =?
  2015-06-09 20:24:39,525 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select account_.accountID, account_.AccName as AccName2_0_, account_.AccountCategory as AccountC3_0_, account_.AccountType as AccountT4_0_, account_.Balance as Balance5_0_, account_.CreditLimit as CreditLi6_0_, account_.currencyID as currency9_0_, account_.Description as Descript7_0_, account_.fatherAccountID as fatherA10_0_, account_.Open as Open8_0_ from Account account_ where account_.accountID=?
  2015-06-09 20:24:39,525 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Account (AccName, AccountCategory, AccountType, Balance, CreditLimit, currencyID, Description, fatherAccountID, Open, accountID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
  2015-06-09 20:24:39,525 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Account set AccName=?, AccountCategory=?, AccountType=?, Balance=?, CreditLimit=?, currencyID=?, Description=?, fatherAccountID=?, Open=? where accountID=?
  2015-06-09 20:24:39,525 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Account where accountID=?
  2015-06-09 20:24:39,525 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a03d65c]
  2015-06-09 20:24:39,525 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:24:39,525 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:24:39,525 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:24:39,525 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:24:39,525 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [NONE]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=?
  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43da41e]
  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:24:39,526 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [READ]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=?
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2009f9b0]
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,527 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [UPGRADE]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=? for update
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ad12b6]
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [UPGRADE_NOWAIT]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=? for update nowait 
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@211febf3]
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:24:39,528 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [UPGRADE_SKIPLOCKED]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=? for update
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aba5d30]
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,529 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [FORCE]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=? for update nowait 
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@588307f7]
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,530 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [PESSIMISTIC_READ]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=? for share
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@459cfcca]
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [PESSIMISTIC_WRITE]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=? for update
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ab7ce48]
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:24:39,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [PESSIMISTIC_FORCE_INCREMENT]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=? for update nowait 
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e322ec9]
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:24:39,532 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [OPTIMISTIC]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=?
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e5ee2c9]
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,533 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,534 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:24:39,534 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [OPTIMISTIC_FORCE_INCREMENT]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=?
  2015-06-09 20:24:39,534 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.Account: select account0_.accountID as accountI1_0_1_, account0_.AccName as AccName2_0_1_, account0_.AccountCategory as AccountC3_0_1_, account0_.AccountType as AccountT4_0_1_, account0_.Balance as Balance5_0_1_, account0_.CreditLimit as CreditLi6_0_1_, account0_.currencyID as currency9_0_1_, account0_.Description as Descript7_0_1_, account0_.fatherAccountID as fatherA10_0_1_, account0_.Open as Open8_0_1_, childaccou1_.fatherAccountID as fatherA10_0_3_, childaccou1_.accountID as accountI1_0_3_, childaccou1_.accountID as accountI1_0_0_, childaccou1_.AccName as AccName2_0_0_, childaccou1_.AccountCategory as AccountC3_0_0_, childaccou1_.AccountType as AccountT4_0_0_, childaccou1_.Balance as Balance5_0_0_, childaccou1_.CreditLimit as CreditLi6_0_0_, childaccou1_.currencyID as currency9_0_0_, childaccou1_.Description as Descript7_0_0_, childaccou1_.fatherAccountID as fatherA10_0_0_, childaccou1_.Open as Open8_0_0_ from Account account0_ left outer join Account childaccou1_ on account0_.accountID=childaccou1_.fatherAccountID where account0_.accountID=?
  2015-06-09 20:24:39,535 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.Account: select account0_.accountID as accountI1_0_1_, account0_.AccName as AccName2_0_1_, account0_.AccountCategory as AccountC3_0_1_, account0_.AccountType as AccountT4_0_1_, account0_.Balance as Balance5_0_1_, account0_.CreditLimit as CreditLi6_0_1_, account0_.currencyID as currency9_0_1_, account0_.Description as Descript7_0_1_, account0_.fatherAccountID as fatherA10_0_1_, account0_.Open as Open8_0_1_, childaccou1_.fatherAccountID as fatherA10_0_3_, childaccou1_.accountID as accountI1_0_3_, childaccou1_.accountID as accountI1_0_0_, childaccou1_.AccName as AccName2_0_0_, childaccou1_.AccountCategory as AccountC3_0_0_, childaccou1_.AccountType as AccountT4_0_0_, childaccou1_.Balance as Balance5_0_0_, childaccou1_.CreditLimit as CreditLi6_0_0_, childaccou1_.currencyID as currency9_0_0_, childaccou1_.Description as Descript7_0_0_, childaccou1_.fatherAccountID as fatherA10_0_0_, childaccou1_.Open as Open8_0_0_ from Account account0_ left outer join Account childaccou1_ on account0_.accountID=childaccou1_.fatherAccountID where account0_.accountID=?
  2015-06-09 20:24:39,535 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.marketdata.MarketTrade
  2015-06-09 20:24:39,535 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select marketTradeID from MarketTrade where marketTradeID =?
  2015-06-09 20:24:39,535 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select markettrad_.marketTradeID, markettrad_.buyOrderID as buyOrder5_23_, markettrad_.Price as Price2_23_, markettrad_.sellOrderID as sellOrde6_23_, markettrad_.TradeDateTime as TradeDat3_23_, markettrad_.Volume as Volume4_23_ from MarketTrade markettrad_ where markettrad_.marketTradeID=?
  2015-06-09 20:24:39,535 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into MarketTrade (buyOrderID, Price, sellOrderID, TradeDateTime, Volume, marketTradeID) values (?, ?, ?, ?, ?, ?)
  2015-06-09 20:24:39,535 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update MarketTrade set buyOrderID=?, Price=?, sellOrderID=?, TradeDateTime=?, Volume=? where marketTradeID=?
  2015-06-09 20:24:39,535 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from MarketTrade where marketTradeID=?
  2015-06-09 20:24:39,535 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4afd21c6]
  2015-06-09 20:24:39,535 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:24:39,535 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,535 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:24:39,535 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:24:39,535 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,535 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,535 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [NONE]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=?
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1416a80a]
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [READ]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=?
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52cb4f50]
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,536 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [UPGRADE]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=? for update
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d27d9d]
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [UPGRADE_NOWAIT]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=? for update nowait 
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20411320]
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [UPGRADE_SKIPLOCKED]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=? for update
  2015-06-09 20:24:39,537 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c782d8e]
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [FORCE]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=? for update nowait 
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f5eae0f]
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [PESSIMISTIC_READ]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=? for share
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@255e5e2e]
  2015-06-09 20:24:39,538 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:24:39,539 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,539 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:24:39,539 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:24:39,539 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,539 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,539 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,560 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [PESSIMISTIC_WRITE]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=? for update
  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b0e5507]
  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [PESSIMISTIC_FORCE_INCREMENT]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=? for update nowait 
  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c46dcbe]
  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,561 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,562 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,562 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:24:39,562 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [OPTIMISTIC]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=?
  2015-06-09 20:24:39,562 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1108adc8]
  2015-06-09 20:24:39,562 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:24:39,562 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,562 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:24:39,562 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:24:39,562 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,562 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,564 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,564 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:24:39,564 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [OPTIMISTIC_FORCE_INCREMENT]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=?
  2015-06-09 20:24:39,565 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.marketdata.MarketTrade: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=?
  2015-06-09 20:24:39,566 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.marketdata.MarketTrade: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=?
  2015-06-09 20:24:39,566 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.JournalEntry
  2015-06-09 20:24:39,566 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select entryID from JournalEntry where entryID =?
  2015-06-09 20:24:39,566 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select journalent_.entryID, journalent_.Description as Descript2_20_, journalent_.EntryClose as EntryClo3_20_, journalent_.JournalStatus as JournalS5_20_ from JournalEntry journalent_ where journalent_.entryID=?
  2015-06-09 20:24:39,566 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into JournalEntry (Description, EntryClose, EntryDate, JournalStatus, entryID) values (?, ?, ?, ?, ?)
  2015-06-09 20:24:39,566 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update JournalEntry set Description=?, EntryClose=?, JournalStatus=? where entryID=?
  2015-06-09 20:24:39,566 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from JournalEntry where entryID=?
  2015-06-09 20:24:39,567 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20011bf]
  2015-06-09 20:24:39,569 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,569 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:24:39,569 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:24:39,569 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,569 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:24:39,570 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,570 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [NONE]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=?
  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eb2172]
  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [READ]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=?
  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43f0c2d1]
  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:24:39,572 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,572 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,572 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:24:39,572 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [UPGRADE]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=? for update
  2015-06-09 20:24:39,572 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38a1a26]
  2015-06-09 20:24:39,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:24:39,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:24:39,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:24:39,572 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,572 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,573 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:24:39,573 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [UPGRADE_NOWAIT]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=? for update nowait 
  2015-06-09 20:24:39,573 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a1f45ed]
  2015-06-09 20:24:39,573 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,573 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:24:39,573 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:24:39,573 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,573 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:24:39,573 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,575 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,575 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:24:39,575 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [UPGRADE_SKIPLOCKED]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=? for update
  2015-06-09 20:24:39,575 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@444cc791]
  2015-06-09 20:24:39,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:24:39,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:24:39,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:24:39,575 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,575 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,576 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:24:39,576 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [FORCE]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=? for update nowait 
  2015-06-09 20:24:39,576 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c6c6f24]
  2015-06-09 20:24:39,576 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,576 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:24:39,576 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:24:39,576 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,576 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:24:39,576 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,576 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,577 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:24:39,577 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [PESSIMISTIC_READ]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=? for share
  2015-06-09 20:24:39,577 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c6b2dd9]
  2015-06-09 20:24:39,577 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,577 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:24:39,577 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:24:39,577 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,577 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:24:39,577 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,578 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,578 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:24:39,578 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [PESSIMISTIC_WRITE]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=? for update
  2015-06-09 20:24:39,589 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ca93621]
  2015-06-09 20:24:39,590 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,590 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:24:39,590 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:24:39,590 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,590 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:24:39,590 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,595 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,595 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:24:39,595 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [PESSIMISTIC_FORCE_INCREMENT]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=? for update nowait 
  2015-06-09 20:24:39,595 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f985a86]
  2015-06-09 20:24:39,595 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,595 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:24:39,595 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:24:39,595 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,595 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:24:39,595 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,605 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,606 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:24:39,606 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [OPTIMISTIC]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=?
  2015-06-09 20:24:39,606 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12ffd1de]
  2015-06-09 20:24:39,606 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,606 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:24:39,606 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:24:39,606 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:24:39,606 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:24:39,606 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,606 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,607 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:24:39,607 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [OPTIMISTIC_FORCE_INCREMENT]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=?
  2015-06-09 20:24:39,607 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.JournalEntry: select journalent0_.entryID as entryID1_20_1_, journalent0_.Description as Descript2_20_1_, journalent0_.EntryClose as EntryClo3_20_1_, journalent0_.EntryDate as EntryDat4_20_1_, journalent0_.JournalStatus as JournalS5_20_1_, entryregis1_.entryID as entryID10_20_3_, entryregis1_.entryRegisterID as entryReg1_14_3_, entryregis1_.entryRegisterID as entryReg1_14_0_, entryregis1_.Credit as Credit2_14_0_, entryregis1_.creditAccountID as creditAc7_14_0_, entryregis1_.currencyID as currency8_14_0_, entryregis1_.Debit as Debit3_14_0_, entryregis1_.debitAccountID as debitAcc9_14_0_, entryregis1_.Description as Descript4_14_0_, entryregis1_.entryID as entryID10_14_0_, entryregis1_.EntryType as EntryTyp5_14_0_, entryregis1_.OperationID as Operatio6_14_0_ from JournalEntry journalent0_ left outer join EntryRegister entryregis1_ on journalent0_.entryID=entryregis1_.entryID where journalent0_.entryID=?
  2015-06-09 20:24:39,607 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.JournalEntry: select journalent0_.entryID as entryID1_20_1_, journalent0_.Description as Descript2_20_1_, journalent0_.EntryClose as EntryClo3_20_1_, journalent0_.EntryDate as EntryDat4_20_1_, journalent0_.JournalStatus as JournalS5_20_1_, entryregis1_.entryID as entryID10_20_3_, entryregis1_.entryRegisterID as entryReg1_14_3_, entryregis1_.entryRegisterID as entryReg1_14_0_, entryregis1_.Credit as Credit2_14_0_, entryregis1_.creditAccountID as creditAc7_14_0_, entryregis1_.currencyID as currency8_14_0_, entryregis1_.Debit as Debit3_14_0_, entryregis1_.debitAccountID as debitAcc9_14_0_, entryregis1_.Description as Descript4_14_0_, entryregis1_.entryID as entryID10_14_0_, entryregis1_.EntryType as EntryTyp5_14_0_, entryregis1_.OperationID as Operatio6_14_0_ from JournalEntry journalent0_ left outer join EntryRegister entryregis1_ on journalent0_.entryID=entryregis1_.entryID where journalent0_.entryID=?
  2015-06-09 20:24:39,608 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.OrderEvent
  2015-06-09 20:24:39,608 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select orderEventID from OrderEvent where orderEventID =?
  2015-06-09 20:24:39,608 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select orderevent_.orderEventID, orderevent_.EventDateTime as EventDat2_24_, orderevent_.EventType as EventTyp3_24_, orderevent_.Message as Message4_24_, orderevent_.orderID as orderID5_24_ from OrderEvent orderevent_ where orderevent_.orderEventID=?
  2015-06-09 20:24:39,608 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into OrderEvent (EventDateTime, EventType, Message, orderID, orderEventID) values (?, ?, ?, ?, ?)
  2015-06-09 20:24:39,608 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update OrderEvent set EventDateTime=?, EventType=?, Message=?, orderID=? where orderEventID=?
  2015-06-09 20:24:39,608 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from OrderEvent where orderEventID=?
  2015-06-09 20:24:39,608 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4096aa05]
  2015-06-09 20:24:39,608 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:24:39,608 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:24:39,608 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:24:39,608 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,608 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,608 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,608 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [NONE]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=?
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c806c8b]
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [READ]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=?
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@184fb68d]
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [UPGRADE]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=? for update
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e530163]
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,609 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [UPGRADE_NOWAIT]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=? for update nowait 
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71466383]
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [UPGRADE_SKIPLOCKED]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=? for update
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4088741b]
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [FORCE]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=? for update nowait 
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54bca971]
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:24:39,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [PESSIMISTIC_READ]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=? for share
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@205bed61]
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [PESSIMISTIC_WRITE]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=? for update
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23592946]
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [PESSIMISTIC_FORCE_INCREMENT]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=? for update nowait 
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2b58c0]
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:24:39,611 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:24:39,612 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:24:39,612 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,612 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,612 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,612 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:24:39,612 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [OPTIMISTIC]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=?
  2015-06-09 20:24:39,612 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bca6fac]
  2015-06-09 20:24:39,612 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:24:39,612 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:24:39,612 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:24:39,612 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,612 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,612 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,612 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:24:39,612 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [OPTIMISTIC_FORCE_INCREMENT]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=?
  2015-06-09 20:24:39,612 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.OrderEvent: select orderevent0_.orderEventID as orderEve1_24_2_, orderevent0_.EventDateTime as EventDat2_24_2_, orderevent0_.EventType as EventTyp3_24_2_, orderevent0_.Message as Message4_24_2_, orderevent0_.orderID as orderID5_24_2_, orders1_.orderID as orderID1_26_0_, orders1_.AveragePrice as AverageP2_26_0_, orders1_.Comment as Comment3_26_0_, orders1_.Duration as Duration4_26_0_, orders1_.ExecutedVolume as Executed5_26_0_, orders1_.OrderDateTime as OrderDat6_26_0_, orders1_.OrderSerial as OrderSer7_26_0_, orders1_.OrderStatus as OrderSta8_26_0_, orders1_.OrderType as OrderTyp9_26_0_, orders1_.Price as Price10_26_0_, orders1_.securityID as securit15_26_0_, orders1_.Side as Side11_26_0_, orders1_.StopPrice as StopPri12_26_0_, orders1_.TradeType as TradeTy13_26_0_, orders1_.Volume as Volume14_26_0_, executions2_.orderID as orderID5_26_4_, executions2_.orderExecutionID as orderExe1_25_4_, executions2_.orderExecutionID as orderExe1_25_1_, executions2_.ExecutionDateTime as Executio2_25_1_, executions2_.orderID as orderID5_25_1_, executions2_.Price as Price3_25_1_, executions2_.Volume as Volume4_25_1_ from OrderEvent orderevent0_ inner join Orders orders1_ on orderevent0_.orderID=orders1_.orderID left outer join OrderExecution executions2_ on orders1_.orderID=executions2_.orderID where orderevent0_.orderEventID=?
  2015-06-09 20:24:39,613 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.OrderEvent: select orderevent0_.orderEventID as orderEve1_24_2_, orderevent0_.EventDateTime as EventDat2_24_2_, orderevent0_.EventType as EventTyp3_24_2_, orderevent0_.Message as Message4_24_2_, orderevent0_.orderID as orderID5_24_2_, orders1_.orderID as orderID1_26_0_, orders1_.AveragePrice as AverageP2_26_0_, orders1_.Comment as Comment3_26_0_, orders1_.Duration as Duration4_26_0_, orders1_.ExecutedVolume as Executed5_26_0_, orders1_.OrderDateTime as OrderDat6_26_0_, orders1_.OrderSerial as OrderSer7_26_0_, orders1_.OrderStatus as OrderSta8_26_0_, orders1_.OrderType as OrderTyp9_26_0_, orders1_.Price as Price10_26_0_, orders1_.securityID as securit15_26_0_, orders1_.Side as Side11_26_0_, orders1_.StopPrice as StopPri12_26_0_, orders1_.TradeType as TradeTy13_26_0_, orders1_.Volume as Volume14_26_0_, executions2_.orderID as orderID5_26_4_, executions2_.orderExecutionID as orderExe1_25_4_, executions2_.orderExecutionID as orderExe1_25_1_, executions2_.ExecutionDateTime as Executio2_25_1_, executions2_.orderID as orderID5_25_1_, executions2_.Price as Price3_25_1_, executions2_.Volume as Volume4_25_1_ from OrderEvent orderevent0_ inner join Orders orders1_ on orderevent0_.orderID=orders1_.orderID left outer join OrderExecution executions2_ on orders1_.orderID=executions2_.orderID where orderevent0_.orderEventID=?
  2015-06-09 20:24:39,626 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@228cea97]
  2015-06-09 20:24:39,626 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d0a61c8]
  2015-06-09 20:24:39,627 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:24:39,627 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,627 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : orderID
  2015-06-09 20:24:39,627 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,627 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,627 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,630 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,631 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.Orders.executionsList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.Orders.executionsList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.Orders.executionsList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.Orders.executionsList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.Orders.executionsList)
          - SQL table alias mapping - executions0_
          - alias suffix - 0_
          - suffixed key columns - {orderID5_26_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - orderExe1_25_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.OrderExecution)
                - SQL table alias mapping - executions0_
                - alias suffix - 1_
                - suffixed key columns - {orderExe1_25_1_}

  2015-06-09 20:24:39,632 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.Orders.executionsList: select executions0_.orderID as orderID5_26_0_, executions0_.orderExecutionID as orderExe1_25_0_, executions0_.orderExecutionID as orderExe1_25_1_, executions0_.ExecutionDateTime as Executio2_25_1_, executions0_.orderID as orderID5_25_1_, executions0_.Price as Price3_25_1_, executions0_.Volume as Volume4_25_1_ from OrderExecution executions0_ where executions0_.orderID=?
  2015-06-09 20:24:39,632 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e17913b]
  2015-06-09 20:24:39,632 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@149c3204]
  2015-06-09 20:24:39,632 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:24:39,632 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:24:39,632 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:24:39,632 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:24:39,632 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:24:39,632 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:24:39,632 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:24:39,632 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:24:39,632 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : taxSetupID
  2015-06-09 20:24:39,632 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,633 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,633 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.TaxSetup.ruleSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.TaxSetup.ruleSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.TaxSetup.ruleSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.TaxSetup.ruleSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.TaxSetup.ruleSet)
          - SQL table alias mapping - ruleset0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup9_36_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ruleID1_27_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.Rule)
                - SQL table alias mapping - ruleset0_
                - alias suffix - 1_
                - suffixed key columns - {ruleID1_27_1_}

  2015-06-09 20:24:39,633 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.TaxSetup.ruleSet: select ruleset0_.taxSetupID as taxSetup9_36_0_, ruleset0_.ruleID as ruleID1_27_0_, ruleset0_.ruleID as ruleID1_27_1_, ruleset0_.ApplyTax as ApplyTax2_27_1_, ruleset0_.ApplyValue as ApplyVal3_27_1_, ruleset0_.creditAccountID as creditAc5_27_1_, ruleset0_.debitAccountID as debitAcc6_27_1_, ruleset0_.distributionRuleID as distribu7_27_1_, ruleset0_.Object as Object4_27_1_, ruleset0_.ruleFormulaID as ruleForm8_27_1_, ruleset0_.taxSetupID as taxSetup9_27_1_ from Rule ruleset0_ where ruleset0_.taxSetupID=?
  2015-06-09 20:24:39,633 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b9632d1]
  2015-06-09 20:24:39,633 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e6f2bb5]
  2015-06-09 20:24:39,633 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:24:39,633 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,633 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:24:39,633 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : sellOrderID
  2015-06-09 20:24:39,633 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:24:39,633 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,633 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,633 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,633 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.marketdata.MarketOrder.sellTradeList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.marketdata.MarketOrder.sellTradeList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.marketdata.MarketOrder.sellTradeList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.marketdata.MarketOrder.sellTradeList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.marketdata.MarketOrder.sellTradeList)
          - SQL table alias mapping - selltradel0_
          - alias suffix - 0_
          - suffixed key columns - {sellOrde6_22_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marketTr1_23_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
                - SQL table alias mapping - selltradel0_
                - alias suffix - 1_
                - suffixed key columns - {marketTr1_23_1_}

  2015-06-09 20:24:39,634 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.marketdata.MarketOrder.sellTradeList: select selltradel0_.sellOrderID as sellOrde6_22_0_, selltradel0_.marketTradeID as marketTr1_23_0_, selltradel0_.marketTradeID as marketTr1_23_1_, selltradel0_.buyOrderID as buyOrder5_23_1_, selltradel0_.Price as Price2_23_1_, selltradel0_.sellOrderID as sellOrde6_23_1_, selltradel0_.TradeDateTime as TradeDat3_23_1_, selltradel0_.Volume as Volume4_23_1_ from MarketTrade selltradel0_ where selltradel0_.sellOrderID=?
  2015-06-09 20:24:39,634 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35e8316e]
  2015-06-09 20:24:39,634 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26d96e5]
  2015-06-09 20:24:39,634 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:24:39,634 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : companySet
  2015-06-09 20:24:39,634 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:24:39,634 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:24:39,634 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,635 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,635 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Company.segmentSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Company.segmentSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Company.segmentSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Company.segmentSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Company.segmentSet)
          - SQL table alias mapping - segmentset0_
          - alias suffix - 0_
          - suffixed key columns - {companyI1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - segmentI1_32_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.Segment)
                - SQL table alias mapping - segment1_
                - alias suffix - 1_
                - suffixed key columns - {segmentI1_32_1_}

  2015-06-09 20:24:39,635 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Company.segmentSet: select segmentset0_.companyID as companyI1_4_0_, segmentset0_.segmentID as segmentI2_5_0_, segment1_.segmentID as segmentI1_32_1_, segment1_.SegmentName as SegmentN2_32_1_, segment1_.subsectorID as subsecto3_32_1_ from CompanySegment segmentset0_ inner join Segment segment1_ on segmentset0_.segmentID=segment1_.segmentID where segmentset0_.companyID=?
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fac521d]
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38af1bf6]
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : depositAccount
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Account.depositSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Account.depositSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Account.depositSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Account.depositSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Account.depositSet)
          - SQL table alias mapping - depositset0_
          - alias suffix - 0_
          - suffixed key columns - {DepositA5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - depositI1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.Deposit)
                - SQL table alias mapping - depositset0_
                - alias suffix - 1_
                - suffixed key columns - {depositI1_11_1_}

  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Account.depositSet: select depositset0_.DepositAccount as DepositA5_0_0_, depositset0_.depositID as depositI1_11_0_, depositset0_.depositID as depositI1_11_1_, depositset0_.DepositAccount as DepositA5_11_1_, depositset0_.DepositDate as DepositD2_11_1_, depositset0_.Description as Descript3_11_1_, depositset0_.Value as Value4_11_1_ from Deposit depositset0_ where depositset0_.DepositAccount=?
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3abfe845]
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a0f244f]
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : orderID
  2015-06-09 20:24:39,636 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,637 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,637 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.Orders.eventsList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.Orders.eventsList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.Orders.eventsList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.Orders.eventsList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.Orders.eventsList)
          - SQL table alias mapping - eventslist0_
          - alias suffix - 0_
          - suffixed key columns - {orderID5_26_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - orderEve1_24_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.OrderEvent)
                - SQL table alias mapping - eventslist0_
                - alias suffix - 1_
                - suffixed key columns - {orderEve1_24_1_}

  2015-06-09 20:24:39,637 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.Orders.eventsList: select eventslist0_.orderID as orderID5_26_0_, eventslist0_.orderEventID as orderEve1_24_0_, eventslist0_.orderEventID as orderEve1_24_1_, eventslist0_.EventDateTime as EventDat2_24_1_, eventslist0_.EventType as EventTyp3_24_1_, eventslist0_.Message as Message4_24_1_, eventslist0_.orderID as orderID5_24_1_ from OrderEvent eventslist0_ where eventslist0_.orderID=?
  2015-06-09 20:24:39,637 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f08caf]
  2015-06-09 20:24:39,637 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4defd42]
  2015-06-09 20:24:39,637 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : cnpj
  2015-06-09 20:24:39,637 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyDate
  2015-06-09 20:24:39,637 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyName
  2015-06-09 20:24:39,637 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketName
  2015-06-09 20:24:39,637 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : onShares
  2015-06-09 20:24:39,637 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : pnShares
  2015-06-09 20:24:39,637 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:24:39,637 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : segmentSet
  2015-06-09 20:24:39,637 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:24:39,637 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stockExchangeID
  2015-06-09 20:24:39,637 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,637 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Segment.companySet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Segment.companySet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Segment.companySet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.securities.Company, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Segment.companySet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Segment.companySet)
          - SQL table alias mapping - companyset0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI2_32_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - companyI1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.Company)
                - SQL table alias mapping - company1_
                - alias suffix - 1_
                - suffixed key columns - {companyI1_4_1_}

  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Segment.companySet: select companyset0_.segmentID as segmentI2_32_0_, companyset0_.companyID as companyI1_5_0_, company1_.companyID as companyI1_4_1_, company1_.CNPJ as CNPJ2_4_1_, company1_.CompanyDate as CompanyD3_4_1_, company1_.CompanyName as CompanyN4_4_1_, company1_.MarketName as MarketNa5_4_1_, company1_.OnShares as OnShares6_4_1_, company1_.PnShares as PnShares7_4_1_, company1_.Status as Status8_4_1_, company1_.stockExchangeID as stockExc9_4_1_ from CompanySegment companyset0_ inner join Company company1_ on companyset0_.companyID=company1_.companyID where companyset0_.segmentID=?
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27a2a089]
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54657dd2]
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : currencyID
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,638 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,639 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Currency.accountSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Currency.accountSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Currency.accountSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Currency.accountSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Currency.accountSet)
          - SQL table alias mapping - accountset0_
          - alias suffix - 0_
          - suffixed key columns - {currency9_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - accountI1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.Account)
                - SQL table alias mapping - accountset0_
                - alias suffix - 1_
                - suffixed key columns - {accountI1_0_1_}

  2015-06-09 20:24:39,640 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Currency.accountSet: select accountset0_.currencyID as currency9_9_0_, accountset0_.accountID as accountI1_0_0_, accountset0_.accountID as accountI1_0_1_, accountset0_.AccName as AccName2_0_1_, accountset0_.AccountCategory as AccountC3_0_1_, accountset0_.AccountType as AccountT4_0_1_, accountset0_.Balance as Balance5_0_1_, accountset0_.CreditLimit as CreditLi6_0_1_, accountset0_.currencyID as currency9_0_1_, accountset0_.Description as Descript7_0_1_, accountset0_.fatherAccountID as fatherA10_0_1_, accountset0_.Open as Open8_0_1_ from Account accountset0_ where accountset0_.currencyID=?
  2015-06-09 20:24:39,640 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40e60ece]
  2015-06-09 20:24:39,640 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f9270ed]
  2015-06-09 20:24:39,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:24:39,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:24:39,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:24:39,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:24:39,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : taxID
  2015-06-09 20:24:39,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:24:39,640 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,640 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,640 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Tax.taxSetupSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Tax.taxSetupSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Tax.taxSetupSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Tax.taxSetupSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Tax.taxSetupSet)
          - SQL table alias mapping - taxsetupse0_
          - alias suffix - 0_
          - suffixed key columns - {taxID5_35_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - taxSetup1_36_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.TaxSetup)
                - SQL table alias mapping - taxsetupse0_
                - alias suffix - 1_
                - suffixed key columns - {taxSetup1_36_1_}

  2015-06-09 20:24:39,640 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Tax.taxSetupSet: select taxsetupse0_.taxID as taxID5_35_0_, taxsetupse0_.taxSetupID as taxSetup1_36_0_, taxsetupse0_.taxSetupID as taxSetup1_36_1_, taxsetupse0_.Aliquota as Aliquota2_36_1_, taxsetupse0_.SetupName as SetupNam3_36_1_, taxsetupse0_.taxID as taxID5_36_1_, taxsetupse0_.TaxValue as TaxValue4_36_1_ from TaxSetup taxsetupse0_ where taxsetupse0_.taxID=?
  2015-06-09 20:24:39,640 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2aa6311a]
  2015-06-09 20:24:39,640 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61f39bb]
  2015-06-09 20:24:39,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : debitAccountID
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Account.entryRegisterDbtSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Account.entryRegisterDbtSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Account.entryRegisterDbtSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Account.entryRegisterDbtSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Account.entryRegisterDbtSet)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {debitAcc9_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - entryReg1_14_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.EntryRegister)
                - SQL table alias mapping - entryregis0_
                - alias suffix - 1_
                - suffixed key columns - {entryReg1_14_1_}

  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Account.entryRegisterDbtSet: select entryregis0_.debitAccountID as debitAcc9_0_0_, entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.entryRegisterID as entryReg1_14_1_, entryregis0_.Credit as Credit2_14_1_, entryregis0_.creditAccountID as creditAc7_14_1_, entryregis0_.currencyID as currency8_14_1_, entryregis0_.Debit as Debit3_14_1_, entryregis0_.debitAccountID as debitAcc9_14_1_, entryregis0_.Description as Descript4_14_1_, entryregis0_.entryID as entryID10_14_1_, entryregis0_.EntryType as EntryTyp5_14_1_, entryregis0_.OperationID as Operatio6_14_1_ from EntryRegister entryregis0_ where entryregis0_.debitAccountID=?
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53a665ad]
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c0b4c83]
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : creditAccountID
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,641 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Account.entryRegisterCrdtSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Account.entryRegisterCrdtSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Account.entryRegisterCrdtSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Account.entryRegisterCrdtSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Account.entryRegisterCrdtSet)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {creditAc7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - entryReg1_14_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.EntryRegister)
                - SQL table alias mapping - entryregis0_
                - alias suffix - 1_
                - suffixed key columns - {entryReg1_14_1_}

  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Account.entryRegisterCrdtSet: select entryregis0_.creditAccountID as creditAc7_0_0_, entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.entryRegisterID as entryReg1_14_1_, entryregis0_.Credit as Credit2_14_1_, entryregis0_.creditAccountID as creditAc7_14_1_, entryregis0_.currencyID as currency8_14_1_, entryregis0_.Debit as Debit3_14_1_, entryregis0_.debitAccountID as debitAcc9_14_1_, entryregis0_.Description as Descript4_14_1_, entryregis0_.entryID as entryID10_14_1_, entryregis0_.EntryType as EntryTyp5_14_1_, entryregis0_.OperationID as Operatio6_14_1_ from EntryRegister entryregis0_ where entryregis0_.creditAccountID=?
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d654825]
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bfc6a5e]
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : childAccounts
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : fatherAccountID
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,642 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Account.childAccounts)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Account.childAccounts, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Account.childAccounts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Account.childAccounts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Account.childAccounts)
          - SQL table alias mapping - childaccou0_
          - alias suffix - 0_
          - suffixed key columns - {fatherA10_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - accountI1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.Account)
                - SQL table alias mapping - childaccou0_
                - alias suffix - 1_
                - suffixed key columns - {accountI1_0_1_}

  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Account.childAccounts: select childaccou0_.fatherAccountID as fatherA10_0_0_, childaccou0_.accountID as accountI1_0_0_, childaccou0_.accountID as accountI1_0_1_, childaccou0_.AccName as AccName2_0_1_, childaccou0_.AccountCategory as AccountC3_0_1_, childaccou0_.AccountType as AccountT4_0_1_, childaccou0_.Balance as Balance5_0_1_, childaccou0_.CreditLimit as CreditLi6_0_1_, childaccou0_.currencyID as currency9_0_1_, childaccou0_.Description as Descript7_0_1_, childaccou0_.fatherAccountID as fatherA10_0_1_, childaccou0_.Open as Open8_0_1_ from Account childaccou0_ where childaccou0_.fatherAccountID=?
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d7cada5]
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@350a94ce]
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderID
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.marketdata.MarketOrder.eventsList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.marketdata.MarketOrder.eventsList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.marketdata.MarketOrder.eventsList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.marketdata.MarketEvent, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.marketdata.MarketOrder.eventsList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.marketdata.MarketOrder.eventsList)
          - SQL table alias mapping - eventslist0_
          - alias suffix - 0_
          - suffixed key columns - {marketEv1_22_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marketEv1_21_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.marketdata.MarketEvent)
                - SQL table alias mapping - eventslist0_
                - alias suffix - 1_
                - suffixed key columns - {marketEv1_21_1_}

  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.marketdata.MarketOrder.eventsList: select eventslist0_.marketEventID as marketEv1_22_0_, eventslist0_.marketEventID as marketEv1_21_0_, eventslist0_.marketEventID as marketEv1_21_1_, eventslist0_.EventDateTime as EventDat2_21_1_, eventslist0_.EventType as EventTyp3_21_1_, eventslist0_.marketOrderID as marketOr5_21_1_, eventslist0_.Message as Message4_21_1_ from MarketEvent eventslist0_ where eventslist0_.marketEventID=?
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3964d79]
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62db0521]
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : creditAccountID
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:24:39,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:24:39,644 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,644 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,644 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Account.ruleCrdtAccSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Account.ruleCrdtAccSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Account.ruleCrdtAccSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Account.ruleCrdtAccSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Account.ruleCrdtAccSet)
          - SQL table alias mapping - rulecrdtac0_
          - alias suffix - 0_
          - suffixed key columns - {creditAc5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ruleID1_27_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.Rule)
                - SQL table alias mapping - rulecrdtac0_
                - alias suffix - 1_
                - suffixed key columns - {ruleID1_27_1_}

  2015-06-09 20:24:39,644 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Account.ruleCrdtAccSet: select rulecrdtac0_.creditAccountID as creditAc5_0_0_, rulecrdtac0_.ruleID as ruleID1_27_0_, rulecrdtac0_.ruleID as ruleID1_27_1_, rulecrdtac0_.ApplyTax as ApplyTax2_27_1_, rulecrdtac0_.ApplyValue as ApplyVal3_27_1_, rulecrdtac0_.creditAccountID as creditAc5_27_1_, rulecrdtac0_.debitAccountID as debitAcc6_27_1_, rulecrdtac0_.distributionRuleID as distribu7_27_1_, rulecrdtac0_.Object as Object4_27_1_, rulecrdtac0_.ruleFormulaID as ruleForm8_27_1_, rulecrdtac0_.taxSetupID as taxSetup9_27_1_ from Rule rulecrdtac0_ where rulecrdtac0_.creditAccountID=?
  2015-06-09 20:24:39,644 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fbdc49b]
  2015-06-09 20:24:39,644 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65753040]
  2015-06-09 20:24:39,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : currencyID
  2015-06-09 20:24:39,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:24:39,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:24:39,644 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,644 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,644 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Currency.currencyQuoteSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Currency.currencyQuoteSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Currency.currencyQuoteSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Currency.currencyQuoteSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Currency.currencyQuoteSet)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency4_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - currency1_10_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.CurrencyQuote)
                - SQL table alias mapping - currencyqu0_
                - alias suffix - 1_
                - suffixed key columns - {currency1_10_1_}

  2015-06-09 20:24:39,644 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Currency.currencyQuoteSet: select currencyqu0_.currencyID as currency4_9_0_, currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyQuoteID as currency1_10_1_, currencyqu0_.currencyID as currency4_10_1_, currencyqu0_.QDateTime as QDateTim2_10_1_, currencyqu0_.Value as Value3_10_1_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyID=?
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7be3a9ce]
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37d871c2]
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : entryID
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.JournalEntry.entryRegisterSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.JournalEntry.entryRegisterSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.JournalEntry.entryRegisterSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.JournalEntry.entryRegisterSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.JournalEntry.entryRegisterSet)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {entryID10_20_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - entryReg1_14_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.EntryRegister)
                - SQL table alias mapping - entryregis0_
                - alias suffix - 1_
                - suffixed key columns - {entryReg1_14_1_}

  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.JournalEntry.entryRegisterSet: select entryregis0_.entryID as entryID10_20_0_, entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.entryRegisterID as entryReg1_14_1_, entryregis0_.Credit as Credit2_14_1_, entryregis0_.creditAccountID as creditAc7_14_1_, entryregis0_.currencyID as currency8_14_1_, entryregis0_.Debit as Debit3_14_1_, entryregis0_.debitAccountID as debitAcc9_14_1_, entryregis0_.Description as Descript4_14_1_, entryregis0_.entryID as entryID10_14_1_, entryregis0_.EntryType as EntryTyp5_14_1_, entryregis0_.OperationID as Operatio6_14_1_ from EntryRegister entryregis0_ where entryregis0_.entryID=?
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e1459ea]
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ab6678b]
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : buyOrderID
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,645 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.marketdata.MarketOrder.buyTradeList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.marketdata.MarketOrder.buyTradeList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.marketdata.MarketOrder.buyTradeList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.marketdata.MarketOrder.buyTradeList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.marketdata.MarketOrder.buyTradeList)
          - SQL table alias mapping - buytradeli0_
          - alias suffix - 0_
          - suffixed key columns - {buyOrder5_22_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marketTr1_23_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
                - SQL table alias mapping - buytradeli0_
                - alias suffix - 1_
                - suffixed key columns - {marketTr1_23_1_}

  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.marketdata.MarketOrder.buyTradeList: select buytradeli0_.buyOrderID as buyOrder5_22_0_, buytradeli0_.marketTradeID as marketTr1_23_0_, buytradeli0_.marketTradeID as marketTr1_23_1_, buytradeli0_.buyOrderID as buyOrder5_23_1_, buytradeli0_.Price as Price2_23_1_, buytradeli0_.sellOrderID as sellOrde6_23_1_, buytradeli0_.TradeDateTime as TradeDat3_23_1_, buytradeli0_.Volume as Volume4_23_1_ from MarketTrade buytradeli0_ where buytradeli0_.buyOrderID=?
  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@476e8796]
  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eed2acf]
  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : ruleFormulaID
  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.RuleFormula.ruleSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.RuleFormula.ruleSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.RuleFormula.ruleSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.RuleFormula.ruleSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.RuleFormula.ruleSet)
          - SQL table alias mapping - ruleset0_
          - alias suffix - 0_
          - suffixed key columns - {ruleForm8_28_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ruleID1_27_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.Rule)
                - SQL table alias mapping - ruleset0_
                - alias suffix - 1_
                - suffixed key columns - {ruleID1_27_1_}

  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.RuleFormula.ruleSet: select ruleset0_.ruleFormulaID as ruleForm8_28_0_, ruleset0_.ruleID as ruleID1_27_0_, ruleset0_.ruleID as ruleID1_27_1_, ruleset0_.ApplyTax as ApplyTax2_27_1_, ruleset0_.ApplyValue as ApplyVal3_27_1_, ruleset0_.creditAccountID as creditAc5_27_1_, ruleset0_.debitAccountID as debitAcc6_27_1_, ruleset0_.distributionRuleID as distribu7_27_1_, ruleset0_.Object as Object4_27_1_, ruleset0_.ruleFormulaID as ruleForm8_27_1_, ruleset0_.taxSetupID as taxSetup9_27_1_ from Rule ruleset0_ where ruleset0_.ruleFormulaID=?
  2015-06-09 20:24:39,646 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@642505c7]
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4339e0de]
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : brokerID
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commissionList
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeTaxList
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.account.Broker.brokerageList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.account.Broker.brokerageList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.account.Broker.brokerageList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.account.Brokerage, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.account.Broker.brokerageList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.account.Broker.brokerageList)
          - SQL table alias mapping - brokeragel0_
          - alias suffix - 0_
          - suffixed key columns - {brokerID4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - brokerag1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.account.Brokerage)
                - SQL table alias mapping - brokeragel0_
                - alias suffix - 1_
                - suffixed key columns - {brokerag1_2_1_}

  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.account.Broker.brokerageList: select brokeragel0_.brokerID as brokerID4_1_0_, brokeragel0_.brokerageID as brokerag1_2_0_, brokeragel0_.brokerageID as brokerag1_2_1_, brokeragel0_.brokerID as brokerID4_2_1_, brokeragel0_.Category as Category2_2_1_, brokeragel0_.TradeType as TradeTyp3_2_1_ from Brokerage brokeragel0_ where brokeragel0_.brokerID=?
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d9f64c9]
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21ac5eb4]
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : brokerageID
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tax
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,647 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.account.Brokerage.exchangeTaxList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.account.Brokerage.exchangeTaxList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.account.Brokerage.exchangeTaxList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.account.ExchangeTax, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.account.Brokerage.exchangeTaxList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.account.Brokerage.exchangeTaxList)
          - SQL table alias mapping - exchangeta0_
          - alias suffix - 0_
          - suffixed key columns - {brokerag5_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - exchange1_15_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.account.ExchangeTax)
                - SQL table alias mapping - exchangeta0_
                - alias suffix - 1_
                - suffixed key columns - {exchange1_15_1_}

  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.account.Brokerage.exchangeTaxList: select exchangeta0_.brokerageID as brokerag5_2_0_, exchangeta0_.exchangeTaxID as exchange1_15_0_, exchangeta0_.exchangeTaxID as exchange1_15_1_, exchangeta0_.brokerageID as brokerag5_15_1_, exchangeta0_.CalcType as CalcType2_15_1_, exchangeta0_.Tax as Tax3_15_1_, exchangeta0_.TaxName as TaxName4_15_1_ from ExchangeTax exchangeta0_ where exchangeta0_.brokerageID=?
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27b2faa6]
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6428591a]
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryID
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : countryID
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeName
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Country.exchangesList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Country.exchangesList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Country.exchangesList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.securities.StockExchange, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Country.exchangesList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Country.exchangesList)
          - SQL table alias mapping - exchangesl0_
          - alias suffix - 0_
          - suffixed key columns - {countryI3_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - stockExc1_33_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.StockExchange)
                - SQL table alias mapping - exchangesl0_
                - alias suffix - 1_
                - suffixed key columns - {stockExc1_33_1_}

  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Country.exchangesList: select exchangesl0_.countryID as countryI3_8_0_, exchangesl0_.stockExchangeID as stockExc1_33_0_, exchangesl0_.stockExchangeID as stockExc1_33_1_, exchangesl0_.countryID as countryI3_33_1_, exchangesl0_.ExchangeName as Exchange2_33_1_ from StockExchange exchangesl0_ where exchangesl0_.countryID=?
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a685eba]
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c2e3264]
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : cnpj
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyDate
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyName
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketName
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : onShares
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : pnShares
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stockExchangeID
  2015-06-09 20:24:39,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : stockExchangeID
  2015-06-09 20:24:39,649 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.StockExchange.companySet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.StockExchange.companySet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.StockExchange.companySet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.securities.Company, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.StockExchange.companySet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.StockExchange.companySet)
          - SQL table alias mapping - companyset0_
          - alias suffix - 0_
          - suffixed key columns - {stockExc9_33_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - companyI1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.Company)
                - SQL table alias mapping - companyset0_
                - alias suffix - 1_
                - suffixed key columns - {companyI1_4_1_}

  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.StockExchange.companySet: select companyset0_.stockExchangeID as stockExc9_33_0_, companyset0_.companyID as companyI1_4_0_, companyset0_.companyID as companyI1_4_1_, companyset0_.CNPJ as CNPJ2_4_1_, companyset0_.CompanyDate as CompanyD3_4_1_, companyset0_.CompanyName as CompanyN4_4_1_, companyset0_.MarketName as MarketNa5_4_1_, companyset0_.OnShares as OnShares6_4_1_, companyset0_.PnShares as PnShares7_4_1_, companyset0_.Status as Status8_4_1_, companyset0_.stockExchangeID as stockExc9_4_1_ from Company companyset0_ where companyset0_.stockExchangeID=?
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d540566]
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6014a9ba]
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : adjClose
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ask
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : avgPrice
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : bid
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : close
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : high
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : low
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : securityID
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedQuantity
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedUnits
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,650 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,651 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,651 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Security.historicalQuoteSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Security.historicalQuoteSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Security.historicalQuoteSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.marketdata.HistoricalQuote, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Security.historicalQuoteSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Security.historicalQuoteSet)
          - SQL table alias mapping - historical0_
          - alias suffix - 0_
          - suffixed key columns - {securit15_30_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - historic1_16_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
                - SQL table alias mapping - historical0_
                - alias suffix - 1_
                - suffixed key columns - {historic1_16_1_}

  2015-06-09 20:24:39,651 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Security.historicalQuoteSet: select historical0_.securityID as securit15_30_0_, historical0_.historicalQuoteID as historic1_16_0_, historical0_.historicalQuoteID as historic1_16_1_, historical0_.AdjClose as AdjClose2_16_1_, historical0_.Ask as Ask3_16_1_, historical0_.AvgPrice as AvgPrice4_16_1_, historical0_.Bid as Bid5_16_1_, historical0_.Close as Close6_16_1_, historical0_.High as High7_16_1_, historical0_.Low as Low8_16_1_, historical0_.Open as Open9_16_1_, historical0_.QDateTime as QDateTi10_16_1_, historical0_.QuoteFactor as QuoteFa11_16_1_, historical0_.securityID as securit15_16_1_, historical0_.TradedQuantity as TradedQ12_16_1_, historical0_.TradedUnits as TradedU13_16_1_, historical0_.Volume as Volume14_16_1_ from HistoricalQuote historical0_ where historical0_.securityID=? order by historical0_.QDateTime
  2015-06-09 20:24:39,651 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a14c44f]
  2015-06-09 20:24:39,651 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f08fdce]
  2015-06-09 20:24:39,651 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:24:39,651 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyTradeList
  2015-06-09 20:24:39,651 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:24:39,651 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : externalID
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : securityID
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellTradeList
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Security.marketOrderSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Security.marketOrderSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Security.marketOrderSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.marketdata.MarketOrder, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Security.marketOrderSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Security.marketOrderSet)
          - SQL table alias mapping - marketorde0_
          - alias suffix - 0_
          - suffixed key columns - {securit10_30_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marketOr1_22_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.marketdata.MarketOrder)
                - SQL table alias mapping - marketorde0_
                - alias suffix - 1_
                - suffixed key columns - {marketOr1_22_1_}

  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Security.marketOrderSet: select marketorde0_.securityID as securit10_30_0_, marketorde0_.marketOrderID as marketOr1_22_0_, marketorde0_.marketOrderID as marketOr1_22_1_, marketorde0_.brokerID as brokerID9_22_1_, marketorde0_.ExpirationDate as Expirati2_22_1_, marketorde0_.ExternalID as External3_22_1_, marketorde0_.OrderDateTime as OrderDat4_22_1_, marketorde0_.OrderStatus as OrderSta5_22_1_, marketorde0_.Price as Price6_22_1_, marketorde0_.securityID as securit10_22_1_, marketorde0_.Side as Side7_22_1_, marketorde0_.Volume as Volume8_22_1_ from MarketOrder marketorde0_ where marketorde0_.securityID=?
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4492eede]
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cbc8d0f]
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexDate
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexID
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : indexID
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:24:39,652 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,653 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,653 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Index.indexCompositionSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Index.indexCompositionSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Index.indexCompositionSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.securities.IndexComposition, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Index.indexCompositionSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Index.indexCompositionSet)
          - SQL table alias mapping - indexcompo0_
          - alias suffix - 0_
          - suffixed key columns - {indexID3_17_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - indexCom1_18_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.IndexComposition)
                - SQL table alias mapping - indexcompo0_
                - alias suffix - 1_
                - suffixed key columns - {indexCom1_18_1_}

  2015-06-09 20:24:39,653 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Index.indexCompositionSet: select indexcompo0_.indexID as indexID3_17_0_, indexcompo0_.indexCompID as indexCom1_18_0_, indexcompo0_.indexCompID as indexCom1_18_1_, indexcompo0_.IndexDate as IndexDat2_18_1_, indexcompo0_.indexID as indexID3_18_1_, indexcompo0_.securityID as security4_18_1_ from IndexComposition indexcompo0_ where indexcompo0_.indexID=?
  2015-06-09 20:24:39,653 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f288c14]
  2015-06-09 20:24:39,653 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6794ac0b]
  2015-06-09 20:24:39,653 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:24:39,653 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:24:39,653 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,653 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : currencyID
  2015-06-09 20:24:39,653 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:24:39,653 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:24:39,653 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:24:39,653 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:24:39,653 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:24:39,653 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:24:39,653 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,654 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,654 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Currency.entryRegisterSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Currency.entryRegisterSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Currency.entryRegisterSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Currency.entryRegisterSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Currency.entryRegisterSet)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {currency8_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - entryReg1_14_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.EntryRegister)
                - SQL table alias mapping - entryregis0_
                - alias suffix - 1_
                - suffixed key columns - {entryReg1_14_1_}

  2015-06-09 20:24:39,672 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Currency.entryRegisterSet: select entryregis0_.currencyID as currency8_9_0_, entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.entryRegisterID as entryReg1_14_1_, entryregis0_.Credit as Credit2_14_1_, entryregis0_.creditAccountID as creditAc7_14_1_, entryregis0_.currencyID as currency8_14_1_, entryregis0_.Debit as Debit3_14_1_, entryregis0_.debitAccountID as debitAcc9_14_1_, entryregis0_.Description as Descript4_14_1_, entryregis0_.entryID as entryID10_14_1_, entryregis0_.EntryType as EntryTyp5_14_1_, entryregis0_.OperationID as Operatio6_14_1_ from EntryRegister entryregis0_ where entryregis0_.currencyID=?
  2015-06-09 20:24:39,672 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17b6d426]
  2015-06-09 20:24:39,672 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5580d62f]
  2015-06-09 20:24:39,672 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : averagePrice
  2015-06-09 20:24:39,672 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : comment
  2015-06-09 20:24:39,672 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : duration
  2015-06-09 20:24:39,672 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:24:39,672 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executedVolume
  2015-06-09 20:24:39,672 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionsList
  2015-06-09 20:24:39,672 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:24:39,672 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderSerial
  2015-06-09 20:24:39,672 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:24:39,672 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderType
  2015-06-09 20:24:39,672 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,672 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:24:39,672 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : securityID
  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stopPrice
  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Security.ordersSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Security.ordersSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Security.ordersSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.Orders, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Security.ordersSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Security.ordersSet)
          - SQL table alias mapping - ordersset0_
          - alias suffix - 0_
          - suffixed key columns - {securit15_30_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - orderID1_26_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.Orders)
                - SQL table alias mapping - ordersset0_
                - alias suffix - 1_
                - suffixed key columns - {orderID1_26_1_}

  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Security.ordersSet: select ordersset0_.securityID as securit15_30_0_, ordersset0_.orderID as orderID1_26_0_, ordersset0_.orderID as orderID1_26_1_, ordersset0_.AveragePrice as AverageP2_26_1_, ordersset0_.Comment as Comment3_26_1_, ordersset0_.Duration as Duration4_26_1_, ordersset0_.ExecutedVolume as Executed5_26_1_, ordersset0_.OrderDateTime as OrderDat6_26_1_, ordersset0_.OrderSerial as OrderSer7_26_1_, ordersset0_.OrderStatus as OrderSta8_26_1_, ordersset0_.OrderType as OrderTyp9_26_1_, ordersset0_.Price as Price10_26_1_, ordersset0_.securityID as securit15_26_1_, ordersset0_.Side as Side11_26_1_, ordersset0_.StopPrice as StopPri12_26_1_, ordersset0_.TradeType as TradeTy13_26_1_, ordersset0_.Volume as Volume14_26_1_ from Orders ordersset0_ where ordersset0_.securityID=?
  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46a953cf]
  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@154bd49b]
  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : brokerageID
  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commValue
  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMax
  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMin
  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,673 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.account.Brokerage.commissionList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.account.Brokerage.commissionList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.account.Brokerage.commissionList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.account.Commission, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.account.Brokerage.commissionList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.account.Brokerage.commissionList)
          - SQL table alias mapping - commission0_
          - alias suffix - 0_
          - suffixed key columns - {brokerag6_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - commissi1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.account.Commission)
                - SQL table alias mapping - commission0_
                - alias suffix - 1_
                - suffixed key columns - {commissi1_3_1_}

  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.account.Brokerage.commissionList: select commission0_.brokerageID as brokerag6_2_0_, commission0_.commissionID as commissi1_3_0_, commission0_.commissionID as commissi1_3_1_, commission0_.brokerageID as brokerag6_3_1_, commission0_.CalcTypes as CalcType2_3_1_, commission0_.CommValue as CommValu3_3_1_, commission0_.ValueMax as ValueMax4_3_1_, commission0_.ValueMin as ValueMin5_3_1_ from Commission commission0_ where commission0_.brokerageID=?
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c58dcb1]
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67fc2aad]
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : brokerID
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyTradeList
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : externalID
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellTradeList
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,674 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,675 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.account.Broker.marketOrderSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.account.Broker.marketOrderSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.account.Broker.marketOrderSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.marketdata.MarketOrder, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.account.Broker.marketOrderSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.account.Broker.marketOrderSet)
          - SQL table alias mapping - marketorde0_
          - alias suffix - 0_
          - suffixed key columns - {brokerID9_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marketOr1_22_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.marketdata.MarketOrder)
                - SQL table alias mapping - marketorde0_
                - alias suffix - 1_
                - suffixed key columns - {marketOr1_22_1_}

  2015-06-09 20:24:39,675 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.account.Broker.marketOrderSet: select marketorde0_.brokerID as brokerID9_1_0_, marketorde0_.marketOrderID as marketOr1_22_0_, marketorde0_.marketOrderID as marketOr1_22_1_, marketorde0_.brokerID as brokerID9_22_1_, marketorde0_.ExpirationDate as Expirati2_22_1_, marketorde0_.ExternalID as External3_22_1_, marketorde0_.OrderDateTime as OrderDat4_22_1_, marketorde0_.OrderStatus as OrderSta5_22_1_, marketorde0_.Price as Price6_22_1_, marketorde0_.securityID as securit10_22_1_, marketorde0_.Side as Side7_22_1_, marketorde0_.Volume as Volume8_22_1_ from MarketOrder marketorde0_ where marketorde0_.brokerID=?
  2015-06-09 20:24:39,675 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2dd8239]
  2015-06-09 20:24:39,675 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@472698d]
  2015-06-09 20:24:39,675 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:24:39,675 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:24:39,675 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:24:39,675 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:24:39,675 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : debitAccountID
  2015-06-09 20:24:39,675 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:24:39,675 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:24:39,675 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:24:39,676 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:24:39,676 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,676 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,676 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Account.ruleDbtAccSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Account.ruleDbtAccSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Account.ruleDbtAccSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Account.ruleDbtAccSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Account.ruleDbtAccSet)
          - SQL table alias mapping - ruledbtacc0_
          - alias suffix - 0_
          - suffixed key columns - {debitAcc6_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ruleID1_27_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.Rule)
                - SQL table alias mapping - ruledbtacc0_
                - alias suffix - 1_
                - suffixed key columns - {ruleID1_27_1_}

  2015-06-09 20:24:39,676 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Account.ruleDbtAccSet: select ruledbtacc0_.debitAccountID as debitAcc6_0_0_, ruledbtacc0_.ruleID as ruleID1_27_0_, ruledbtacc0_.ruleID as ruleID1_27_1_, ruledbtacc0_.ApplyTax as ApplyTax2_27_1_, ruledbtacc0_.ApplyValue as ApplyVal3_27_1_, ruledbtacc0_.creditAccountID as creditAc5_27_1_, ruledbtacc0_.debitAccountID as debitAcc6_27_1_, ruledbtacc0_.distributionRuleID as distribu7_27_1_, ruledbtacc0_.Object as Object4_27_1_, ruledbtacc0_.ruleFormulaID as ruleForm8_27_1_, ruledbtacc0_.taxSetupID as taxSetup9_27_1_ from Rule ruledbtacc0_ where ruledbtacc0_.debitAccountID=?
  2015-06-09 20:24:39,676 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e53b094]
  2015-06-09 20:24:39,676 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39fa8ad2]
  2015-06-09 20:24:39,676 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : subsectorID
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Subsector.segmentSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Subsector.segmentSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Subsector.segmentSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Subsector.segmentSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Subsector.segmentSet)
          - SQL table alias mapping - segmentset0_
          - alias suffix - 0_
          - suffixed key columns - {subsecto3_34_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - segmentI1_32_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.Segment)
                - SQL table alias mapping - segmentset0_
                - alias suffix - 1_
                - suffixed key columns - {segmentI1_32_1_}

  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Subsector.segmentSet: select segmentset0_.subsectorID as subsecto3_34_0_, segmentset0_.segmentID as segmentI1_32_0_, segmentset0_.segmentID as segmentI1_32_1_, segmentset0_.SegmentName as SegmentN2_32_1_, segmentset0_.subsectorID as subsecto3_32_1_ from Segment segmentset0_ where segmentset0_.subsectorID=?
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cf67838]
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6137cf6e]
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : currencyID
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : emissionDate
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exercisePrice
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : futureSerie
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : minimalVolume
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectAsset
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionSerie
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionStyle
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbolDate
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c302a1d]
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.description
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.historicalQuoteSet
  2015-06-09 20:24:39,677 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.marketOrderSet
  2015-06-09 20:24:39,678 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.ordersSet
  2015-06-09 20:24:39,678 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.securityInfoID
  2015-06-09 20:24:39,678 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : securityID.securityInfoID
  2015-06-09 20:24:39,678 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.symbol
  2015-06-09 20:24:39,678 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,678 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,678 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Currency.securityInfoList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Currency.securityInfoList, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Currency.securityInfoList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Currency.securityInfoList].<elements>)
             - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:2>, path=[com.cmm.jft.financial.Currency.securityInfoList].<elements>.securityID)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Currency.securityInfoList)
          - SQL table alias mapping - securityin0_
          - alias suffix - 0_
          - suffixed key columns - {currenc13_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - security1_31_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.SecurityInfo)
                - SQL table alias mapping - securityin0_
                - alias suffix - 1_
                - suffixed key columns - {security1_31_1_}
                - JOIN (JoinDefinedByMetadata(securityID)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.cmm.jft.trading.securities.Security)
                      - SQL table alias mapping - security1_
                      - alias suffix - 2_
                      - suffixed key columns - {security1_30_2_}

  2015-06-09 20:24:39,678 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Currency.securityInfoList: select securityin0_.currencyID as currenc13_9_0_, securityin0_.securityInfoID as security1_31_0_, securityin0_.securityInfoID as security1_31_1_, securityin0_.Category as Category2_31_1_, securityin0_.currencyID as currenc13_31_1_, securityin0_.EmissionDate as Emission3_31_1_, securityin0_.ExcercisePrice as Excercis4_31_1_, securityin0_.ExpirationDate as Expirati5_31_1_, securityin0_.FutureSerie as FutureSe6_31_1_, securityin0_.MinimalVolume as MinimalV7_31_1_, securityin0_.ObjectAsset as ObjectAs8_31_1_, securityin0_.OptionSerie as OptionSe9_31_1_, securityin0_.OptionStyle as OptionS10_31_1_, securityin0_.QuoteFactor as QuoteFa11_31_1_, securityin0_.SymbolDate as SymbolD12_31_1_, security1_.securityID as security1_30_2_, security1_.Description as Descript2_30_2_, security1_.securityInfoID_securityInfoID as security4_30_2_, security1_.Symbol as Symbol3_30_2_ from SecurityInfo securityin0_ left outer join Security security1_ on securityin0_.securityInfoID=security1_.securityInfoID_securityInfoID where securityin0_.currencyID=?
  2015-06-09 20:24:39,678 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fcfca62]
  2015-06-09 20:24:39,678 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@499ef98e]
  2015-06-09 20:24:39,678 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:24:39,678 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:24:39,678 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:24:39,678 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:24:39,679 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:24:39,679 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : distributionRuleID
  2015-06-09 20:24:39,679 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:24:39,679 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:24:39,679 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:24:39,679 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,679 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,679 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.DistributionRule.ruleSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.DistributionRule.ruleSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.DistributionRule.ruleSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.DistributionRule.ruleSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.DistributionRule.ruleSet)
          - SQL table alias mapping - ruleset0_
          - alias suffix - 0_
          - suffixed key columns - {distribu7_12_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ruleID1_27_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.Rule)
                - SQL table alias mapping - ruleset0_
                - alias suffix - 1_
                - suffixed key columns - {ruleID1_27_1_}

  2015-06-09 20:24:39,679 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.DistributionRule.ruleSet: select ruleset0_.distributionRuleID as distribu7_12_0_, ruleset0_.ruleID as ruleID1_27_0_, ruleset0_.ruleID as ruleID1_27_1_, ruleset0_.ApplyTax as ApplyTax2_27_1_, ruleset0_.ApplyValue as ApplyVal3_27_1_, ruleset0_.creditAccountID as creditAc5_27_1_, ruleset0_.debitAccountID as debitAcc6_27_1_, ruleset0_.distributionRuleID as distribu7_27_1_, ruleset0_.Object as Object4_27_1_, ruleset0_.ruleFormulaID as ruleForm8_27_1_, ruleset0_.taxSetupID as taxSetup9_27_1_ from Rule ruleset0_ where ruleset0_.distributionRuleID=?
  2015-06-09 20:24:39,680 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@288214b1]
  2015-06-09 20:24:39,680 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16eedaa6]
  2015-06-09 20:24:39,680 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorID
  2015-06-09 20:24:39,680 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : sectorID
  2015-06-09 20:24:39,680 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:24:39,680 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorName
  2015-06-09 20:24:39,680 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:24:39,681 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:24:39,681 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Sector.subsectorSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Sector.subsectorSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Sector.subsectorSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.securities.Subsector, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Sector.subsectorSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Sector.subsectorSet)
          - SQL table alias mapping - subsectors0_
          - alias suffix - 0_
          - suffixed key columns - {sectorID3_29_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - subsecto1_34_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.Subsector)
                - SQL table alias mapping - subsectors0_
                - alias suffix - 1_
                - suffixed key columns - {subsecto1_34_1_}

  2015-06-09 20:24:39,681 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Sector.subsectorSet: select subsectors0_.sectorID as sectorID3_29_0_, subsectors0_.subsectorID as subsecto1_34_0_, subsectors0_.subsectorID as subsecto1_34_1_, subsectors0_.sectorID as sectorID3_34_1_, subsectors0_.SubsectorName as Subsecto2_34_1_ from Subsector subsectors0_ where subsectors0_.sectorID=?
  2015-06-09 20:24:39,688 [main] (DEBUG) org.hibernate.internal.SessionFactoryRegistry -> Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@523d6bdb
  2015-06-09 20:24:39,691 [main] (DEBUG) org.hibernate.internal.SessionFactoryRegistry -> Registering SessionFactory: bfa3de89-6b8e-4e5e-b7b9-66e5c1e05ed7 (<unnamed>)
  2015-06-09 20:24:39,691 [main] (DEBUG) org.hibernate.internal.SessionFactoryRegistry -> Not binding SessionFactory to JNDI, no JNDI name configured
  2015-06-09 20:24:39,691 [main] (DEBUG) org.hibernate.internal.SessionFactoryImpl -> Instantiated session factory
  2015-06-09 20:24:39,701 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing hbm.xml files
  2015-06-09 20:24:39,701 [main] (DEBUG) org.hibernate.cfg.Configuration -> Process annotated classes
  2015-06-09 20:24:39,701 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing fk mappings (*ToOne and JoinedSubclass)
  2015-06-09 20:24:39,701 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:24:39,701 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:24:39,701 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing collection mappings
  2015-06-09 20:24:39,701 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing native query and ResultSetMapping mappings
  2015-06-09 20:24:39,701 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing association property references
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Creating tables' unique integer identifiers
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing foreign key constraints
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.StockExchange
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Segment
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Company
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.JournalEntry
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Index
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:24:39,702 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:24:39,703 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:39,703 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:24:39,703 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:24:39,703 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:24:39,703 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:24:39,703 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:39,703 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:39,703 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:39,703 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.DistributionRule
  2015-06-09 20:24:39,703 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.RuleFormula
  2015-06-09 20:24:39,703 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.TaxSetup
  2015-06-09 20:24:39,703 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.SecurityInfo
  2015-06-09 20:24:39,703 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:24:39,703 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Subsector
  2015-06-09 20:24:39,703 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Country
  2015-06-09 20:24:39,703 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Sector
  2015-06-09 20:24:39,703 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Tax
  2015-06-09 20:24:39,705 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,705 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,705 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,706 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,706 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,706 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,706 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,706 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,706 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,709 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,709 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,709 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,709 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,709 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,709 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,709 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,709 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,710 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,710 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,711 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,712 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,712 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,712 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,712 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,712 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,712 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,712 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,712 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,712 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,712 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,712 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,712 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,713 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,713 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing hbm.xml files
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Process annotated classes
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing fk mappings (*ToOne and JoinedSubclass)
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing collection mappings
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing native query and ResultSetMapping mappings
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing association property references
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Creating tables' unique integer identifiers
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing foreign key constraints
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.StockExchange
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Segment
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Company
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:39,714 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.JournalEntry
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Index
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.DistributionRule
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.RuleFormula
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.TaxSetup
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.SecurityInfo
  2015-06-09 20:24:39,715 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:24:39,716 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Subsector
  2015-06-09 20:24:39,716 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Country
  2015-06-09 20:24:39,716 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Sector
  2015-06-09 20:24:39,716 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Tax
  2015-06-09 20:24:39,717 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,718 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,718 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,719 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,719 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,719 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,719 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,719 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,719 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,719 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,719 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,719 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,719 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,719 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,721 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,721 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,722 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,722 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,722 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,723 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,723 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,723 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,723 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,723 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,723 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,723 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,723 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,724 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,724 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,724 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,724 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,724 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,724 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,724 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,724 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,724 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,728 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,729 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,729 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,729 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,729 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,729 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,729 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,729 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,729 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,729 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,729 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,729 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,729 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,729 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,729 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,729 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,729 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,729 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,730 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,730 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,730 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,730 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,730 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,730 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,730 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,730 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,730 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,730 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,730 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,730 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,731 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,731 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,731 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,731 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,731 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,731 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:39,733 [main] (INFO) org.hibernate.tool.hbm2ddl.SchemaExport -> HHH000227: Running hbm2ddl schema export
  2015-06-09 20:24:39,734 [main] (DEBUG) org.hibernate.tool.hbm2ddl.SchemaExport -> Import file not found: /import.sql
  2015-06-09 20:24:39,762 [main] (DEBUG) org.hibernate.SQL -> alter table Account drop constraint FK_j9a281ub4trd8flyr8xp2js77
  2015-06-09 20:24:39,765 [main] (DEBUG) org.hibernate.SQL -> alter table Account drop constraint FK_gorcvfmprkuv169e9locc1crk
  2015-06-09 20:24:39,767 [main] (DEBUG) org.hibernate.SQL -> alter table Brokerage drop constraint FK_mf8sg4j6ifsn0uinwp41jo45h
  2015-06-09 20:24:39,770 [main] (DEBUG) org.hibernate.SQL -> alter table Commission drop constraint FK_kn2t2gq6ndbivsdjfmbrbqxxo
  2015-06-09 20:24:39,772 [main] (DEBUG) org.hibernate.SQL -> alter table Company drop constraint FK_biv6ml1wj3jdk9s2bv3wjxi7y
  2015-06-09 20:24:39,773 [main] (DEBUG) org.hibernate.SQL -> alter table CompanySegment drop constraint FK_bgicmvdtr63buv5tgq3m53dkr
  2015-06-09 20:24:39,774 [main] (DEBUG) org.hibernate.SQL -> alter table CompanySegment drop constraint FK_a5101tjhewkpyq19bipiqyv6e
  2015-06-09 20:24:39,775 [main] (DEBUG) org.hibernate.SQL -> alter table CurrencyQuote drop constraint FK_kjywcly93l6mcln2rgep1dkwt
  2015-06-09 20:24:39,777 [main] (DEBUG) org.hibernate.SQL -> alter table Deposit drop constraint FK_6c51s80i2ukj6d9el25p242rp
  2015-06-09 20:24:39,778 [main] (DEBUG) org.hibernate.SQL -> alter table Earning drop constraint FK_2612awd6r9o5vbcvd278liqjr
  2015-06-09 20:24:39,779 [main] (DEBUG) org.hibernate.SQL -> alter table EntryRegister drop constraint FK_ogct9b5kokepkm47buqcd54h4
  2015-06-09 20:24:39,780 [main] (DEBUG) org.hibernate.SQL -> alter table EntryRegister drop constraint FK_a0qynfc0ao56bkps2fnynr5lf
  2015-06-09 20:24:39,784 [main] (DEBUG) org.hibernate.SQL -> alter table EntryRegister drop constraint FK_15n07eyn8sv1ewb8tjbo7wogr
  2015-06-09 20:24:39,785 [main] (DEBUG) org.hibernate.SQL -> alter table EntryRegister drop constraint FK_1sqikeghk4ijftavrpbs166jt
  2015-06-09 20:24:39,786 [main] (DEBUG) org.hibernate.SQL -> alter table ExchangeTax drop constraint FK_8726k2vvh4x3b7t2s2licibgj
  2015-06-09 20:24:39,787 [main] (DEBUG) org.hibernate.SQL -> alter table HistoricalQuote drop constraint FK_lexipjdypu6ar61c3m170t0gg
  2015-06-09 20:24:39,789 [main] (DEBUG) org.hibernate.SQL -> alter table IndexComposition drop constraint FK_8l1d15jcajd96t3bq23jissat
  2015-06-09 20:24:39,790 [main] (DEBUG) org.hibernate.SQL -> alter table IndexComposition drop constraint FK_nk7h5bm8fyn3y7h671xayke1a
  2015-06-09 20:24:39,791 [main] (DEBUG) org.hibernate.SQL -> alter table MarketEvent drop constraint FK_1nnr0e3p34ifebeqmbx6ahx7w
  2015-06-09 20:24:39,792 [main] (DEBUG) org.hibernate.SQL -> alter table MarketEvent drop constraint FK_f2qtssu1k0o8tgdyna7a4fqos
  2015-06-09 20:24:39,793 [main] (DEBUG) org.hibernate.SQL -> alter table MarketOrder drop constraint FK_949ula361f7m14ih46g8ci18s
  2015-06-09 20:24:39,794 [main] (DEBUG) org.hibernate.SQL -> alter table MarketOrder drop constraint FK_3f51yfii3mu4xgklk4id3p278
  2015-06-09 20:24:39,795 [main] (DEBUG) org.hibernate.SQL -> alter table MarketTrade drop constraint FK_4j6hp5bsv8c59rapstit01bh0
  2015-06-09 20:24:39,797 [main] (DEBUG) org.hibernate.SQL -> alter table MarketTrade drop constraint FK_mqcm78tte6b2bmlp7qb18qkux
  2015-06-09 20:24:39,798 [main] (DEBUG) org.hibernate.SQL -> alter table OrderEvent drop constraint FK_9n5qpddiwyg7g1mfhsqbpqiwm
  2015-06-09 20:24:39,799 [main] (DEBUG) org.hibernate.SQL -> alter table OrderExecution drop constraint FK_7epyl2tm3830jp91upal43twe
  2015-06-09 20:24:39,801 [main] (DEBUG) org.hibernate.SQL -> alter table Orders drop constraint FK_9knpc95t0a6j4p5f438jnuxe5
  2015-06-09 20:24:39,802 [main] (DEBUG) org.hibernate.SQL -> alter table Rule drop constraint FK_32aj6he7tm12eolvjnaxalih0
  2015-06-09 20:24:39,803 [main] (DEBUG) org.hibernate.SQL -> alter table Rule drop constraint FK_bnxop07lgblwg75pc45iiaj9b
  2015-06-09 20:24:39,804 [main] (DEBUG) org.hibernate.SQL -> alter table Rule drop constraint FK_9o658wtsgxwtqad8yfqt6alna
  2015-06-09 20:24:39,805 [main] (DEBUG) org.hibernate.SQL -> alter table Rule drop constraint FK_b1d36wq16yh60gvb6aokw3kri
  2015-06-09 20:24:39,806 [main] (DEBUG) org.hibernate.SQL -> alter table Rule drop constraint FK_koh49879dd30tnhje19we7ike
  2015-06-09 20:24:39,807 [main] (DEBUG) org.hibernate.SQL -> alter table Security drop constraint FK_imw4w23r0ncgrcn2p09rt547x
  2015-06-09 20:24:39,809 [main] (DEBUG) org.hibernate.SQL -> alter table SecurityInfo drop constraint FK_tokuwvtdvj49iq95dx47wba6q
  2015-06-09 20:24:39,810 [main] (DEBUG) org.hibernate.SQL -> alter table Segment drop constraint FK_rddqr3vy1v4847vby6twur3o0
  2015-06-09 20:24:39,811 [main] (DEBUG) org.hibernate.SQL -> alter table StockExchange drop constraint FK_4wp2kggi860gei0usdeac6x9c
  2015-06-09 20:24:39,812 [main] (DEBUG) org.hibernate.SQL -> alter table Subsector drop constraint FK_lvhbgxuk6p8ocutbni6jv3xlq
  2015-06-09 20:24:39,813 [main] (DEBUG) org.hibernate.SQL -> alter table TaxSetup drop constraint FK_p9c99uuaum9vflxuf4aaiqhin
  2015-06-09 20:24:39,814 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Account cascade
  2015-06-09 20:24:39,819 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Broker cascade
  2015-06-09 20:24:39,821 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Brokerage cascade
  2015-06-09 20:24:39,824 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Commission cascade
  2015-06-09 20:24:39,830 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Company cascade
  2015-06-09 20:24:39,832 [main] (DEBUG) org.hibernate.SQL -> drop table if exists CompanySegment cascade
  2015-06-09 20:24:39,859 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Configuration cascade
  2015-06-09 20:24:39,862 [main] (DEBUG) org.hibernate.SQL -> drop table if exists CostCenter cascade
  2015-06-09 20:24:39,864 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Country cascade
  2015-06-09 20:24:39,866 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Currency cascade
  2015-06-09 20:24:39,871 [main] (DEBUG) org.hibernate.SQL -> drop table if exists CurrencyQuote cascade
  2015-06-09 20:24:39,874 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Deposit cascade
  2015-06-09 20:24:39,876 [main] (DEBUG) org.hibernate.SQL -> drop table if exists DistributionRule cascade
  2015-06-09 20:24:39,878 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Earning cascade
  2015-06-09 20:24:39,880 [main] (DEBUG) org.hibernate.SQL -> drop table if exists EntryRegister cascade
  2015-06-09 20:24:39,883 [main] (DEBUG) org.hibernate.SQL -> drop table if exists ExchangeTax cascade
  2015-06-09 20:24:39,885 [main] (DEBUG) org.hibernate.SQL -> drop table if exists HistoricalQuote cascade
  2015-06-09 20:24:39,887 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Index cascade
  2015-06-09 20:24:39,890 [main] (DEBUG) org.hibernate.SQL -> drop table if exists IndexComposition cascade
  2015-06-09 20:24:39,892 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Isin cascade
  2015-06-09 20:24:39,894 [main] (DEBUG) org.hibernate.SQL -> drop table if exists JournalEntry cascade
  2015-06-09 20:24:39,897 [main] (DEBUG) org.hibernate.SQL -> drop table if exists MarketEvent cascade
  2015-06-09 20:24:39,899 [main] (DEBUG) org.hibernate.SQL -> drop table if exists MarketOrder cascade
  2015-06-09 20:24:39,901 [main] (DEBUG) org.hibernate.SQL -> drop table if exists MarketTrade cascade
  2015-06-09 20:24:39,903 [main] (DEBUG) org.hibernate.SQL -> drop table if exists OrderEvent cascade
  2015-06-09 20:24:39,905 [main] (DEBUG) org.hibernate.SQL -> drop table if exists OrderExecution cascade
  2015-06-09 20:24:39,907 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Orders cascade
  2015-06-09 20:24:39,910 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Rule cascade
  2015-06-09 20:24:39,912 [main] (DEBUG) org.hibernate.SQL -> drop table if exists RuleFormula cascade
  2015-06-09 20:24:39,914 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Sector cascade
  2015-06-09 20:24:39,916 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Security cascade
  2015-06-09 20:24:39,917 [main] (DEBUG) org.hibernate.SQL -> drop table if exists SecurityInfo cascade
  2015-06-09 20:24:39,919 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Segment cascade
  2015-06-09 20:24:39,921 [main] (DEBUG) org.hibernate.SQL -> drop table if exists StockExchange cascade
  2015-06-09 20:24:39,923 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Subsector cascade
  2015-06-09 20:24:39,925 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Tax cascade
  2015-06-09 20:24:39,927 [main] (DEBUG) org.hibernate.SQL -> drop table if exists TaxSetup cascade
  2015-06-09 20:24:39,930 [main] (DEBUG) org.hibernate.SQL -> drop sequence BROKERAGE_SEQ
  2015-06-09 20:24:39,931 [main] (DEBUG) org.hibernate.SQL -> drop sequence BROKER_SEQ
  2015-06-09 20:24:39,933 [main] (DEBUG) org.hibernate.SQL -> drop sequence COMMISSION_SEQ
  2015-06-09 20:24:39,935 [main] (DEBUG) org.hibernate.SQL -> drop sequence COMPANY_SEQ
  2015-06-09 20:24:39,936 [main] (DEBUG) org.hibernate.SQL -> drop sequence CONFIGURATION_SEQ
  2015-06-09 20:24:39,938 [main] (DEBUG) org.hibernate.SQL -> drop sequence COSTCENTER_SEQ
  2015-06-09 20:24:39,940 [main] (DEBUG) org.hibernate.SQL -> drop sequence CURRENCY_SEQ
  2015-06-09 20:24:39,941 [main] (DEBUG) org.hibernate.SQL -> drop sequence DEPOSIT_SEQ
  2015-06-09 20:24:39,942 [main] (DEBUG) org.hibernate.SQL -> drop sequence DISTRIBUTIONRULE_SEQ
  2015-06-09 20:24:39,944 [main] (DEBUG) org.hibernate.SQL -> drop sequence EARNING_SEQ
  2015-06-09 20:24:39,945 [main] (DEBUG) org.hibernate.SQL -> drop sequence ENTRYREGISTER_SEQ
  2015-06-09 20:24:39,946 [main] (DEBUG) org.hibernate.SQL -> drop sequence EXCHANGETAX_SEQ
  2015-06-09 20:24:39,948 [main] (DEBUG) org.hibernate.SQL -> drop sequence HISTORICALQUOTE_SEQ
  2015-06-09 20:24:39,949 [main] (DEBUG) org.hibernate.SQL -> drop sequence INDEXCOMPOSITION_SEQ
  2015-06-09 20:24:39,951 [main] (DEBUG) org.hibernate.SQL -> drop sequence ISIN_SEQ
  2015-06-09 20:24:39,953 [main] (DEBUG) org.hibernate.SQL -> drop sequence JOURNALENTRY_SEQ
  2015-06-09 20:24:39,954 [main] (DEBUG) org.hibernate.SQL -> drop sequence MARKETEVENT_SEQ
  2015-06-09 20:24:39,956 [main] (DEBUG) org.hibernate.SQL -> drop sequence MARKETORDER_SEQ
  2015-06-09 20:24:39,957 [main] (DEBUG) org.hibernate.SQL -> drop sequence MARKETTRADE_SEQ
  2015-06-09 20:24:39,959 [main] (DEBUG) org.hibernate.SQL -> drop sequence ORDEREVENT_SEQ
  2015-06-09 20:24:39,960 [main] (DEBUG) org.hibernate.SQL -> drop sequence ORDEREXECUTION_SEQ
  2015-06-09 20:24:39,961 [main] (DEBUG) org.hibernate.SQL -> drop sequence ORDERS_SEQ
  2015-06-09 20:24:39,963 [main] (DEBUG) org.hibernate.SQL -> drop sequence RULEFORMULA_SEQ
  2015-06-09 20:24:39,964 [main] (DEBUG) org.hibernate.SQL -> drop sequence RULE_SEQ
  2015-06-09 20:24:39,966 [main] (DEBUG) org.hibernate.SQL -> drop sequence SECTOR_SEQ
  2015-06-09 20:24:39,967 [main] (DEBUG) org.hibernate.SQL -> drop sequence SECURITYINFO_SEQ
  2015-06-09 20:24:39,968 [main] (DEBUG) org.hibernate.SQL -> drop sequence SECURITY_SEQ
  2015-06-09 20:24:39,970 [main] (DEBUG) org.hibernate.SQL -> drop sequence SEGMENT_SEQ
  2015-06-09 20:24:39,971 [main] (DEBUG) org.hibernate.SQL -> drop table if exists SEQUENCE cascade
  2015-06-09 20:24:39,973 [main] (DEBUG) org.hibernate.SQL -> drop sequence SUBSECTOR_SEQ
  2015-06-09 20:24:39,974 [main] (DEBUG) org.hibernate.SQL -> drop sequence TAXSETUP_SEQ
  2015-06-09 20:24:39,975 [main] (DEBUG) org.hibernate.SQL -> create table Account (accountID varchar(20) not null, AccName varchar(100), AccountCategory varchar(255), AccountType varchar(255), Balance numeric(19, 6), CreditLimit numeric(19, 6), Description varchar(255), Open boolean, currencyID varchar(5) not null, fatherAccountID varchar(20), primary key (accountID))
  2015-06-09 20:24:40,077 [main] (DEBUG) org.hibernate.SQL -> create table Broker (brokerID int8 not null, BrokerCode varchar(20), BrokerName varchar(255) not null, primary key (brokerID))
  2015-06-09 20:24:40,130 [main] (DEBUG) org.hibernate.SQL -> create table Brokerage (brokerageID int8 not null, Category varchar(255), TradeType varchar(255), brokerID int8 not null, primary key (brokerageID))
  2015-06-09 20:24:40,246 [main] (DEBUG) org.hibernate.SQL -> create table Commission (commissionID int8 not null, CalcTypes varchar(30), CommValue float8, ValueMax float8, ValueMin float8, brokerageID int8 not null, primary key (commissionID))
  2015-06-09 20:24:40,301 [main] (DEBUG) org.hibernate.SQL -> create table Company (companyID int8 not null, CNPJ varchar(14), CompanyDate timestamp, CompanyName varchar(100) not null, MarketName varchar(50), OnShares int8, PnShares int8, Status varchar(255), stockExchangeID varchar(12) not null, primary key (companyID))
  2015-06-09 20:24:40,345 [main] (DEBUG) org.hibernate.SQL -> create table CompanySegment (companyID int8 not null, segmentID int8 not null, primary key (companyID, segmentID))
  2015-06-09 20:24:40,388 [main] (DEBUG) org.hibernate.SQL -> create table Configuration (configurationID int8 not null, properties bytea, primary key (configurationID))
  2015-06-09 20:24:40,468 [main] (DEBUG) org.hibernate.SQL -> create table CostCenter (costCenterID int8 not null, Name varchar(250), primary key (costCenterID))
  2015-06-09 20:24:40,518 [main] (DEBUG) org.hibernate.SQL -> create table Country (countryID varchar(3) not null, Area float8, Continent varchar(2), CountryName varchar(100) not null, Population int8, primary key (countryID))
  2015-06-09 20:24:40,567 [main] (DEBUG) org.hibernate.SQL -> create table Currency (currencyID varchar(5) not null, CurrSymbol varchar(5), Description varchar(255), FractionalUnit varchar(50), Sign varchar(255), primary key (currencyID))
  2015-06-09 20:24:40,665 [main] (DEBUG) org.hibernate.SQL -> create table CurrencyQuote (currencyQuoteID int8 not null, QDateTime timestamp not null, Value numeric(19, 6) not null, currencyID varchar(5) not null, primary key (currencyQuoteID))
  2015-06-09 20:24:40,708 [main] (DEBUG) org.hibernate.SQL -> create table Deposit (depositID int8 not null, DepositDate timestamp not null, Description varchar(255), Value numeric(19, 6) not null, DepositAccount varchar(20) not null, primary key (depositID))
  2015-06-09 20:24:40,752 [main] (DEBUG) org.hibernate.SQL -> create table DistributionRule (distributionRuleID int8 not null, ObjectRule varchar(30), RuleName varchar(100), primary key (distributionRuleID))
  2015-06-09 20:24:40,797 [main] (DEBUG) org.hibernate.SQL -> create table Earning (earningID int8 not null, EarningType varchar(50), EarningValue numeric(19, 10), ExDate timestamp, ExPrice numeric(19, 6), securityID int8 not null, primary key (earningID))
  2015-06-09 20:24:40,863 [main] (DEBUG) org.hibernate.SQL -> create table EntryRegister (entryRegisterID int8 not null, Credit numeric(19, 6) not null, Debit numeric(19, 6) not null, Description varchar(255), EntryType varchar(255) not null, OperationID varchar(20), creditAccountID varchar(20) not null, currencyID varchar(5) not null, debitAccountID varchar(20) not null, entryID int8 not null, primary key (entryRegisterID))
  2015-06-09 20:24:40,974 [main] (DEBUG) org.hibernate.SQL -> create table ExchangeTax (exchangeTaxID int8 not null, CalcType varchar(30), Tax float8, TaxName varchar(50), brokerageID int8 not null, primary key (exchangeTaxID))
  2015-06-09 20:24:41,023 [main] (DEBUG) org.hibernate.SQL -> create table HistoricalQuote (historicalQuoteID int8 not null, AdjClose numeric(19, 6), Ask numeric(19, 6) not null, AvgPrice numeric(19, 6) not null, Bid numeric(19, 6) not null, Close numeric(19, 6) not null, High numeric(19, 6) not null, Low numeric(19, 6) not null, Open numeric(19, 6) not null, QDateTime timestamp not null, QuoteFactor int4, TradedQuantity int8, TradedUnits int8, Volume numeric(19, 2) not null, securityID int8 not null, primary key (historicalQuoteID))
  2015-06-09 20:24:41,074 [main] (DEBUG) org.hibernate.SQL -> create table Index (indexID int8 not null, Index varchar(12), IndexName varchar(100), primary key (indexID))
  2015-06-09 20:24:41,118 [main] (DEBUG) org.hibernate.SQL -> create table IndexComposition (indexCompID int8 not null, IndexDate varchar(10) not null, indexID int8 not null, securityID int8 not null, primary key (indexCompID))
  2015-06-09 20:24:41,165 [main] (DEBUG) org.hibernate.SQL -> create table Isin (isinID int8 not null, Description varchar(255), ISIN varchar(12), Status varchar(50), primary key (isinID))
  2015-06-09 20:24:41,209 [main] (DEBUG) org.hibernate.SQL -> create table JournalEntry (entryID int8 not null, Description varchar(255), EntryClose timestamp, EntryDate timestamp not null, JournalStatus varchar(255), primary key (entryID))
  2015-06-09 20:24:41,308 [main] (DEBUG) org.hibernate.SQL -> create table MarketEvent (marketEventID int8 not null, EventDateTime timestamp, EventType int4, Message varchar(255), marketOrderID int8, primary key (marketEventID))
  2015-06-09 20:24:41,348 [main] (DEBUG) org.hibernate.SQL -> create table MarketOrder (marketOrderID int8 not null, ExpirationDate timestamp, ExternalID varchar(30), OrderDateTime timestamp, OrderStatus varchar(20), Price numeric(19, 6), Side varchar(10), Volume int4, brokerID int8 not null, securityID int8 not null, primary key (marketOrderID))
  2015-06-09 20:24:41,394 [main] (DEBUG) org.hibernate.SQL -> create table MarketTrade (marketTradeID int8 not null, Price numeric(19, 6), TradeDateTime timestamp, Volume int4, buyOrderID int8 not null, sellOrderID int8 not null, primary key (marketTradeID))
  2015-06-09 20:24:41,441 [main] (DEBUG) org.hibernate.SQL -> create table OrderEvent (orderEventID int8 not null, EventDateTime timestamp, EventType varchar(50), Message varchar(255), orderID int8 not null, primary key (orderEventID))
  2015-06-09 20:24:41,479 [main] (DEBUG) org.hibernate.SQL -> create table OrderExecution (orderExecutionID int8 not null, ExecutionDateTime timestamp, Price float8, Volume int4, orderID int8 not null, primary key (orderExecutionID))
  2015-06-09 20:24:41,529 [main] (DEBUG) org.hibernate.SQL -> create table Orders (orderID int8 not null, AveragePrice numeric(19, 6), Comment varchar(250), Duration timestamp not null, ExecutedVolume int4, OrderDateTime timestamp not null, OrderSerial varchar(25) not null, OrderStatus varchar(255) not null, OrderType varchar(255) not null, Price float8, Side varchar(255) not null, StopPrice float8, TradeType varchar(255) not null, Volume int4 not null, securityID int8 not null, primary key (orderID))
  2015-06-09 20:24:41,594 [main] (DEBUG) org.hibernate.SQL -> create table Rule (ruleID int8 not null, ApplyTax boolean, ApplyValue boolean, Object varchar(30), creditAccountID varchar(20) not null, debitAccountID varchar(20) not null, distributionRuleID int8 not null, ruleFormulaID int8 not null, taxSetupID int8 not null, primary key (ruleID))
  2015-06-09 20:24:41,653 [main] (DEBUG) org.hibernate.SQL -> create table RuleFormula (ruleFormulaID int8 not null, Description varchar(100), ValueFormula varchar(255), primary key (ruleFormulaID))
  2015-06-09 20:24:41,729 [main] (DEBUG) org.hibernate.SQL -> create table Sector (sectorID int8 not null, SectorName varchar(100), primary key (sectorID))
  2015-06-09 20:24:41,793 [main] (DEBUG) org.hibernate.SQL -> create table Security (securityID int8 not null, Description varchar(255), Symbol varchar(50) not null, securityInfoID_securityInfoID int8, primary key (securityID))
  2015-06-09 20:24:41,845 [main] (DEBUG) org.hibernate.SQL -> create table SecurityInfo (securityInfoID int8 not null, Category varchar(30), EmissionDate date, ExcercisePrice float8, ExpirationDate date, FutureSerie varchar(1), MinimalVolume int4, ObjectAsset varchar(1), OptionSerie varchar(1), OptionStyle varchar(25), QuoteFactor int4, SymbolDate timestamp, currencyID varchar(5), primary key (securityInfoID))
  2015-06-09 20:24:41,910 [main] (DEBUG) org.hibernate.SQL -> create table Segment (segmentID int8 not null, SegmentName varchar(100), subsectorID int8 not null, primary key (segmentID))
  2015-06-09 20:24:41,955 [main] (DEBUG) org.hibernate.SQL -> create table StockExchange (stockExchangeID varchar(12) not null, ExchangeName varchar(100), countryID varchar(3) not null, primary key (stockExchangeID))
  2015-06-09 20:24:41,993 [main] (DEBUG) org.hibernate.SQL -> create table Subsector (subsectorID int8 not null, SubsectorName varchar(100), sectorID int8 not null, primary key (subsectorID))
  2015-06-09 20:24:42,038 [main] (DEBUG) org.hibernate.SQL -> create table Tax (taxID varchar(10) not null, TaxName varchar(100) not null, primary key (taxID))
  2015-06-09 20:24:42,099 [main] (DEBUG) org.hibernate.SQL -> create table TaxSetup (taxSetupID int8 not null, Aliquota float4 not null, SetupName varchar(100), TaxValue numeric(19, 6) not null, taxID varchar(10) not null, primary key (taxSetupID))
  2015-06-09 20:24:42,135 [main] (DEBUG) org.hibernate.SQL -> alter table Index add constraint UK_fmpvs497uei7dukb3ipn37dny  unique (Index)
  2015-06-09 20:24:42,179 [main] (DEBUG) org.hibernate.SQL -> alter table IndexComposition add constraint UK_igqjee2anekxe99bhrx32sknv  unique (IndexDate, indexID, securityID)
  2015-06-09 20:24:42,224 [main] (DEBUG) org.hibernate.SQL -> alter table Isin add constraint UK_hqomram3ltdhajbdc6ogblqpq  unique (ISIN)
  2015-06-09 20:24:42,276 [main] (DEBUG) org.hibernate.SQL -> alter table MarketTrade add constraint UK_rx76goiwkhx9k3lfjp3gtvjw8  unique (TradeDateTime, Price, Volume)
  2015-06-09 20:24:42,326 [main] (DEBUG) org.hibernate.SQL -> alter table Orders add constraint UK_iuumeiyk1dat9iokybnry1acl  unique (OrderSerial)
  2015-06-09 20:24:42,367 [main] (DEBUG) org.hibernate.SQL -> alter table Account add constraint FK_j9a281ub4trd8flyr8xp2js77 foreign key (currencyID) references Currency
  2015-06-09 20:24:42,370 [main] (DEBUG) org.hibernate.SQL -> alter table Account add constraint FK_gorcvfmprkuv169e9locc1crk foreign key (fatherAccountID) references Account
  2015-06-09 20:24:42,372 [main] (DEBUG) org.hibernate.SQL -> alter table Brokerage add constraint FK_mf8sg4j6ifsn0uinwp41jo45h foreign key (brokerID) references Broker
  2015-06-09 20:24:42,374 [main] (DEBUG) org.hibernate.SQL -> alter table Commission add constraint FK_kn2t2gq6ndbivsdjfmbrbqxxo foreign key (brokerageID) references Brokerage
  2015-06-09 20:24:42,375 [main] (DEBUG) org.hibernate.SQL -> alter table Company add constraint FK_biv6ml1wj3jdk9s2bv3wjxi7y foreign key (stockExchangeID) references StockExchange
  2015-06-09 20:24:42,377 [main] (DEBUG) org.hibernate.SQL -> alter table CompanySegment add constraint FK_bgicmvdtr63buv5tgq3m53dkr foreign key (segmentID) references Segment
  2015-06-09 20:24:42,379 [main] (DEBUG) org.hibernate.SQL -> alter table CompanySegment add constraint FK_a5101tjhewkpyq19bipiqyv6e foreign key (companyID) references Company
  2015-06-09 20:24:42,381 [main] (DEBUG) org.hibernate.SQL -> alter table CurrencyQuote add constraint FK_kjywcly93l6mcln2rgep1dkwt foreign key (currencyID) references Currency
  2015-06-09 20:24:42,383 [main] (DEBUG) org.hibernate.SQL -> alter table Deposit add constraint FK_6c51s80i2ukj6d9el25p242rp foreign key (DepositAccount) references Account
  2015-06-09 20:24:42,385 [main] (DEBUG) org.hibernate.SQL -> alter table Earning add constraint FK_2612awd6r9o5vbcvd278liqjr foreign key (securityID) references Security
  2015-06-09 20:24:42,387 [main] (DEBUG) org.hibernate.SQL -> alter table EntryRegister add constraint FK_ogct9b5kokepkm47buqcd54h4 foreign key (creditAccountID) references Account
  2015-06-09 20:24:42,389 [main] (DEBUG) org.hibernate.SQL -> alter table EntryRegister add constraint FK_a0qynfc0ao56bkps2fnynr5lf foreign key (currencyID) references Currency
  2015-06-09 20:24:42,390 [main] (DEBUG) org.hibernate.SQL -> alter table EntryRegister add constraint FK_15n07eyn8sv1ewb8tjbo7wogr foreign key (debitAccountID) references Account
  2015-06-09 20:24:42,393 [main] (DEBUG) org.hibernate.SQL -> alter table EntryRegister add constraint FK_1sqikeghk4ijftavrpbs166jt foreign key (entryID) references JournalEntry
  2015-06-09 20:24:42,395 [main] (DEBUG) org.hibernate.SQL -> alter table ExchangeTax add constraint FK_8726k2vvh4x3b7t2s2licibgj foreign key (brokerageID) references Brokerage
  2015-06-09 20:24:42,397 [main] (DEBUG) org.hibernate.SQL -> alter table HistoricalQuote add constraint FK_lexipjdypu6ar61c3m170t0gg foreign key (securityID) references Security
  2015-06-09 20:24:42,400 [main] (DEBUG) org.hibernate.SQL -> alter table IndexComposition add constraint FK_8l1d15jcajd96t3bq23jissat foreign key (indexID) references Index
  2015-06-09 20:24:42,403 [main] (DEBUG) org.hibernate.SQL -> alter table IndexComposition add constraint FK_nk7h5bm8fyn3y7h671xayke1a foreign key (securityID) references Security
  2015-06-09 20:24:42,405 [main] (DEBUG) org.hibernate.SQL -> alter table MarketEvent add constraint FK_1nnr0e3p34ifebeqmbx6ahx7w foreign key (marketOrderID) references MarketOrder
  2015-06-09 20:24:42,408 [main] (DEBUG) org.hibernate.SQL -> alter table MarketEvent add constraint FK_f2qtssu1k0o8tgdyna7a4fqos foreign key (marketEventID) references MarketOrder
  2015-06-09 20:24:42,410 [main] (DEBUG) org.hibernate.SQL -> alter table MarketOrder add constraint FK_949ula361f7m14ih46g8ci18s foreign key (brokerID) references Broker
  2015-06-09 20:24:42,413 [main] (DEBUG) org.hibernate.SQL -> alter table MarketOrder add constraint FK_3f51yfii3mu4xgklk4id3p278 foreign key (securityID) references Security
  2015-06-09 20:24:42,417 [main] (DEBUG) org.hibernate.SQL -> alter table MarketTrade add constraint FK_4j6hp5bsv8c59rapstit01bh0 foreign key (buyOrderID) references MarketOrder
  2015-06-09 20:24:42,419 [main] (DEBUG) org.hibernate.SQL -> alter table MarketTrade add constraint FK_mqcm78tte6b2bmlp7qb18qkux foreign key (sellOrderID) references MarketOrder
  2015-06-09 20:24:42,421 [main] (DEBUG) org.hibernate.SQL -> alter table OrderEvent add constraint FK_9n5qpddiwyg7g1mfhsqbpqiwm foreign key (orderID) references Orders
  2015-06-09 20:24:42,423 [main] (DEBUG) org.hibernate.SQL -> alter table OrderExecution add constraint FK_7epyl2tm3830jp91upal43twe foreign key (orderID) references Orders
  2015-06-09 20:24:42,425 [main] (DEBUG) org.hibernate.SQL -> alter table Orders add constraint FK_9knpc95t0a6j4p5f438jnuxe5 foreign key (securityID) references Security
  2015-06-09 20:24:42,427 [main] (DEBUG) org.hibernate.SQL -> alter table Rule add constraint FK_32aj6he7tm12eolvjnaxalih0 foreign key (creditAccountID) references Account
  2015-06-09 20:24:42,429 [main] (DEBUG) org.hibernate.SQL -> alter table Rule add constraint FK_bnxop07lgblwg75pc45iiaj9b foreign key (debitAccountID) references Account
  2015-06-09 20:24:42,431 [main] (DEBUG) org.hibernate.SQL -> alter table Rule add constraint FK_9o658wtsgxwtqad8yfqt6alna foreign key (distributionRuleID) references DistributionRule
  2015-06-09 20:24:42,433 [main] (DEBUG) org.hibernate.SQL -> alter table Rule add constraint FK_b1d36wq16yh60gvb6aokw3kri foreign key (ruleFormulaID) references RuleFormula
  2015-06-09 20:24:42,435 [main] (DEBUG) org.hibernate.SQL -> alter table Rule add constraint FK_koh49879dd30tnhje19we7ike foreign key (taxSetupID) references TaxSetup
  2015-06-09 20:24:42,437 [main] (DEBUG) org.hibernate.SQL -> alter table Security add constraint FK_imw4w23r0ncgrcn2p09rt547x foreign key (securityInfoID_securityInfoID) references SecurityInfo
  2015-06-09 20:24:42,440 [main] (DEBUG) org.hibernate.SQL -> alter table SecurityInfo add constraint FK_tokuwvtdvj49iq95dx47wba6q foreign key (currencyID) references Currency
  2015-06-09 20:24:42,441 [main] (DEBUG) org.hibernate.SQL -> alter table Segment add constraint FK_rddqr3vy1v4847vby6twur3o0 foreign key (subsectorID) references Subsector
  2015-06-09 20:24:42,443 [main] (DEBUG) org.hibernate.SQL -> alter table StockExchange add constraint FK_4wp2kggi860gei0usdeac6x9c foreign key (countryID) references Country
  2015-06-09 20:24:42,445 [main] (DEBUG) org.hibernate.SQL -> alter table Subsector add constraint FK_lvhbgxuk6p8ocutbni6jv3xlq foreign key (sectorID) references Sector
  2015-06-09 20:24:42,447 [main] (DEBUG) org.hibernate.SQL -> alter table TaxSetup add constraint FK_p9c99uuaum9vflxuf4aaiqhin foreign key (taxID) references Tax
  2015-06-09 20:24:42,449 [main] (DEBUG) org.hibernate.SQL -> create sequence BROKERAGE_SEQ
  2015-06-09 20:24:42,451 [main] (DEBUG) org.hibernate.SQL -> create sequence BROKER_SEQ
  2015-06-09 20:24:42,453 [main] (DEBUG) org.hibernate.SQL -> create sequence COMMISSION_SEQ
  2015-06-09 20:24:42,455 [main] (DEBUG) org.hibernate.SQL -> create sequence COMPANY_SEQ
  2015-06-09 20:24:42,458 [main] (DEBUG) org.hibernate.SQL -> create sequence CONFIGURATION_SEQ
  2015-06-09 20:24:42,460 [main] (DEBUG) org.hibernate.SQL -> create sequence COSTCENTER_SEQ
  2015-06-09 20:24:42,462 [main] (DEBUG) org.hibernate.SQL -> create sequence CURRENCY_SEQ
  2015-06-09 20:24:42,464 [main] (DEBUG) org.hibernate.SQL -> create sequence DEPOSIT_SEQ
  2015-06-09 20:24:42,466 [main] (DEBUG) org.hibernate.SQL -> create sequence DISTRIBUTIONRULE_SEQ
  2015-06-09 20:24:42,469 [main] (DEBUG) org.hibernate.SQL -> create sequence EARNING_SEQ
  2015-06-09 20:24:42,471 [main] (DEBUG) org.hibernate.SQL -> create sequence ENTRYREGISTER_SEQ
  2015-06-09 20:24:42,473 [main] (DEBUG) org.hibernate.SQL -> create sequence EXCHANGETAX_SEQ
  2015-06-09 20:24:42,475 [main] (DEBUG) org.hibernate.SQL -> create sequence HISTORICALQUOTE_SEQ
  2015-06-09 20:24:42,477 [main] (DEBUG) org.hibernate.SQL -> create sequence INDEXCOMPOSITION_SEQ
  2015-06-09 20:24:42,480 [main] (DEBUG) org.hibernate.SQL -> create sequence ISIN_SEQ
  2015-06-09 20:24:42,482 [main] (DEBUG) org.hibernate.SQL -> create sequence JOURNALENTRY_SEQ
  2015-06-09 20:24:42,484 [main] (DEBUG) org.hibernate.SQL -> create sequence MARKETEVENT_SEQ
  2015-06-09 20:24:42,486 [main] (DEBUG) org.hibernate.SQL -> create sequence MARKETORDER_SEQ
  2015-06-09 20:24:42,488 [main] (DEBUG) org.hibernate.SQL -> create sequence MARKETTRADE_SEQ
  2015-06-09 20:24:42,491 [main] (DEBUG) org.hibernate.SQL -> create sequence ORDEREVENT_SEQ
  2015-06-09 20:24:42,493 [main] (DEBUG) org.hibernate.SQL -> create sequence ORDEREXECUTION_SEQ
  2015-06-09 20:24:42,495 [main] (DEBUG) org.hibernate.SQL -> create sequence ORDERS_SEQ
  2015-06-09 20:24:42,497 [main] (DEBUG) org.hibernate.SQL -> create sequence RULEFORMULA_SEQ
  2015-06-09 20:24:42,500 [main] (DEBUG) org.hibernate.SQL -> create sequence RULE_SEQ
  2015-06-09 20:24:42,502 [main] (DEBUG) org.hibernate.SQL -> create sequence SECTOR_SEQ
  2015-06-09 20:24:42,504 [main] (DEBUG) org.hibernate.SQL -> create sequence SECURITYINFO_SEQ
  2015-06-09 20:24:42,506 [main] (DEBUG) org.hibernate.SQL -> create sequence SECURITY_SEQ
  2015-06-09 20:24:42,508 [main] (DEBUG) org.hibernate.SQL -> create sequence SEGMENT_SEQ
  2015-06-09 20:24:42,510 [main] (DEBUG) org.hibernate.SQL -> create table SEQUENCE ( sequence_name varchar(255),  sequence_next_hi_value int4 )
  2015-06-09 20:24:42,512 [main] (DEBUG) org.hibernate.SQL -> create sequence SUBSECTOR_SEQ
  2015-06-09 20:24:42,514 [main] (DEBUG) org.hibernate.SQL -> create sequence TAXSETUP_SEQ
  2015-06-09 20:24:42,516 [main] (INFO) org.hibernate.tool.hbm2ddl.SchemaExport -> HHH000230: Schema export complete
  2015-06-09 20:24:42,516 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing hbm.xml files
  2015-06-09 20:24:42,516 [main] (DEBUG) org.hibernate.cfg.Configuration -> Process annotated classes
  2015-06-09 20:24:42,516 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing fk mappings (*ToOne and JoinedSubclass)
  2015-06-09 20:24:42,516 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:24:42,516 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:24:42,516 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing collection mappings
  2015-06-09 20:24:42,516 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing native query and ResultSetMapping mappings
  2015-06-09 20:24:42,516 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing association property references
  2015-06-09 20:24:42,516 [main] (DEBUG) org.hibernate.cfg.Configuration -> Creating tables' unique integer identifiers
  2015-06-09 20:24:42,516 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing foreign key constraints
  2015-06-09 20:24:42,516 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:24:42,516 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:42,516 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:24:42,516 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.StockExchange
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Segment
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Company
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.JournalEntry
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Index
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.DistributionRule
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.RuleFormula
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.TaxSetup
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.SecurityInfo
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Subsector
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Country
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Sector
  2015-06-09 20:24:42,517 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Tax
  2015-06-09 20:24:42,518 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,518 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,518 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,518 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,518 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,518 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,518 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,518 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,518 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,519 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,519 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,519 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,519 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,519 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,519 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,519 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,519 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,519 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,519 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,519 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing hbm.xml files
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.cfg.Configuration -> Process annotated classes
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing fk mappings (*ToOne and JoinedSubclass)
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing collection mappings
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing native query and ResultSetMapping mappings
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing association property references
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.cfg.Configuration -> Creating tables' unique integer identifiers
  2015-06-09 20:24:42,520 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing foreign key constraints
  2015-06-09 20:24:42,521 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:24:42,521 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:42,521 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:24:42,521 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:24:42,521 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.StockExchange
  2015-06-09 20:24:42,521 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Segment
  2015-06-09 20:24:42,521 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Company
  2015-06-09 20:24:42,521 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:24:42,521 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:42,521 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:42,521 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:42,521 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:24:42,521 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.JournalEntry
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Index
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.DistributionRule
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.RuleFormula
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.TaxSetup
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.SecurityInfo
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Subsector
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Country
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Sector
  2015-06-09 20:24:42,522 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Tax
  2015-06-09 20:24:42,523 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,523 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,523 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,523 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,523 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,523 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,523 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,523 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,526 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,526 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,526 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,527 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,527 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,527 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,527 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,527 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,527 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,527 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,528 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,529 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,529 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,529 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:24:42,535 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking 89 named HQL queries
  2015-06-09 20:24:42,535 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Broker.findAll
  2015-06-09 20:24:42,580 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT b FROM com.cmm.jft.trading.account.Broker b
  2015-06-09 20:24:42,586 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'account'
       |     |  \-[IDENT] Node: 'Broker'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'b'

  2015-06-09 20:24:42,586 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,618 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,643 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.account.Broker (b) -> broker0_
  2015-06-09 20:24:42,644 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : b -> broker0_.brokerID
  2015-06-09 20:24:42,647 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,647 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} broker0_.brokerID ) ( FromClause{level=1} Broker broker0_ ) )
  2015-06-09 20:24:42,658 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Broker broker0_]
  2015-06-09 20:24:42,658 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,659 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Broker)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'broker0_.brokerID as brokerID1_1_' {alias=b, className=com.cmm.jft.trading.account.Broker, tableAlias=broker0_}
    |  \-[SQL_TOKEN] SqlFragment: 'broker0_.BrokerCode as BrokerCo2_1_, broker0_.BrokerName as BrokerNa3_1_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[broker0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Broker broker0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Broker,tableAlias=broker0_,origin=null,columns={,className=com.cmm.jft.trading.account.Broker}}

  2015-06-09 20:24:42,659 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,670 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT b FROM com.cmm.jft.trading.account.Broker b
  2015-06-09 20:24:42,670 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select broker0_.brokerID as brokerID1_1_, broker0_.BrokerCode as BrokerCo2_1_, broker0_.BrokerName as BrokerNa3_1_ from Broker broker0_
  2015-06-09 20:24:42,671 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,678 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: CurrencyQuote.findByValue
  2015-06-09 20:24:42,679 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.financial.CurrencyQuote c WHERE c.value = :value
  2015-06-09 20:24:42,683 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'CurrencyQuote'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'value'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'value'

  2015-06-09 20:24:42,683 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,683 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,683 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.CurrencyQuote (c) -> currencyqu0_
  2015-06-09 20:24:42,684 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currencyqu0_.currencyQuoteID
  2015-06-09 20:24:42,687 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currencyqu0_.currencyQuoteID
  2015-06-09 20:24:42,689 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : value -> org.hibernate.type.BigDecimalType@3bbc39f8
  2015-06-09 20:24:42,690 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.value -> currencyqu0_.Value
  2015-06-09 20:24:42,693 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,693 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} currencyqu0_.currencyQuoteID ) ( FromClause{level=1} CurrencyQuote currencyqu0_ ) ( WHERE ( = ( currencyqu0_.Value currencyqu0_.currencyQuoteID value ) ? ) ) )
  2015-06-09 20:24:42,693 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [CurrencyQuote currencyqu0_]
  2015-06-09 20:24:42,693 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,694 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CurrencyQuote)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currencyqu0_.currencyQuoteID as currency1_10_' {alias=c, className=com.cmm.jft.financial.CurrencyQuote, tableAlias=currencyqu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currencyqu0_.currencyID as currency4_10_, currencyqu0_.QDateTime as QDateTim2_10_, currencyqu0_.Value as Value3_10_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currencyqu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CurrencyQuote currencyqu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CurrencyQuote,tableAlias=currencyqu0_,origin=null,columns={,className=com.cmm.jft.financial.CurrencyQuote}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'currencyqu0_.Value' {propertyName=value,dereferenceType=PRIMITIVE,getPropertyPath=value,path=c.value,tableAlias=currencyqu0_,className=com.cmm.jft.financial.CurrencyQuote,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'currencyqu0_.currencyQuoteID' {alias=c, className=com.cmm.jft.financial.CurrencyQuote, tableAlias=currencyqu0_}
          |  \-[IDENT] IdentNode: 'value' {originalText=value}
          \-[NAMED_PARAM] ParameterNode: '?' {name=value, expectedType=org.hibernate.type.BigDecimalType@3bbc39f8}

  2015-06-09 20:24:42,694 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,694 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.financial.CurrencyQuote c WHERE c.value = :value
  2015-06-09 20:24:42,694 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select currencyqu0_.currencyQuoteID as currency1_10_, currencyqu0_.currencyID as currency4_10_, currencyqu0_.QDateTime as QDateTim2_10_, currencyqu0_.Value as Value3_10_ from CurrencyQuote currencyqu0_ where currencyqu0_.Value=?
  2015-06-09 20:24:42,694 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,698 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: EntryRegister.findByEntryRegisterID
  2015-06-09 20:24:42,699 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.entryRegisterID = :entryRegisterID
  2015-06-09 20:24:42,703 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'EntryRegister'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'entryRegisterID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'entryRegisterID'

  2015-06-09 20:24:42,703 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,704 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,704 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.EntryRegister (e) -> entryregis0_
  2015-06-09 20:24:42,705 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:24:42,705 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:24:42,705 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : entryRegisterID -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:42,705 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.entryRegisterID -> entryregis0_.entryRegisterID
  2015-06-09 20:24:42,705 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,705 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} entryregis0_.entryRegisterID ) ( FromClause{level=1} EntryRegister entryregis0_ ) ( WHERE ( = ( entryregis0_.entryRegisterID entryregis0_.entryRegisterID entryRegisterID ) ? ) ) )
  2015-06-09 20:24:42,705 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [EntryRegister entryregis0_]
  2015-06-09 20:24:42,706 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,706 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EntryRegister)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID as entryReg1_14_' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
    |  \-[SQL_TOKEN] SqlFragment: 'entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[entryregis0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EntryRegister entryregis0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=EntryRegister,tableAlias=entryregis0_,origin=null,columns={,className=com.cmm.jft.financial.EntryRegister}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'entryregis0_.entryRegisterID' {propertyName=entryRegisterID,dereferenceType=PRIMITIVE,getPropertyPath=entryRegisterID,path=e.entryRegisterID,tableAlias=entryregis0_,className=com.cmm.jft.financial.EntryRegister,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
          |  \-[IDENT] IdentNode: 'entryRegisterID' {originalText=entryRegisterID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=entryRegisterID, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:42,706 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,706 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.entryRegisterID = :entryRegisterID
  2015-06-09 20:24:42,706 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select entryregis0_.entryRegisterID as entryReg1_14_, entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_ from EntryRegister entryregis0_ where entryregis0_.entryRegisterID=?
  2015-06-09 20:24:42,706 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,706 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Tax.findByTaxName
  2015-06-09 20:24:42,707 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT t FROM com.cmm.jft.financial.Tax t WHERE t.taxName = :taxName
  2015-06-09 20:24:42,710 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Tax'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'taxName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'taxName'

  2015-06-09 20:24:42,710 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,710 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,711 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Tax (t) -> tax0_
  2015-06-09 20:24:42,711 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> tax0_.taxID
  2015-06-09 20:24:42,711 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> tax0_.taxID
  2015-06-09 20:24:42,711 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : taxName -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:42,711 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t.taxName -> tax0_.TaxName
  2015-06-09 20:24:42,711 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,711 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} tax0_.taxID ) ( FromClause{level=1} Tax tax0_ ) ( WHERE ( = ( tax0_.TaxName tax0_.taxID taxName ) ? ) ) )
  2015-06-09 20:24:42,711 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Tax tax0_]
  2015-06-09 20:24:42,711 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,713 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Tax)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'tax0_.taxID as taxID1_35_' {alias=t, className=com.cmm.jft.financial.Tax, tableAlias=tax0_}
    |  \-[SQL_TOKEN] SqlFragment: 'tax0_.TaxName as TaxName2_35_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[tax0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Tax tax0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=Tax,tableAlias=tax0_,origin=null,columns={,className=com.cmm.jft.financial.Tax}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tax0_.TaxName' {propertyName=taxName,dereferenceType=PRIMITIVE,getPropertyPath=taxName,path=t.taxName,tableAlias=tax0_,className=com.cmm.jft.financial.Tax,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'tax0_.taxID' {alias=t, className=com.cmm.jft.financial.Tax, tableAlias=tax0_}
          |  \-[IDENT] IdentNode: 'taxName' {originalText=taxName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=taxName, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:42,713 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,713 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT t FROM com.cmm.jft.financial.Tax t WHERE t.taxName = :taxName
  2015-06-09 20:24:42,713 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select tax0_.taxID as taxID1_35_, tax0_.TaxName as TaxName2_35_ from Tax tax0_ where tax0_.TaxName=?
  2015-06-09 20:24:42,713 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,713 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Currency.findByCurrencyID
  2015-06-09 20:24:42,714 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.financial.Currency c WHERE c.currencyID = :currencyID
  2015-06-09 20:24:42,721 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Currency'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'currencyID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'currencyID'

  2015-06-09 20:24:42,721 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,722 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,722 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Currency (c) -> currency0_
  2015-06-09 20:24:42,722 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currency0_.currencyID
  2015-06-09 20:24:42,722 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currency0_.currencyID
  2015-06-09 20:24:42,722 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : currencyID -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:42,722 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.currencyID -> currency0_.currencyID
  2015-06-09 20:24:42,722 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,722 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} currency0_.currencyID ) ( FromClause{level=1} Currency currency0_ ) ( WHERE ( = ( currency0_.currencyID currency0_.currencyID currencyID ) ? ) ) )
  2015-06-09 20:24:42,722 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Currency currency0_]
  2015-06-09 20:24:42,724 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,724 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Currency)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currency0_.currencyID as currency1_9_' {alias=c, className=com.cmm.jft.financial.Currency, tableAlias=currency0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currency0_.CurrSymbol as CurrSymb2_9_, currency0_.Description as Descript3_9_, currency0_.FractionalUnit as Fraction4_9_, currency0_.Sign as Sign5_9_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currency0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Currency currency0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Currency,tableAlias=currency0_,origin=null,columns={,className=com.cmm.jft.financial.Currency}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'currency0_.currencyID' {propertyName=currencyID,dereferenceType=PRIMITIVE,getPropertyPath=currencyID,path=c.currencyID,tableAlias=currency0_,className=com.cmm.jft.financial.Currency,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'currency0_.currencyID' {alias=c, className=com.cmm.jft.financial.Currency, tableAlias=currency0_}
          |  \-[IDENT] IdentNode: 'currencyID' {originalText=currencyID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=currencyID, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:42,724 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,725 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.financial.Currency c WHERE c.currencyID = :currencyID
  2015-06-09 20:24:42,725 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select currency0_.currencyID as currency1_9_, currency0_.CurrSymbol as CurrSymb2_9_, currency0_.Description as Descript3_9_, currency0_.FractionalUnit as Fraction4_9_, currency0_.Sign as Sign5_9_ from Currency currency0_ where currency0_.currencyID=?
  2015-06-09 20:24:42,725 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,725 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: EntryRegister.findByDebit
  2015-06-09 20:24:42,725 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.debit = :debit
  2015-06-09 20:24:42,733 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'EntryRegister'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'debit'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'debit'

  2015-06-09 20:24:42,733 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,734 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,734 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.EntryRegister (e) -> entryregis0_
  2015-06-09 20:24:42,734 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:24:42,734 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:24:42,734 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : debit -> org.hibernate.type.BigDecimalType@3bbc39f8
  2015-06-09 20:24:42,734 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.debit -> entryregis0_.Debit
  2015-06-09 20:24:42,734 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,735 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} entryregis0_.entryRegisterID ) ( FromClause{level=1} EntryRegister entryregis0_ ) ( WHERE ( = ( entryregis0_.Debit entryregis0_.entryRegisterID debit ) ? ) ) )
  2015-06-09 20:24:42,735 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [EntryRegister entryregis0_]
  2015-06-09 20:24:42,735 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,736 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EntryRegister)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID as entryReg1_14_' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
    |  \-[SQL_TOKEN] SqlFragment: 'entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[entryregis0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EntryRegister entryregis0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=EntryRegister,tableAlias=entryregis0_,origin=null,columns={,className=com.cmm.jft.financial.EntryRegister}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'entryregis0_.Debit' {propertyName=debit,dereferenceType=PRIMITIVE,getPropertyPath=debit,path=e.debit,tableAlias=entryregis0_,className=com.cmm.jft.financial.EntryRegister,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
          |  \-[IDENT] IdentNode: 'debit' {originalText=debit}
          \-[NAMED_PARAM] ParameterNode: '?' {name=debit, expectedType=org.hibernate.type.BigDecimalType@3bbc39f8}

  2015-06-09 20:24:42,736 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,736 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.debit = :debit
  2015-06-09 20:24:42,736 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select entryregis0_.entryRegisterID as entryReg1_14_, entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_ from EntryRegister entryregis0_ where entryregis0_.Debit=?
  2015-06-09 20:24:42,736 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,736 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: IndexComposition.findAll
  2015-06-09 20:24:42,737 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT i FROM com.cmm.jft.trading.securities.IndexComposition i
  2015-06-09 20:24:42,740 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'IndexComposition'
       |     \-[ALIAS] Node: 'i'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'i'

  2015-06-09 20:24:42,740 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,740 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,741 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.IndexComposition (i) -> indexcompo0_
  2015-06-09 20:24:42,741 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> indexcompo0_.indexCompID
  2015-06-09 20:24:42,741 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,741 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} indexcompo0_.indexCompID ) ( FromClause{level=1} IndexComposition indexcompo0_ ) )
  2015-06-09 20:24:42,741 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [IndexComposition indexcompo0_]
  2015-06-09 20:24:42,741 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,741 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (IndexComposition)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'indexcompo0_.indexCompID as indexCom1_18_' {alias=i, className=com.cmm.jft.trading.securities.IndexComposition, tableAlias=indexcompo0_}
    |  \-[SQL_TOKEN] SqlFragment: 'indexcompo0_.IndexDate as IndexDat2_18_, indexcompo0_.indexID as indexID3_18_, indexcompo0_.securityID as security4_18_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[i], fromElementByTableAlias=[indexcompo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'IndexComposition indexcompo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=IndexComposition,tableAlias=indexcompo0_,origin=null,columns={,className=com.cmm.jft.trading.securities.IndexComposition}}

  2015-06-09 20:24:42,741 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,741 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT i FROM com.cmm.jft.trading.securities.IndexComposition i
  2015-06-09 20:24:42,741 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select indexcompo0_.indexCompID as indexCom1_18_, indexcompo0_.IndexDate as IndexDat2_18_, indexcompo0_.indexID as indexID3_18_, indexcompo0_.securityID as security4_18_ from IndexComposition indexcompo0_
  2015-06-09 20:24:42,741 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,742 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: DistributionRule.findByRuleName
  2015-06-09 20:24:42,743 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.DistributionRule d WHERE d.ruleName = :ruleName
  2015-06-09 20:24:42,746 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'DistributionRule'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'ruleName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'ruleName'

  2015-06-09 20:24:42,746 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,746 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,746 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.DistributionRule (d) -> distributi0_
  2015-06-09 20:24:42,748 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> distributi0_.distributionRuleID
  2015-06-09 20:24:42,748 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> distributi0_.distributionRuleID
  2015-06-09 20:24:42,749 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : ruleName -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:42,749 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d.ruleName -> distributi0_.RuleName
  2015-06-09 20:24:42,749 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,749 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} distributi0_.distributionRuleID ) ( FromClause{level=1} DistributionRule distributi0_ ) ( WHERE ( = ( distributi0_.RuleName distributi0_.distributionRuleID ruleName ) ? ) ) )
  2015-06-09 20:24:42,749 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [DistributionRule distributi0_]
  2015-06-09 20:24:42,749 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,749 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (DistributionRule)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'distributi0_.distributionRuleID as distribu1_12_' {alias=d, className=com.cmm.jft.financial.DistributionRule, tableAlias=distributi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'distributi0_.ObjectRule as ObjectRu2_12_, distributi0_.RuleName as RuleName3_12_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[distributi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'DistributionRule distributi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=DistributionRule,tableAlias=distributi0_,origin=null,columns={,className=com.cmm.jft.financial.DistributionRule}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'distributi0_.RuleName' {propertyName=ruleName,dereferenceType=PRIMITIVE,getPropertyPath=ruleName,path=d.ruleName,tableAlias=distributi0_,className=com.cmm.jft.financial.DistributionRule,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'distributi0_.distributionRuleID' {alias=d, className=com.cmm.jft.financial.DistributionRule, tableAlias=distributi0_}
          |  \-[IDENT] IdentNode: 'ruleName' {originalText=ruleName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=ruleName, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:42,749 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,751 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.DistributionRule d WHERE d.ruleName = :ruleName
  2015-06-09 20:24:42,751 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select distributi0_.distributionRuleID as distribu1_12_, distributi0_.ObjectRule as ObjectRu2_12_, distributi0_.RuleName as RuleName3_12_ from DistributionRule distributi0_ where distributi0_.RuleName=?
  2015-06-09 20:24:42,751 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,751 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: JournalEntry.findByEntryDate
  2015-06-09 20:24:42,752 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.entryDate = :entryDate
  2015-06-09 20:24:42,754 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'JournalEntry'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'entryDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'entryDate'

  2015-06-09 20:24:42,754 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,755 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,755 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.JournalEntry (e) -> journalent0_
  2015-06-09 20:24:42,755 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:24:42,755 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:24:42,755 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : entryDate -> org.hibernate.type.TimestampType@3b938003
  2015-06-09 20:24:42,755 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.entryDate -> journalent0_.EntryDate
  2015-06-09 20:24:42,755 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,755 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} journalent0_.entryID ) ( FromClause{level=1} JournalEntry journalent0_ ) ( WHERE ( = ( journalent0_.EntryDate journalent0_.entryID entryDate ) ? ) ) )
  2015-06-09 20:24:42,756 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [JournalEntry journalent0_]
  2015-06-09 20:24:42,756 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,756 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JournalEntry)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID as entryID1_20_' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
    |  \-[SQL_TOKEN] SqlFragment: 'journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[journalent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JournalEntry journalent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JournalEntry,tableAlias=journalent0_,origin=null,columns={,className=com.cmm.jft.financial.JournalEntry}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'journalent0_.EntryDate' {propertyName=entryDate,dereferenceType=PRIMITIVE,getPropertyPath=entryDate,path=e.entryDate,tableAlias=journalent0_,className=com.cmm.jft.financial.JournalEntry,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
          |  \-[IDENT] IdentNode: 'entryDate' {originalText=entryDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=entryDate, expectedType=org.hibernate.type.TimestampType@3b938003}

  2015-06-09 20:24:42,756 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,756 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.entryDate = :entryDate
  2015-06-09 20:24:42,756 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select journalent0_.entryID as entryID1_20_, journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_ from JournalEntry journalent0_ where journalent0_.EntryDate=?
  2015-06-09 20:24:42,756 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,756 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Segment.findBySegmentName
  2015-06-09 20:24:42,757 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Segment s WHERE s.segmentName = :segmentName
  2015-06-09 20:24:42,760 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Segment'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'segmentName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'segmentName'

  2015-06-09 20:24:42,760 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,761 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,766 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Segment (s) -> segment0_
  2015-06-09 20:24:42,766 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> segment0_.segmentID
  2015-06-09 20:24:42,766 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> segment0_.segmentID
  2015-06-09 20:24:42,766 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : segmentName -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:42,766 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s.segmentName -> segment0_.SegmentName
  2015-06-09 20:24:42,766 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,766 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} segment0_.segmentID ) ( FromClause{level=1} Segment segment0_ ) ( WHERE ( = ( segment0_.SegmentName segment0_.segmentID segmentName ) ? ) ) )
  2015-06-09 20:24:42,767 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Segment segment0_]
  2015-06-09 20:24:42,767 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,767 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Segment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'segment0_.segmentID as segmentI1_32_' {alias=s, className=com.cmm.jft.trading.securities.Segment, tableAlias=segment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'segment0_.SegmentName as SegmentN2_32_, segment0_.subsectorID as subsecto3_32_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[segment0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Segment segment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Segment,tableAlias=segment0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Segment}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'segment0_.SegmentName' {propertyName=segmentName,dereferenceType=PRIMITIVE,getPropertyPath=segmentName,path=s.segmentName,tableAlias=segment0_,className=com.cmm.jft.trading.securities.Segment,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'segment0_.segmentID' {alias=s, className=com.cmm.jft.trading.securities.Segment, tableAlias=segment0_}
          |  \-[IDENT] IdentNode: 'segmentName' {originalText=segmentName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=segmentName, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:42,767 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,767 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Segment s WHERE s.segmentName = :segmentName
  2015-06-09 20:24:42,767 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select segment0_.segmentID as segmentI1_32_, segment0_.SegmentName as SegmentN2_32_, segment0_.subsectorID as subsecto3_32_ from Segment segment0_ where segment0_.SegmentName=?
  2015-06-09 20:24:42,767 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,767 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Tax.findByTaxID
  2015-06-09 20:24:42,767 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT t FROM com.cmm.jft.financial.Tax t WHERE t.taxID = :taxID
  2015-06-09 20:24:42,770 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Tax'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'taxID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'taxID'

  2015-06-09 20:24:42,770 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,771 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,771 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Tax (t) -> tax0_
  2015-06-09 20:24:42,771 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> tax0_.taxID
  2015-06-09 20:24:42,771 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> tax0_.taxID
  2015-06-09 20:24:42,771 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : taxID -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:42,771 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t.taxID -> tax0_.taxID
  2015-06-09 20:24:42,771 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,771 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} tax0_.taxID ) ( FromClause{level=1} Tax tax0_ ) ( WHERE ( = ( tax0_.taxID tax0_.taxID taxID ) ? ) ) )
  2015-06-09 20:24:42,771 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Tax tax0_]
  2015-06-09 20:24:42,771 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,772 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Tax)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'tax0_.taxID as taxID1_35_' {alias=t, className=com.cmm.jft.financial.Tax, tableAlias=tax0_}
    |  \-[SQL_TOKEN] SqlFragment: 'tax0_.TaxName as TaxName2_35_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[tax0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Tax tax0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=Tax,tableAlias=tax0_,origin=null,columns={,className=com.cmm.jft.financial.Tax}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tax0_.taxID' {propertyName=taxID,dereferenceType=PRIMITIVE,getPropertyPath=taxID,path=t.taxID,tableAlias=tax0_,className=com.cmm.jft.financial.Tax,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'tax0_.taxID' {alias=t, className=com.cmm.jft.financial.Tax, tableAlias=tax0_}
          |  \-[IDENT] IdentNode: 'taxID' {originalText=taxID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=taxID, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:42,772 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,772 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT t FROM com.cmm.jft.financial.Tax t WHERE t.taxID = :taxID
  2015-06-09 20:24:42,772 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select tax0_.taxID as taxID1_35_, tax0_.TaxName as TaxName2_35_ from Tax tax0_ where tax0_.taxID=?
  2015-06-09 20:24:42,772 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,772 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Subsector.findAll
  2015-06-09 20:24:42,772 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Subsector s
  2015-06-09 20:24:42,777 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Subsector'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 's'

  2015-06-09 20:24:42,777 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,777 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,778 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Subsector (s) -> subsector0_
  2015-06-09 20:24:42,778 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> subsector0_.subsectorID
  2015-06-09 20:24:42,778 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,778 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} subsector0_.subsectorID ) ( FromClause{level=1} Subsector subsector0_ ) )
  2015-06-09 20:24:42,780 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Subsector subsector0_]
  2015-06-09 20:24:42,780 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,780 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Subsector)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'subsector0_.subsectorID as subsecto1_34_' {alias=s, className=com.cmm.jft.trading.securities.Subsector, tableAlias=subsector0_}
    |  \-[SQL_TOKEN] SqlFragment: 'subsector0_.sectorID as sectorID3_34_, subsector0_.SubsectorName as Subsecto2_34_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[subsector0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Subsector subsector0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Subsector,tableAlias=subsector0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Subsector}}

  2015-06-09 20:24:42,780 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,780 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Subsector s
  2015-06-09 20:24:42,780 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select subsector0_.subsectorID as subsecto1_34_, subsector0_.sectorID as sectorID3_34_, subsector0_.SubsectorName as Subsecto2_34_ from Subsector subsector0_
  2015-06-09 20:24:42,780 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,780 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Orders.findByOrderStatus
  2015-06-09 20:24:42,781 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.orderStatus = :orderStatus
  2015-06-09 20:24:42,784 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'trading'
    |  |     |  \-[IDENT] Node: 'Orders'
    |  |     \-[ALIAS] Node: 'o'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'o'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'o'
          |  \-[IDENT] Node: 'orderStatus'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'orderStatus'

  2015-06-09 20:24:42,784 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,785 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,785 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.Orders (o) -> orders0_
  2015-06-09 20:24:42,785 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:24:42,785 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:24:42,785 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : orderStatus -> org.hibernate.type.CustomType@26b95b0b
  2015-06-09 20:24:42,785 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o.orderStatus -> orders0_.OrderStatus
  2015-06-09 20:24:42,786 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,786 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} orders0_.orderID ) ( FromClause{level=1} Orders orders0_ ) ( WHERE ( = ( orders0_.OrderStatus orders0_.orderID orderStatus ) ? ) ) )
  2015-06-09 20:24:42,786 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Orders orders0_]
  2015-06-09 20:24:42,786 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,786 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID as orderID1_26_' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
    |  \-[SQL_TOKEN] SqlFragment: 'orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[orders0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Orders orders0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=Orders,tableAlias=orders0_,origin=null,columns={,className=com.cmm.jft.trading.Orders}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'orders0_.OrderStatus' {propertyName=orderStatus,dereferenceType=PRIMITIVE,getPropertyPath=orderStatus,path=o.orderStatus,tableAlias=orders0_,className=com.cmm.jft.trading.Orders,classAlias=o}
          |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
          |  \-[IDENT] IdentNode: 'orderStatus' {originalText=orderStatus}
          \-[NAMED_PARAM] ParameterNode: '?' {name=orderStatus, expectedType=org.hibernate.type.CustomType@26b95b0b}

  2015-06-09 20:24:42,786 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,786 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.orderStatus = :orderStatus
  2015-06-09 20:24:42,786 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select orders0_.orderID as orderID1_26_, orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_ from Orders orders0_ where orders0_.OrderStatus=?
  2015-06-09 20:24:42,786 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,786 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Deposit.findByDescription
  2015-06-09 20:24:42,787 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.Deposit d WHERE d.description = :description
  2015-06-09 20:24:42,794 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Deposit'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'description'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'description'

  2015-06-09 20:24:42,794 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,794 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,794 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Deposit (d) -> deposit0_
  2015-06-09 20:24:42,794 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:24:42,794 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:24:42,794 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : description -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:42,794 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d.description -> deposit0_.Description
  2015-06-09 20:24:42,794 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,795 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} deposit0_.depositID ) ( FromClause{level=1} Deposit deposit0_ ) ( WHERE ( = ( deposit0_.Description deposit0_.depositID description ) ? ) ) )
  2015-06-09 20:24:42,795 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Deposit deposit0_]
  2015-06-09 20:24:42,795 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,795 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Deposit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID as depositI1_11_' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[deposit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Deposit deposit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=Deposit,tableAlias=deposit0_,origin=null,columns={,className=com.cmm.jft.financial.Deposit}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'deposit0_.Description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=d.description,tableAlias=deposit0_,className=com.cmm.jft.financial.Deposit,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[NAMED_PARAM] ParameterNode: '?' {name=description, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:42,795 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,795 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.Deposit d WHERE d.description = :description
  2015-06-09 20:24:42,795 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select deposit0_.depositID as depositI1_11_, deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_ from Deposit deposit0_ where deposit0_.Description=?
  2015-06-09 20:24:42,795 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,795 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Currency.findByCurrSymbol
  2015-06-09 20:24:42,796 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.financial.Currency c WHERE c.currSymbol = :currSymbol
  2015-06-09 20:24:42,799 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Currency'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'currSymbol'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'currSymbol'

  2015-06-09 20:24:42,799 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,800 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,800 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Currency (c) -> currency0_
  2015-06-09 20:24:42,800 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currency0_.currencyID
  2015-06-09 20:24:42,800 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currency0_.currencyID
  2015-06-09 20:24:42,800 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : currSymbol -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:42,800 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.currSymbol -> currency0_.CurrSymbol
  2015-06-09 20:24:42,800 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,800 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} currency0_.currencyID ) ( FromClause{level=1} Currency currency0_ ) ( WHERE ( = ( currency0_.CurrSymbol currency0_.currencyID currSymbol ) ? ) ) )
  2015-06-09 20:24:42,800 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Currency currency0_]
  2015-06-09 20:24:42,800 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,801 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Currency)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currency0_.currencyID as currency1_9_' {alias=c, className=com.cmm.jft.financial.Currency, tableAlias=currency0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currency0_.CurrSymbol as CurrSymb2_9_, currency0_.Description as Descript3_9_, currency0_.FractionalUnit as Fraction4_9_, currency0_.Sign as Sign5_9_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currency0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Currency currency0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Currency,tableAlias=currency0_,origin=null,columns={,className=com.cmm.jft.financial.Currency}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'currency0_.CurrSymbol' {propertyName=currSymbol,dereferenceType=PRIMITIVE,getPropertyPath=currSymbol,path=c.currSymbol,tableAlias=currency0_,className=com.cmm.jft.financial.Currency,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'currency0_.currencyID' {alias=c, className=com.cmm.jft.financial.Currency, tableAlias=currency0_}
          |  \-[IDENT] IdentNode: 'currSymbol' {originalText=currSymbol}
          \-[NAMED_PARAM] ParameterNode: '?' {name=currSymbol, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:42,801 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,801 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.financial.Currency c WHERE c.currSymbol = :currSymbol
  2015-06-09 20:24:42,802 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select currency0_.currencyID as currency1_9_, currency0_.CurrSymbol as CurrSymb2_9_, currency0_.Description as Descript3_9_, currency0_.FractionalUnit as Fraction4_9_, currency0_.Sign as Sign5_9_ from Currency currency0_ where currency0_.CurrSymbol=?
  2015-06-09 20:24:42,802 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,802 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: CurrencyQuote.findByCurrencyQuoteID
  2015-06-09 20:24:42,802 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.financial.CurrencyQuote c WHERE c.currencyQuoteID = :currencyQuoteID
  2015-06-09 20:24:42,805 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'CurrencyQuote'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'currencyQuoteID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'currencyQuoteID'

  2015-06-09 20:24:42,805 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,805 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,806 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.CurrencyQuote (c) -> currencyqu0_
  2015-06-09 20:24:42,811 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currencyqu0_.currencyQuoteID
  2015-06-09 20:24:42,812 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currencyqu0_.currencyQuoteID
  2015-06-09 20:24:42,813 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : currencyQuoteID -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:42,813 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.currencyQuoteID -> currencyqu0_.currencyQuoteID
  2015-06-09 20:24:42,832 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,832 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} currencyqu0_.currencyQuoteID ) ( FromClause{level=1} CurrencyQuote currencyqu0_ ) ( WHERE ( = ( currencyqu0_.currencyQuoteID currencyqu0_.currencyQuoteID currencyQuoteID ) ? ) ) )
  2015-06-09 20:24:42,832 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [CurrencyQuote currencyqu0_]
  2015-06-09 20:24:42,833 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,833 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CurrencyQuote)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currencyqu0_.currencyQuoteID as currency1_10_' {alias=c, className=com.cmm.jft.financial.CurrencyQuote, tableAlias=currencyqu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currencyqu0_.currencyID as currency4_10_, currencyqu0_.QDateTime as QDateTim2_10_, currencyqu0_.Value as Value3_10_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currencyqu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CurrencyQuote currencyqu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CurrencyQuote,tableAlias=currencyqu0_,origin=null,columns={,className=com.cmm.jft.financial.CurrencyQuote}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'currencyqu0_.currencyQuoteID' {propertyName=currencyQuoteID,dereferenceType=PRIMITIVE,getPropertyPath=currencyQuoteID,path=c.currencyQuoteID,tableAlias=currencyqu0_,className=com.cmm.jft.financial.CurrencyQuote,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'currencyqu0_.currencyQuoteID' {alias=c, className=com.cmm.jft.financial.CurrencyQuote, tableAlias=currencyqu0_}
          |  \-[IDENT] IdentNode: 'currencyQuoteID' {originalText=currencyQuoteID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=currencyQuoteID, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:42,833 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,833 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.financial.CurrencyQuote c WHERE c.currencyQuoteID = :currencyQuoteID
  2015-06-09 20:24:42,833 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select currencyqu0_.currencyQuoteID as currency1_10_, currencyqu0_.currencyID as currency4_10_, currencyqu0_.QDateTime as QDateTim2_10_, currencyqu0_.Value as Value3_10_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=?
  2015-06-09 20:24:42,833 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,833 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Orders.findByAveragePrice
  2015-06-09 20:24:42,833 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.averagePrice = :averagePrice
  2015-06-09 20:24:42,836 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'trading'
    |  |     |  \-[IDENT] Node: 'Orders'
    |  |     \-[ALIAS] Node: 'o'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'o'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'o'
          |  \-[IDENT] Node: 'averagePrice'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'averagePrice'

  2015-06-09 20:24:42,836 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,836 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,836 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.Orders (o) -> orders0_
  2015-06-09 20:24:42,836 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:24:42,836 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:24:42,836 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : averagePrice -> org.hibernate.type.BigDecimalType@3bbc39f8
  2015-06-09 20:24:42,837 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o.averagePrice -> orders0_.AveragePrice
  2015-06-09 20:24:42,837 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,837 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} orders0_.orderID ) ( FromClause{level=1} Orders orders0_ ) ( WHERE ( = ( orders0_.AveragePrice orders0_.orderID averagePrice ) ? ) ) )
  2015-06-09 20:24:42,837 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Orders orders0_]
  2015-06-09 20:24:42,837 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,838 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID as orderID1_26_' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
    |  \-[SQL_TOKEN] SqlFragment: 'orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[orders0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Orders orders0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=Orders,tableAlias=orders0_,origin=null,columns={,className=com.cmm.jft.trading.Orders}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'orders0_.AveragePrice' {propertyName=averagePrice,dereferenceType=PRIMITIVE,getPropertyPath=averagePrice,path=o.averagePrice,tableAlias=orders0_,className=com.cmm.jft.trading.Orders,classAlias=o}
          |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
          |  \-[IDENT] IdentNode: 'averagePrice' {originalText=averagePrice}
          \-[NAMED_PARAM] ParameterNode: '?' {name=averagePrice, expectedType=org.hibernate.type.BigDecimalType@3bbc39f8}

  2015-06-09 20:24:42,838 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,838 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.averagePrice = :averagePrice
  2015-06-09 20:24:42,838 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select orders0_.orderID as orderID1_26_, orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_ from Orders orders0_ where orders0_.AveragePrice=?
  2015-06-09 20:24:42,838 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,838 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Company.findByCompanyID
  2015-06-09 20:24:42,839 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c WHERE c.companyID = :companyID
  2015-06-09 20:24:42,841 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Company'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'companyID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'companyID'

  2015-06-09 20:24:42,841 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,841 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,841 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Company (c) -> company0_
  2015-06-09 20:24:42,841 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:24:42,842 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:24:42,842 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : companyID -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:42,842 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.companyID -> company0_.companyID
  2015-06-09 20:24:42,842 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,842 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} company0_.companyID ) ( FromClause{level=1} Company company0_ ) ( WHERE ( = ( company0_.companyID company0_.companyID companyID ) ? ) ) )
  2015-06-09 20:24:42,842 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Company company0_]
  2015-06-09 20:24:42,842 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,843 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Company)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'company0_.companyID as companyI1_4_' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
    |  \-[SQL_TOKEN] SqlFragment: 'company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[company0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Company company0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Company,tableAlias=company0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Company}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'company0_.companyID' {propertyName=companyID,dereferenceType=PRIMITIVE,getPropertyPath=companyID,path=c.companyID,tableAlias=company0_,className=com.cmm.jft.trading.securities.Company,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'company0_.companyID' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
          |  \-[IDENT] IdentNode: 'companyID' {originalText=companyID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=companyID, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:42,843 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,843 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c WHERE c.companyID = :companyID
  2015-06-09 20:24:42,843 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select company0_.companyID as companyI1_4_, company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_ from Company company0_ where company0_.companyID=?
  2015-06-09 20:24:42,843 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,843 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: MarketTrade.findByTDateTime
  2015-06-09 20:24:42,843 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m WHERE m.tradeDateTime = :tradeDateTime
  2015-06-09 20:24:42,860 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'marketdata'
    |  |     |  \-[IDENT] Node: 'MarketTrade'
    |  |     \-[ALIAS] Node: 'm'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'm'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'm'
          |  \-[IDENT] Node: 'tradeDateTime'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'tradeDateTime'

  2015-06-09 20:24:42,860 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,860 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,860 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.marketdata.MarketTrade (m) -> markettrad0_
  2015-06-09 20:24:42,860 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:24:42,861 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:24:42,861 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : tradeDateTime -> org.hibernate.type.TimestampType@3b938003
  2015-06-09 20:24:42,861 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m.tradeDateTime -> markettrad0_.TradeDateTime
  2015-06-09 20:24:42,863 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,863 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} markettrad0_.marketTradeID ) ( FromClause{level=1} MarketTrade markettrad0_ ) ( WHERE ( = ( markettrad0_.TradeDateTime markettrad0_.marketTradeID tradeDateTime ) ? ) ) )
  2015-06-09 20:24:42,863 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [MarketTrade markettrad0_]
  2015-06-09 20:24:42,863 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,863 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (MarketTrade)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID as marketTr1_23_' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
    |  \-[SQL_TOKEN] SqlFragment: 'markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[m], fromElementByTableAlias=[markettrad0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'MarketTrade markettrad0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=MarketTrade,tableAlias=markettrad0_,origin=null,columns={,className=com.cmm.jft.trading.marketdata.MarketTrade}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'markettrad0_.TradeDateTime' {propertyName=tradeDateTime,dereferenceType=PRIMITIVE,getPropertyPath=tradeDateTime,path=m.tradeDateTime,tableAlias=markettrad0_,className=com.cmm.jft.trading.marketdata.MarketTrade,classAlias=m}
          |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
          |  \-[IDENT] IdentNode: 'tradeDateTime' {originalText=tradeDateTime}
          \-[NAMED_PARAM] ParameterNode: '?' {name=tradeDateTime, expectedType=org.hibernate.type.TimestampType@3b938003}

  2015-06-09 20:24:42,863 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,864 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m WHERE m.tradeDateTime = :tradeDateTime
  2015-06-09 20:24:42,864 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select markettrad0_.marketTradeID as marketTr1_23_, markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_ from MarketTrade markettrad0_ where markettrad0_.TradeDateTime=?
  2015-06-09 20:24:42,864 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,864 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Company.findByPnShares
  2015-06-09 20:24:42,864 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c WHERE c.pnShares = :pnShares
  2015-06-09 20:24:42,867 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Company'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'pnShares'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pnShares'

  2015-06-09 20:24:42,867 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,868 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,868 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Company (c) -> company0_
  2015-06-09 20:24:42,868 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:24:42,868 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:24:42,869 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : pnShares -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:42,869 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.pnShares -> company0_.PnShares
  2015-06-09 20:24:42,869 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,869 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} company0_.companyID ) ( FromClause{level=1} Company company0_ ) ( WHERE ( = ( company0_.PnShares company0_.companyID pnShares ) ? ) ) )
  2015-06-09 20:24:42,869 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Company company0_]
  2015-06-09 20:24:42,869 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,869 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Company)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'company0_.companyID as companyI1_4_' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
    |  \-[SQL_TOKEN] SqlFragment: 'company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[company0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Company company0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Company,tableAlias=company0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Company}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'company0_.PnShares' {propertyName=pnShares,dereferenceType=PRIMITIVE,getPropertyPath=pnShares,path=c.pnShares,tableAlias=company0_,className=com.cmm.jft.trading.securities.Company,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'company0_.companyID' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
          |  \-[IDENT] IdentNode: 'pnShares' {originalText=pnShares}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pnShares, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:42,869 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,869 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c WHERE c.pnShares = :pnShares
  2015-06-09 20:24:42,869 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select company0_.companyID as companyI1_4_, company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_ from Company company0_ where company0_.PnShares=?
  2015-06-09 20:24:42,869 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,870 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Account.findAll
  2015-06-09 20:24:42,870 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT a FROM com.cmm.jft.financial.Account a
  2015-06-09 20:24:42,876 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'Account'
       |     \-[ALIAS] Node: 'a'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'a'

  2015-06-09 20:24:42,876 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,876 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,876 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Account (a) -> account0_
  2015-06-09 20:24:42,876 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:24:42,876 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,876 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} account0_.accountID ) ( FromClause{level=1} Account account0_ ) )
  2015-06-09 20:24:42,877 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Account account0_]
  2015-06-09 20:24:42,877 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,877 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountID as accountI1_0_' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.cmm.jft.financial.Account}}

  2015-06-09 20:24:42,877 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,877 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT a FROM com.cmm.jft.financial.Account a
  2015-06-09 20:24:42,877 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select account0_.accountID as accountI1_0_, account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_ from Account account0_
  2015-06-09 20:24:42,877 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,877 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: EntryRegister.findByDescription
  2015-06-09 20:24:42,878 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.description = :description
  2015-06-09 20:24:42,881 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'EntryRegister'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'description'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'description'

  2015-06-09 20:24:42,881 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,881 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,881 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.EntryRegister (e) -> entryregis0_
  2015-06-09 20:24:42,882 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:24:42,882 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:24:42,882 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : description -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:42,882 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.description -> entryregis0_.Description
  2015-06-09 20:24:42,882 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,882 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} entryregis0_.entryRegisterID ) ( FromClause{level=1} EntryRegister entryregis0_ ) ( WHERE ( = ( entryregis0_.Description entryregis0_.entryRegisterID description ) ? ) ) )
  2015-06-09 20:24:42,882 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [EntryRegister entryregis0_]
  2015-06-09 20:24:42,882 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,882 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EntryRegister)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID as entryReg1_14_' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
    |  \-[SQL_TOKEN] SqlFragment: 'entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[entryregis0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EntryRegister entryregis0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=EntryRegister,tableAlias=entryregis0_,origin=null,columns={,className=com.cmm.jft.financial.EntryRegister}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'entryregis0_.Description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=e.description,tableAlias=entryregis0_,className=com.cmm.jft.financial.EntryRegister,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[NAMED_PARAM] ParameterNode: '?' {name=description, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:42,883 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,883 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.description = :description
  2015-06-09 20:24:42,883 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select entryregis0_.entryRegisterID as entryReg1_14_, entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_ from EntryRegister entryregis0_ where entryregis0_.Description=?
  2015-06-09 20:24:42,883 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,883 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Sector.findAll
  2015-06-09 20:24:42,883 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Sector s
  2015-06-09 20:24:42,887 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Sector'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 's'

  2015-06-09 20:24:42,887 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,887 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,887 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Sector (s) -> sector0_
  2015-06-09 20:24:42,887 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> sector0_.sectorID
  2015-06-09 20:24:42,887 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,887 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} sector0_.sectorID ) ( FromClause{level=1} Sector sector0_ ) )
  2015-06-09 20:24:42,887 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Sector sector0_]
  2015-06-09 20:24:42,887 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,888 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Sector)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'sector0_.sectorID as sectorID1_29_' {alias=s, className=com.cmm.jft.trading.securities.Sector, tableAlias=sector0_}
    |  \-[SQL_TOKEN] SqlFragment: 'sector0_.SectorName as SectorNa2_29_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[sector0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Sector sector0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Sector,tableAlias=sector0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Sector}}

  2015-06-09 20:24:42,888 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,888 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Sector s
  2015-06-09 20:24:42,888 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select sector0_.sectorID as sectorID1_29_, sector0_.SectorName as SectorNa2_29_ from Sector sector0_
  2015-06-09 20:24:42,888 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,888 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: JournalEntry.findAll
  2015-06-09 20:24:42,888 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e
  2015-06-09 20:24:42,890 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'JournalEntry'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'e'

  2015-06-09 20:24:42,890 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,890 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,890 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.JournalEntry (e) -> journalent0_
  2015-06-09 20:24:42,890 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:24:42,890 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,890 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} journalent0_.entryID ) ( FromClause{level=1} JournalEntry journalent0_ ) )
  2015-06-09 20:24:42,890 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [JournalEntry journalent0_]
  2015-06-09 20:24:42,890 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,891 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JournalEntry)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID as entryID1_20_' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
    |  \-[SQL_TOKEN] SqlFragment: 'journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[journalent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'JournalEntry journalent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JournalEntry,tableAlias=journalent0_,origin=null,columns={,className=com.cmm.jft.financial.JournalEntry}}

  2015-06-09 20:24:42,891 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,891 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e
  2015-06-09 20:24:42,891 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select journalent0_.entryID as entryID1_20_, journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_ from JournalEntry journalent0_
  2015-06-09 20:24:42,891 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,891 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: JournalEntry.findByDescription
  2015-06-09 20:24:42,891 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.description = :description
  2015-06-09 20:24:42,896 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'JournalEntry'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'description'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'description'

  2015-06-09 20:24:42,896 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,896 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,897 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.JournalEntry (e) -> journalent0_
  2015-06-09 20:24:42,897 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:24:42,897 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:24:42,897 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : description -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:42,897 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.description -> journalent0_.Description
  2015-06-09 20:24:42,897 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,897 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} journalent0_.entryID ) ( FromClause{level=1} JournalEntry journalent0_ ) ( WHERE ( = ( journalent0_.Description journalent0_.entryID description ) ? ) ) )
  2015-06-09 20:24:42,898 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [JournalEntry journalent0_]
  2015-06-09 20:24:42,898 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,898 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JournalEntry)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID as entryID1_20_' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
    |  \-[SQL_TOKEN] SqlFragment: 'journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[journalent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JournalEntry journalent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JournalEntry,tableAlias=journalent0_,origin=null,columns={,className=com.cmm.jft.financial.JournalEntry}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'journalent0_.Description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=e.description,tableAlias=journalent0_,className=com.cmm.jft.financial.JournalEntry,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[NAMED_PARAM] ParameterNode: '?' {name=description, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:42,898 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,898 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.description = :description
  2015-06-09 20:24:42,898 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select journalent0_.entryID as entryID1_20_, journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_ from JournalEntry journalent0_ where journalent0_.Description=?
  2015-06-09 20:24:42,898 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,898 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: MarketTrade.findAll
  2015-06-09 20:24:42,898 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m
  2015-06-09 20:24:42,900 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'marketdata'
       |     |  \-[IDENT] Node: 'MarketTrade'
       |     \-[ALIAS] Node: 'm'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'm'

  2015-06-09 20:24:42,900 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,900 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,900 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.marketdata.MarketTrade (m) -> markettrad0_
  2015-06-09 20:24:42,900 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:24:42,900 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,900 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} markettrad0_.marketTradeID ) ( FromClause{level=1} MarketTrade markettrad0_ ) )
  2015-06-09 20:24:42,901 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [MarketTrade markettrad0_]
  2015-06-09 20:24:42,901 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,902 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (MarketTrade)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID as marketTr1_23_' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
    |  \-[SQL_TOKEN] SqlFragment: 'markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[m], fromElementByTableAlias=[markettrad0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'MarketTrade markettrad0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=MarketTrade,tableAlias=markettrad0_,origin=null,columns={,className=com.cmm.jft.trading.marketdata.MarketTrade}}

  2015-06-09 20:24:42,902 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,902 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m
  2015-06-09 20:24:42,902 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select markettrad0_.marketTradeID as marketTr1_23_, markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_ from MarketTrade markettrad0_
  2015-06-09 20:24:42,902 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,903 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Sector.findBySectorID
  2015-06-09 20:24:42,903 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Sector s WHERE s.sectorID = :sectorID
  2015-06-09 20:24:42,906 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Sector'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'sectorID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'sectorID'

  2015-06-09 20:24:42,906 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,906 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,906 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Sector (s) -> sector0_
  2015-06-09 20:24:42,906 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> sector0_.sectorID
  2015-06-09 20:24:42,906 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> sector0_.sectorID
  2015-06-09 20:24:42,906 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : sectorID -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:42,906 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s.sectorID -> sector0_.sectorID
  2015-06-09 20:24:42,906 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,906 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} sector0_.sectorID ) ( FromClause{level=1} Sector sector0_ ) ( WHERE ( = ( sector0_.sectorID sector0_.sectorID sectorID ) ? ) ) )
  2015-06-09 20:24:42,907 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Sector sector0_]
  2015-06-09 20:24:42,907 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,907 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Sector)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'sector0_.sectorID as sectorID1_29_' {alias=s, className=com.cmm.jft.trading.securities.Sector, tableAlias=sector0_}
    |  \-[SQL_TOKEN] SqlFragment: 'sector0_.SectorName as SectorNa2_29_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[sector0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Sector sector0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Sector,tableAlias=sector0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Sector}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'sector0_.sectorID' {propertyName=sectorID,dereferenceType=PRIMITIVE,getPropertyPath=sectorID,path=s.sectorID,tableAlias=sector0_,className=com.cmm.jft.trading.securities.Sector,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'sector0_.sectorID' {alias=s, className=com.cmm.jft.trading.securities.Sector, tableAlias=sector0_}
          |  \-[IDENT] IdentNode: 'sectorID' {originalText=sectorID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=sectorID, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:42,907 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,907 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Sector s WHERE s.sectorID = :sectorID
  2015-06-09 20:24:42,907 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select sector0_.sectorID as sectorID1_29_, sector0_.SectorName as SectorNa2_29_ from Sector sector0_ where sector0_.sectorID=?
  2015-06-09 20:24:42,907 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,907 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Company.findByOnShares
  2015-06-09 20:24:42,908 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c WHERE c.onShares = :onShares
  2015-06-09 20:24:42,915 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Company'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'onShares'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'onShares'

  2015-06-09 20:24:42,916 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,916 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,916 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Company (c) -> company0_
  2015-06-09 20:24:42,916 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:24:42,916 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:24:42,916 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : onShares -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:42,916 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.onShares -> company0_.OnShares
  2015-06-09 20:24:42,916 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,916 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} company0_.companyID ) ( FromClause{level=1} Company company0_ ) ( WHERE ( = ( company0_.OnShares company0_.companyID onShares ) ? ) ) )
  2015-06-09 20:24:42,916 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Company company0_]
  2015-06-09 20:24:42,916 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,917 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Company)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'company0_.companyID as companyI1_4_' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
    |  \-[SQL_TOKEN] SqlFragment: 'company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[company0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Company company0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Company,tableAlias=company0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Company}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'company0_.OnShares' {propertyName=onShares,dereferenceType=PRIMITIVE,getPropertyPath=onShares,path=c.onShares,tableAlias=company0_,className=com.cmm.jft.trading.securities.Company,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'company0_.companyID' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
          |  \-[IDENT] IdentNode: 'onShares' {originalText=onShares}
          \-[NAMED_PARAM] ParameterNode: '?' {name=onShares, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:42,917 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,917 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c WHERE c.onShares = :onShares
  2015-06-09 20:24:42,917 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select company0_.companyID as companyI1_4_, company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_ from Company company0_ where company0_.OnShares=?
  2015-06-09 20:24:42,917 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,917 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Account.findByOpen
  2015-06-09 20:24:42,917 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.open = :open
  2015-06-09 20:24:42,921 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'open'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'open'

  2015-06-09 20:24:42,921 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,922 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,922 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Account (a) -> account0_
  2015-06-09 20:24:42,922 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:24:42,922 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:24:42,922 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : open -> org.hibernate.type.BooleanType@646be2c3
  2015-06-09 20:24:42,922 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a.open -> account0_.Open
  2015-06-09 20:24:42,922 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,922 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} account0_.accountID ) ( FromClause{level=1} Account account0_ ) ( WHERE ( = ( account0_.Open account0_.accountID open ) ? ) ) )
  2015-06-09 20:24:42,922 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Account account0_]
  2015-06-09 20:24:42,923 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,923 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountID as accountI1_0_' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.cmm.jft.financial.Account}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.Open' {propertyName=open,dereferenceType=PRIMITIVE,getPropertyPath=open,path=a.open,tableAlias=account0_,className=com.cmm.jft.financial.Account,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'account0_.accountID' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'open' {originalText=open}
          \-[NAMED_PARAM] ParameterNode: '?' {name=open, expectedType=org.hibernate.type.BooleanType@646be2c3}

  2015-06-09 20:24:42,923 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,924 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.open = :open
  2015-06-09 20:24:42,924 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select account0_.accountID as accountI1_0_, account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_ from Account account0_ where account0_.Open=?
  2015-06-09 20:24:42,924 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,925 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Orders.findByOrderID
  2015-06-09 20:24:42,925 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.orderID = :orderID
  2015-06-09 20:24:42,929 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'trading'
    |  |     |  \-[IDENT] Node: 'Orders'
    |  |     \-[ALIAS] Node: 'o'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'o'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'o'
          |  \-[IDENT] Node: 'orderID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'orderID'

  2015-06-09 20:24:42,929 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,930 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,932 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.Orders (o) -> orders0_
  2015-06-09 20:24:42,932 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:24:42,932 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:24:42,932 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : orderID -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:42,932 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o.orderID -> orders0_.orderID
  2015-06-09 20:24:42,932 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,936 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} orders0_.orderID ) ( FromClause{level=1} Orders orders0_ ) ( WHERE ( = ( orders0_.orderID orders0_.orderID orderID ) ? ) ) )
  2015-06-09 20:24:42,938 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Orders orders0_]
  2015-06-09 20:24:42,938 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,938 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID as orderID1_26_' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
    |  \-[SQL_TOKEN] SqlFragment: 'orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[orders0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Orders orders0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=Orders,tableAlias=orders0_,origin=null,columns={,className=com.cmm.jft.trading.Orders}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'orders0_.orderID' {propertyName=orderID,dereferenceType=PRIMITIVE,getPropertyPath=orderID,path=o.orderID,tableAlias=orders0_,className=com.cmm.jft.trading.Orders,classAlias=o}
          |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
          |  \-[IDENT] IdentNode: 'orderID' {originalText=orderID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=orderID, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:42,938 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,938 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.orderID = :orderID
  2015-06-09 20:24:42,938 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select orders0_.orderID as orderID1_26_, orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_ from Orders orders0_ where orders0_.orderID=?
  2015-06-09 20:24:42,938 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,938 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: EntryRegister.findByCredit
  2015-06-09 20:24:42,939 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.credit = :credit
  2015-06-09 20:24:42,941 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'EntryRegister'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'credit'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'credit'

  2015-06-09 20:24:42,941 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,941 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,941 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.EntryRegister (e) -> entryregis0_
  2015-06-09 20:24:42,942 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:24:42,942 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:24:42,942 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : credit -> org.hibernate.type.BigDecimalType@3bbc39f8
  2015-06-09 20:24:42,942 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.credit -> entryregis0_.Credit
  2015-06-09 20:24:42,942 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,942 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} entryregis0_.entryRegisterID ) ( FromClause{level=1} EntryRegister entryregis0_ ) ( WHERE ( = ( entryregis0_.Credit entryregis0_.entryRegisterID credit ) ? ) ) )
  2015-06-09 20:24:42,942 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [EntryRegister entryregis0_]
  2015-06-09 20:24:42,942 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,942 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EntryRegister)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID as entryReg1_14_' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
    |  \-[SQL_TOKEN] SqlFragment: 'entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[entryregis0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EntryRegister entryregis0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=EntryRegister,tableAlias=entryregis0_,origin=null,columns={,className=com.cmm.jft.financial.EntryRegister}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'entryregis0_.Credit' {propertyName=credit,dereferenceType=PRIMITIVE,getPropertyPath=credit,path=e.credit,tableAlias=entryregis0_,className=com.cmm.jft.financial.EntryRegister,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
          |  \-[IDENT] IdentNode: 'credit' {originalText=credit}
          \-[NAMED_PARAM] ParameterNode: '?' {name=credit, expectedType=org.hibernate.type.BigDecimalType@3bbc39f8}

  2015-06-09 20:24:42,942 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,945 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.credit = :credit
  2015-06-09 20:24:42,945 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select entryregis0_.entryRegisterID as entryReg1_14_, entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_ from EntryRegister entryregis0_ where entryregis0_.Credit=?
  2015-06-09 20:24:42,945 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,945 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Deposit.findAll
  2015-06-09 20:24:42,945 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.Deposit d
  2015-06-09 20:24:42,947 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'Deposit'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'd'

  2015-06-09 20:24:42,947 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,947 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,948 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Deposit (d) -> deposit0_
  2015-06-09 20:24:42,948 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:24:42,948 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,948 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} deposit0_.depositID ) ( FromClause{level=1} Deposit deposit0_ ) )
  2015-06-09 20:24:42,949 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Deposit deposit0_]
  2015-06-09 20:24:42,949 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,949 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Deposit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID as depositI1_11_' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[deposit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Deposit deposit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=Deposit,tableAlias=deposit0_,origin=null,columns={,className=com.cmm.jft.financial.Deposit}}

  2015-06-09 20:24:42,949 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,950 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.Deposit d
  2015-06-09 20:24:42,950 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select deposit0_.depositID as depositI1_11_, deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_ from Deposit deposit0_
  2015-06-09 20:24:42,950 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,950 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: JournalEntry.findByEntryID
  2015-06-09 20:24:42,950 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.entryID = :entryID
  2015-06-09 20:24:42,953 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'JournalEntry'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'entryID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'entryID'

  2015-06-09 20:24:42,953 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,953 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,953 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.JournalEntry (e) -> journalent0_
  2015-06-09 20:24:42,954 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:24:42,954 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:24:42,954 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : entryID -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:42,955 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.entryID -> journalent0_.entryID
  2015-06-09 20:24:42,955 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,955 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} journalent0_.entryID ) ( FromClause{level=1} JournalEntry journalent0_ ) ( WHERE ( = ( journalent0_.entryID journalent0_.entryID entryID ) ? ) ) )
  2015-06-09 20:24:42,955 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [JournalEntry journalent0_]
  2015-06-09 20:24:42,955 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,955 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JournalEntry)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID as entryID1_20_' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
    |  \-[SQL_TOKEN] SqlFragment: 'journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[journalent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JournalEntry journalent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JournalEntry,tableAlias=journalent0_,origin=null,columns={,className=com.cmm.jft.financial.JournalEntry}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'journalent0_.entryID' {propertyName=entryID,dereferenceType=PRIMITIVE,getPropertyPath=entryID,path=e.entryID,tableAlias=journalent0_,className=com.cmm.jft.financial.JournalEntry,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
          |  \-[IDENT] IdentNode: 'entryID' {originalText=entryID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=entryID, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:42,955 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,955 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.entryID = :entryID
  2015-06-09 20:24:42,955 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select journalent0_.entryID as entryID1_20_, journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_ from JournalEntry journalent0_ where journalent0_.entryID=?
  2015-06-09 20:24:42,955 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,956 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Orders.findByExecutedVolume
  2015-06-09 20:24:42,956 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.executedVolume = :executedVolume
  2015-06-09 20:24:42,959 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'trading'
    |  |     |  \-[IDENT] Node: 'Orders'
    |  |     \-[ALIAS] Node: 'o'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'o'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'o'
          |  \-[IDENT] Node: 'executedVolume'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'executedVolume'

  2015-06-09 20:24:42,959 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,959 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,959 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.Orders (o) -> orders0_
  2015-06-09 20:24:42,959 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:24:42,959 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:24:42,959 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : executedVolume -> org.hibernate.type.IntegerType@564718df
  2015-06-09 20:24:42,959 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o.executedVolume -> orders0_.ExecutedVolume
  2015-06-09 20:24:42,959 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,959 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} orders0_.orderID ) ( FromClause{level=1} Orders orders0_ ) ( WHERE ( = ( orders0_.ExecutedVolume orders0_.orderID executedVolume ) ? ) ) )
  2015-06-09 20:24:42,960 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Orders orders0_]
  2015-06-09 20:24:42,960 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,960 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID as orderID1_26_' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
    |  \-[SQL_TOKEN] SqlFragment: 'orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[orders0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Orders orders0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=Orders,tableAlias=orders0_,origin=null,columns={,className=com.cmm.jft.trading.Orders}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'orders0_.ExecutedVolume' {propertyName=executedVolume,dereferenceType=PRIMITIVE,getPropertyPath=executedVolume,path=o.executedVolume,tableAlias=orders0_,className=com.cmm.jft.trading.Orders,classAlias=o}
          |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
          |  \-[IDENT] IdentNode: 'executedVolume' {originalText=executedVolume}
          \-[NAMED_PARAM] ParameterNode: '?' {name=executedVolume, expectedType=org.hibernate.type.IntegerType@564718df}

  2015-06-09 20:24:42,960 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,961 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.executedVolume = :executedVolume
  2015-06-09 20:24:42,962 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select orders0_.orderID as orderID1_26_, orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_ from Orders orders0_ where orders0_.ExecutedVolume=?
  2015-06-09 20:24:42,962 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,962 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Country.findAll
  2015-06-09 20:24:42,962 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: select c from com.cmm.jft.trading.securities.Country c
  2015-06-09 20:24:42,964 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Country'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'c'

  2015-06-09 20:24:42,964 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,964 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,964 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Country (c) -> country0_
  2015-06-09 20:24:42,964 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> country0_.countryID
  2015-06-09 20:24:42,964 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,964 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} country0_.countryID ) ( FromClause{level=1} Country country0_ ) )
  2015-06-09 20:24:42,965 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Country country0_]
  2015-06-09 20:24:42,965 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,965 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Country)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'country0_.countryID as countryI1_8_' {alias=c, className=com.cmm.jft.trading.securities.Country, tableAlias=country0_}
    |  \-[SQL_TOKEN] SqlFragment: 'country0_.Area as Area2_8_, country0_.Continent as Continen3_8_, country0_.CountryName as CountryN4_8_, country0_.Population as Populati5_8_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[country0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Country country0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Country,tableAlias=country0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Country}}

  2015-06-09 20:24:42,965 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,965 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: select c from com.cmm.jft.trading.securities.Country c
  2015-06-09 20:24:42,965 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select country0_.countryID as countryI1_8_, country0_.Area as Area2_8_, country0_.Continent as Continen3_8_, country0_.CountryName as CountryN4_8_, country0_.Population as Populati5_8_ from Country country0_
  2015-06-09 20:24:42,965 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,965 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Index.findByIndexID
  2015-06-09 20:24:42,966 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT i FROM com.cmm.jft.trading.securities.Index i WHERE i.indexID = :indexID
  2015-06-09 20:24:42,968 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Index'
    |  |     \-[ALIAS] Node: 'i'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'i'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'i'
          |  \-[IDENT] Node: 'indexID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'indexID'

  2015-06-09 20:24:42,968 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,968 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,969 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Index (i) -> index0_
  2015-06-09 20:24:42,969 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> index0_.indexID
  2015-06-09 20:24:42,969 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> index0_.indexID
  2015-06-09 20:24:42,969 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : indexID -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:42,969 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i.indexID -> index0_.indexID
  2015-06-09 20:24:42,969 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,969 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} index0_.indexID ) ( FromClause{level=1} Index index0_ ) ( WHERE ( = ( index0_.indexID index0_.indexID indexID ) ? ) ) )
  2015-06-09 20:24:42,969 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Index index0_]
  2015-06-09 20:24:42,969 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,969 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Index)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'index0_.indexID as indexID1_17_' {alias=i, className=com.cmm.jft.trading.securities.Index, tableAlias=index0_}
    |  \-[SQL_TOKEN] SqlFragment: 'index0_.Index as Index2_17_, index0_.IndexName as IndexNam3_17_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[i], fromElementByTableAlias=[index0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Index index0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=Index,tableAlias=index0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Index}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'index0_.indexID' {propertyName=indexID,dereferenceType=PRIMITIVE,getPropertyPath=indexID,path=i.indexID,tableAlias=index0_,className=com.cmm.jft.trading.securities.Index,classAlias=i}
          |  +-[ALIAS_REF] IdentNode: 'index0_.indexID' {alias=i, className=com.cmm.jft.trading.securities.Index, tableAlias=index0_}
          |  \-[IDENT] IdentNode: 'indexID' {originalText=indexID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=indexID, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:42,969 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,969 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT i FROM com.cmm.jft.trading.securities.Index i WHERE i.indexID = :indexID
  2015-06-09 20:24:42,969 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select index0_.indexID as indexID1_17_, index0_.Index as Index2_17_, index0_.IndexName as IndexNam3_17_ from Index index0_ where index0_.indexID=?
  2015-06-09 20:24:42,969 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,970 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Segment.findAll
  2015-06-09 20:24:42,970 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Segment s
  2015-06-09 20:24:42,972 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Segment'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 's'

  2015-06-09 20:24:42,972 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,972 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,972 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Segment (s) -> segment0_
  2015-06-09 20:24:42,972 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> segment0_.segmentID
  2015-06-09 20:24:42,972 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,972 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} segment0_.segmentID ) ( FromClause{level=1} Segment segment0_ ) )
  2015-06-09 20:24:42,972 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Segment segment0_]
  2015-06-09 20:24:42,973 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,973 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Segment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'segment0_.segmentID as segmentI1_32_' {alias=s, className=com.cmm.jft.trading.securities.Segment, tableAlias=segment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'segment0_.SegmentName as SegmentN2_32_, segment0_.subsectorID as subsecto3_32_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[segment0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Segment segment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Segment,tableAlias=segment0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Segment}}

  2015-06-09 20:24:42,973 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,973 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Segment s
  2015-06-09 20:24:42,973 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select segment0_.segmentID as segmentI1_32_, segment0_.SegmentName as SegmentN2_32_, segment0_.subsectorID as subsecto3_32_ from Segment segment0_
  2015-06-09 20:24:42,973 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,973 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: TaxSetup.findAll
  2015-06-09 20:24:42,973 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t
  2015-06-09 20:24:42,975 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'TaxSetup'
       |     \-[ALIAS] Node: 't'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 't'

  2015-06-09 20:24:42,975 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,975 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,975 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.TaxSetup (t) -> taxsetup0_
  2015-06-09 20:24:42,975 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:24:42,975 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,975 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} taxsetup0_.taxSetupID ) ( FromClause{level=1} TaxSetup taxsetup0_ ) )
  2015-06-09 20:24:42,976 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [TaxSetup taxsetup0_]
  2015-06-09 20:24:42,976 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,976 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TaxSetup)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID as taxSetup1_36_' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
    |  \-[SQL_TOKEN] SqlFragment: 'taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[taxsetup0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TaxSetup taxsetup0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=TaxSetup,tableAlias=taxsetup0_,origin=null,columns={,className=com.cmm.jft.financial.TaxSetup}}

  2015-06-09 20:24:42,976 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,976 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t
  2015-06-09 20:24:42,976 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select taxsetup0_.taxSetupID as taxSetup1_36_, taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_ from TaxSetup taxsetup0_
  2015-06-09 20:24:42,976 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,976 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Subsector.findBySubsectorName
  2015-06-09 20:24:42,976 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Subsector s WHERE s.subsectorName = :subsectorName
  2015-06-09 20:24:42,987 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Subsector'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'subsectorName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'subsectorName'

  2015-06-09 20:24:42,987 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,987 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,987 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Subsector (s) -> subsector0_
  2015-06-09 20:24:42,987 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> subsector0_.subsectorID
  2015-06-09 20:24:42,988 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> subsector0_.subsectorID
  2015-06-09 20:24:42,988 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : subsectorName -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:42,988 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s.subsectorName -> subsector0_.SubsectorName
  2015-06-09 20:24:42,988 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,988 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} subsector0_.subsectorID ) ( FromClause{level=1} Subsector subsector0_ ) ( WHERE ( = ( subsector0_.SubsectorName subsector0_.subsectorID subsectorName ) ? ) ) )
  2015-06-09 20:24:42,988 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Subsector subsector0_]
  2015-06-09 20:24:42,988 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,988 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Subsector)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'subsector0_.subsectorID as subsecto1_34_' {alias=s, className=com.cmm.jft.trading.securities.Subsector, tableAlias=subsector0_}
    |  \-[SQL_TOKEN] SqlFragment: 'subsector0_.sectorID as sectorID3_34_, subsector0_.SubsectorName as Subsecto2_34_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[subsector0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Subsector subsector0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Subsector,tableAlias=subsector0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Subsector}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'subsector0_.SubsectorName' {propertyName=subsectorName,dereferenceType=PRIMITIVE,getPropertyPath=subsectorName,path=s.subsectorName,tableAlias=subsector0_,className=com.cmm.jft.trading.securities.Subsector,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'subsector0_.subsectorID' {alias=s, className=com.cmm.jft.trading.securities.Subsector, tableAlias=subsector0_}
          |  \-[IDENT] IdentNode: 'subsectorName' {originalText=subsectorName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=subsectorName, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:42,988 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,988 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Subsector s WHERE s.subsectorName = :subsectorName
  2015-06-09 20:24:42,988 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select subsector0_.subsectorID as subsecto1_34_, subsector0_.sectorID as sectorID3_34_, subsector0_.SubsectorName as Subsecto2_34_ from Subsector subsector0_ where subsector0_.SubsectorName=?
  2015-06-09 20:24:42,988 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,988 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: DistributionRule.findByDistributionRuleID
  2015-06-09 20:24:42,989 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.DistributionRule d WHERE d.distributionRuleID = :distributionRuleID
  2015-06-09 20:24:42,992 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'DistributionRule'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'distributionRuleID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'distributionRuleID'

  2015-06-09 20:24:42,992 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,992 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:42,992 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.DistributionRule (d) -> distributi0_
  2015-06-09 20:24:42,992 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> distributi0_.distributionRuleID
  2015-06-09 20:24:42,992 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> distributi0_.distributionRuleID
  2015-06-09 20:24:42,992 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : distributionRuleID -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:42,992 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d.distributionRuleID -> distributi0_.distributionRuleID
  2015-06-09 20:24:42,992 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:42,996 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} distributi0_.distributionRuleID ) ( FromClause{level=1} DistributionRule distributi0_ ) ( WHERE ( = ( distributi0_.distributionRuleID distributi0_.distributionRuleID distributionRuleID ) ? ) ) )
  2015-06-09 20:24:42,996 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [DistributionRule distributi0_]
  2015-06-09 20:24:42,996 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:42,996 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (DistributionRule)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'distributi0_.distributionRuleID as distribu1_12_' {alias=d, className=com.cmm.jft.financial.DistributionRule, tableAlias=distributi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'distributi0_.ObjectRule as ObjectRu2_12_, distributi0_.RuleName as RuleName3_12_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[distributi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'DistributionRule distributi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=DistributionRule,tableAlias=distributi0_,origin=null,columns={,className=com.cmm.jft.financial.DistributionRule}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'distributi0_.distributionRuleID' {propertyName=distributionRuleID,dereferenceType=PRIMITIVE,getPropertyPath=distributionRuleID,path=d.distributionRuleID,tableAlias=distributi0_,className=com.cmm.jft.financial.DistributionRule,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'distributi0_.distributionRuleID' {alias=d, className=com.cmm.jft.financial.DistributionRule, tableAlias=distributi0_}
          |  \-[IDENT] IdentNode: 'distributionRuleID' {originalText=distributionRuleID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=distributionRuleID, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:42,996 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,996 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.DistributionRule d WHERE d.distributionRuleID = :distributionRuleID
  2015-06-09 20:24:42,998 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select distributi0_.distributionRuleID as distribu1_12_, distributi0_.ObjectRule as ObjectRu2_12_, distributi0_.RuleName as RuleName3_12_ from DistributionRule distributi0_ where distributi0_.distributionRuleID=?
  2015-06-09 20:24:42,998 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:42,998 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Currency.findAll
  2015-06-09 20:24:42,999 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.financial.Currency c
  2015-06-09 20:24:43,001 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'Currency'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

  2015-06-09 20:24:43,001 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,001 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,001 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Currency (c) -> currency0_
  2015-06-09 20:24:43,002 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currency0_.currencyID
  2015-06-09 20:24:43,002 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,002 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} currency0_.currencyID ) ( FromClause{level=1} Currency currency0_ ) )
  2015-06-09 20:24:43,002 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Currency currency0_]
  2015-06-09 20:24:43,002 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,002 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Currency)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currency0_.currencyID as currency1_9_' {alias=c, className=com.cmm.jft.financial.Currency, tableAlias=currency0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currency0_.CurrSymbol as CurrSymb2_9_, currency0_.Description as Descript3_9_, currency0_.FractionalUnit as Fraction4_9_, currency0_.Sign as Sign5_9_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currency0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Currency currency0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Currency,tableAlias=currency0_,origin=null,columns={,className=com.cmm.jft.financial.Currency}}

  2015-06-09 20:24:43,002 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,002 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.financial.Currency c
  2015-06-09 20:24:43,002 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select currency0_.currencyID as currency1_9_, currency0_.CurrSymbol as CurrSymb2_9_, currency0_.Description as Descript3_9_, currency0_.FractionalUnit as Fraction4_9_, currency0_.Sign as Sign5_9_ from Currency currency0_
  2015-06-09 20:24:43,002 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,002 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Segment.findBySegmentID
  2015-06-09 20:24:43,003 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Segment s WHERE s.segmentID = :segmentID
  2015-06-09 20:24:43,007 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Segment'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'segmentID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'segmentID'

  2015-06-09 20:24:43,007 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,007 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,007 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Segment (s) -> segment0_
  2015-06-09 20:24:43,007 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> segment0_.segmentID
  2015-06-09 20:24:43,007 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> segment0_.segmentID
  2015-06-09 20:24:43,007 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : segmentID -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:43,008 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s.segmentID -> segment0_.segmentID
  2015-06-09 20:24:43,008 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,008 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} segment0_.segmentID ) ( FromClause{level=1} Segment segment0_ ) ( WHERE ( = ( segment0_.segmentID segment0_.segmentID segmentID ) ? ) ) )
  2015-06-09 20:24:43,008 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Segment segment0_]
  2015-06-09 20:24:43,008 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,008 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Segment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'segment0_.segmentID as segmentI1_32_' {alias=s, className=com.cmm.jft.trading.securities.Segment, tableAlias=segment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'segment0_.SegmentName as SegmentN2_32_, segment0_.subsectorID as subsecto3_32_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[segment0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Segment segment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Segment,tableAlias=segment0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Segment}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'segment0_.segmentID' {propertyName=segmentID,dereferenceType=PRIMITIVE,getPropertyPath=segmentID,path=s.segmentID,tableAlias=segment0_,className=com.cmm.jft.trading.securities.Segment,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'segment0_.segmentID' {alias=s, className=com.cmm.jft.trading.securities.Segment, tableAlias=segment0_}
          |  \-[IDENT] IdentNode: 'segmentID' {originalText=segmentID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=segmentID, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:43,008 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,008 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Segment s WHERE s.segmentID = :segmentID
  2015-06-09 20:24:43,008 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select segment0_.segmentID as segmentI1_32_, segment0_.SegmentName as SegmentN2_32_, segment0_.subsectorID as subsecto3_32_ from Segment segment0_ where segment0_.segmentID=?
  2015-06-09 20:24:43,008 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,009 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: TaxSetup.findByAliquota
  2015-06-09 20:24:43,009 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t WHERE t.aliquota = :aliquota
  2015-06-09 20:24:43,012 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'TaxSetup'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'aliquota'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'aliquota'

  2015-06-09 20:24:43,012 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,012 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,013 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.TaxSetup (t) -> taxsetup0_
  2015-06-09 20:24:43,013 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:24:43,013 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:24:43,013 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : aliquota -> org.hibernate.type.FloatType@145eaa29
  2015-06-09 20:24:43,013 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t.aliquota -> taxsetup0_.Aliquota
  2015-06-09 20:24:43,013 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,013 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} taxsetup0_.taxSetupID ) ( FromClause{level=1} TaxSetup taxsetup0_ ) ( WHERE ( = ( taxsetup0_.Aliquota taxsetup0_.taxSetupID aliquota ) ? ) ) )
  2015-06-09 20:24:43,013 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [TaxSetup taxsetup0_]
  2015-06-09 20:24:43,013 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,014 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TaxSetup)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID as taxSetup1_36_' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
    |  \-[SQL_TOKEN] SqlFragment: 'taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[taxsetup0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'TaxSetup taxsetup0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=TaxSetup,tableAlias=taxsetup0_,origin=null,columns={,className=com.cmm.jft.financial.TaxSetup}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'taxsetup0_.Aliquota' {propertyName=aliquota,dereferenceType=PRIMITIVE,getPropertyPath=aliquota,path=t.aliquota,tableAlias=taxsetup0_,className=com.cmm.jft.financial.TaxSetup,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
          |  \-[IDENT] IdentNode: 'aliquota' {originalText=aliquota}
          \-[NAMED_PARAM] ParameterNode: '?' {name=aliquota, expectedType=org.hibernate.type.FloatType@145eaa29}

  2015-06-09 20:24:43,014 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,014 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t WHERE t.aliquota = :aliquota
  2015-06-09 20:24:43,014 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select taxsetup0_.taxSetupID as taxSetup1_36_, taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_ from TaxSetup taxsetup0_ where taxsetup0_.Aliquota=?
  2015-06-09 20:24:43,014 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,015 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Isin.findAll
  2015-06-09 20:24:43,017 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT i FROM com.cmm.jft.trading.securities.Isin i
  2015-06-09 20:24:43,018 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Isin'
       |     \-[ALIAS] Node: 'i'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'i'

  2015-06-09 20:24:43,018 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,019 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,019 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Isin (i) -> isin0_
  2015-06-09 20:24:43,019 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> isin0_.isinID
  2015-06-09 20:24:43,019 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,019 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} isin0_.isinID ) ( FromClause{level=1} Isin isin0_ ) )
  2015-06-09 20:24:43,019 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Isin isin0_]
  2015-06-09 20:24:43,019 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,019 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Isin)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'isin0_.isinID as isinID1_19_' {alias=i, className=com.cmm.jft.trading.securities.Isin, tableAlias=isin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'isin0_.Description as Descript2_19_, isin0_.ISIN as ISIN3_19_, isin0_.Status as Status4_19_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[i], fromElementByTableAlias=[isin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Isin isin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=Isin,tableAlias=isin0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Isin}}

  2015-06-09 20:24:43,019 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,019 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT i FROM com.cmm.jft.trading.securities.Isin i
  2015-06-09 20:24:43,019 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select isin0_.isinID as isinID1_19_, isin0_.Description as Descript2_19_, isin0_.ISIN as ISIN3_19_, isin0_.Status as Status4_19_ from Isin isin0_
  2015-06-09 20:24:43,019 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,019 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Sector.findBySectorName
  2015-06-09 20:24:43,020 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Sector s WHERE s.sectorName = :sectorName
  2015-06-09 20:24:43,058 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Sector'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'sectorName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'sectorName'

  2015-06-09 20:24:43,058 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,058 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,058 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Sector (s) -> sector0_
  2015-06-09 20:24:43,058 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> sector0_.sectorID
  2015-06-09 20:24:43,058 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> sector0_.sectorID
  2015-06-09 20:24:43,059 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : sectorName -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:43,059 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s.sectorName -> sector0_.SectorName
  2015-06-09 20:24:43,059 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,059 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} sector0_.sectorID ) ( FromClause{level=1} Sector sector0_ ) ( WHERE ( = ( sector0_.SectorName sector0_.sectorID sectorName ) ? ) ) )
  2015-06-09 20:24:43,059 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Sector sector0_]
  2015-06-09 20:24:43,059 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,059 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Sector)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'sector0_.sectorID as sectorID1_29_' {alias=s, className=com.cmm.jft.trading.securities.Sector, tableAlias=sector0_}
    |  \-[SQL_TOKEN] SqlFragment: 'sector0_.SectorName as SectorNa2_29_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[sector0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Sector sector0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Sector,tableAlias=sector0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Sector}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'sector0_.SectorName' {propertyName=sectorName,dereferenceType=PRIMITIVE,getPropertyPath=sectorName,path=s.sectorName,tableAlias=sector0_,className=com.cmm.jft.trading.securities.Sector,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'sector0_.sectorID' {alias=s, className=com.cmm.jft.trading.securities.Sector, tableAlias=sector0_}
          |  \-[IDENT] IdentNode: 'sectorName' {originalText=sectorName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=sectorName, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:43,059 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,059 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Sector s WHERE s.sectorName = :sectorName
  2015-06-09 20:24:43,059 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select sector0_.sectorID as sectorID1_29_, sector0_.SectorName as SectorNa2_29_ from Sector sector0_ where sector0_.SectorName=?
  2015-06-09 20:24:43,059 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,059 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Company.findByCompanyName
  2015-06-09 20:24:43,060 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c WHERE c.companyName = :companyName
  2015-06-09 20:24:43,063 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Company'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'companyName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'companyName'

  2015-06-09 20:24:43,063 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,063 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,063 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Company (c) -> company0_
  2015-06-09 20:24:43,063 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:24:43,063 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:24:43,063 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : companyName -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:43,063 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.companyName -> company0_.CompanyName
  2015-06-09 20:24:43,063 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,063 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} company0_.companyID ) ( FromClause{level=1} Company company0_ ) ( WHERE ( = ( company0_.CompanyName company0_.companyID companyName ) ? ) ) )
  2015-06-09 20:24:43,063 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Company company0_]
  2015-06-09 20:24:43,063 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,064 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Company)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'company0_.companyID as companyI1_4_' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
    |  \-[SQL_TOKEN] SqlFragment: 'company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[company0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Company company0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Company,tableAlias=company0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Company}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'company0_.CompanyName' {propertyName=companyName,dereferenceType=PRIMITIVE,getPropertyPath=companyName,path=c.companyName,tableAlias=company0_,className=com.cmm.jft.trading.securities.Company,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'company0_.companyID' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
          |  \-[IDENT] IdentNode: 'companyName' {originalText=companyName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=companyName, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:43,064 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,064 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c WHERE c.companyName = :companyName
  2015-06-09 20:24:43,064 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select company0_.companyID as companyI1_4_, company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_ from Company company0_ where company0_.CompanyName=?
  2015-06-09 20:24:43,064 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,064 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: EntryRegister.findAll
  2015-06-09 20:24:43,064 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e
  2015-06-09 20:24:43,067 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'EntryRegister'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'e'

  2015-06-09 20:24:43,067 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,067 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,068 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.EntryRegister (e) -> entryregis0_
  2015-06-09 20:24:43,068 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:24:43,068 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,068 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} entryregis0_.entryRegisterID ) ( FromClause{level=1} EntryRegister entryregis0_ ) )
  2015-06-09 20:24:43,068 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [EntryRegister entryregis0_]
  2015-06-09 20:24:43,068 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,068 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EntryRegister)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID as entryReg1_14_' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
    |  \-[SQL_TOKEN] SqlFragment: 'entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[entryregis0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'EntryRegister entryregis0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=EntryRegister,tableAlias=entryregis0_,origin=null,columns={,className=com.cmm.jft.financial.EntryRegister}}

  2015-06-09 20:24:43,068 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,068 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e
  2015-06-09 20:24:43,068 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select entryregis0_.entryRegisterID as entryReg1_14_, entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_ from EntryRegister entryregis0_
  2015-06-09 20:24:43,068 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,069 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Currency.findByDescription
  2015-06-09 20:24:43,069 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.financial.Currency c WHERE c.description = :description
  2015-06-09 20:24:43,071 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Currency'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'description'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'description'

  2015-06-09 20:24:43,071 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,072 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,072 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Currency (c) -> currency0_
  2015-06-09 20:24:43,072 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currency0_.currencyID
  2015-06-09 20:24:43,072 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currency0_.currencyID
  2015-06-09 20:24:43,072 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : description -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:43,072 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.description -> currency0_.Description
  2015-06-09 20:24:43,072 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,072 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} currency0_.currencyID ) ( FromClause{level=1} Currency currency0_ ) ( WHERE ( = ( currency0_.Description currency0_.currencyID description ) ? ) ) )
  2015-06-09 20:24:43,072 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Currency currency0_]
  2015-06-09 20:24:43,072 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,073 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Currency)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currency0_.currencyID as currency1_9_' {alias=c, className=com.cmm.jft.financial.Currency, tableAlias=currency0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currency0_.CurrSymbol as CurrSymb2_9_, currency0_.Description as Descript3_9_, currency0_.FractionalUnit as Fraction4_9_, currency0_.Sign as Sign5_9_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currency0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Currency currency0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Currency,tableAlias=currency0_,origin=null,columns={,className=com.cmm.jft.financial.Currency}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'currency0_.Description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=c.description,tableAlias=currency0_,className=com.cmm.jft.financial.Currency,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'currency0_.currencyID' {alias=c, className=com.cmm.jft.financial.Currency, tableAlias=currency0_}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[NAMED_PARAM] ParameterNode: '?' {name=description, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:43,073 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,073 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.financial.Currency c WHERE c.description = :description
  2015-06-09 20:24:43,073 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select currency0_.currencyID as currency1_9_, currency0_.CurrSymbol as CurrSymb2_9_, currency0_.Description as Descript3_9_, currency0_.FractionalUnit as Fraction4_9_, currency0_.Sign as Sign5_9_ from Currency currency0_ where currency0_.Description=?
  2015-06-09 20:24:43,073 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,073 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: DistributionRule.findByObjectRule
  2015-06-09 20:24:43,073 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.DistributionRule d WHERE d.objectRule = :objectRule
  2015-06-09 20:24:43,076 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'DistributionRule'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'objectRule'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'objectRule'

  2015-06-09 20:24:43,076 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,076 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,077 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.DistributionRule (d) -> distributi0_
  2015-06-09 20:24:43,077 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> distributi0_.distributionRuleID
  2015-06-09 20:24:43,077 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> distributi0_.distributionRuleID
  2015-06-09 20:24:43,077 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : objectRule -> org.hibernate.type.CustomType@45404d5
  2015-06-09 20:24:43,077 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d.objectRule -> distributi0_.ObjectRule
  2015-06-09 20:24:43,077 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,077 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} distributi0_.distributionRuleID ) ( FromClause{level=1} DistributionRule distributi0_ ) ( WHERE ( = ( distributi0_.ObjectRule distributi0_.distributionRuleID objectRule ) ? ) ) )
  2015-06-09 20:24:43,077 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [DistributionRule distributi0_]
  2015-06-09 20:24:43,077 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,077 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (DistributionRule)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'distributi0_.distributionRuleID as distribu1_12_' {alias=d, className=com.cmm.jft.financial.DistributionRule, tableAlias=distributi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'distributi0_.ObjectRule as ObjectRu2_12_, distributi0_.RuleName as RuleName3_12_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[distributi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'DistributionRule distributi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=DistributionRule,tableAlias=distributi0_,origin=null,columns={,className=com.cmm.jft.financial.DistributionRule}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'distributi0_.ObjectRule' {propertyName=objectRule,dereferenceType=PRIMITIVE,getPropertyPath=objectRule,path=d.objectRule,tableAlias=distributi0_,className=com.cmm.jft.financial.DistributionRule,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'distributi0_.distributionRuleID' {alias=d, className=com.cmm.jft.financial.DistributionRule, tableAlias=distributi0_}
          |  \-[IDENT] IdentNode: 'objectRule' {originalText=objectRule}
          \-[NAMED_PARAM] ParameterNode: '?' {name=objectRule, expectedType=org.hibernate.type.CustomType@45404d5}

  2015-06-09 20:24:43,077 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,077 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.DistributionRule d WHERE d.objectRule = :objectRule
  2015-06-09 20:24:43,078 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select distributi0_.distributionRuleID as distribu1_12_, distributi0_.ObjectRule as ObjectRu2_12_, distributi0_.RuleName as RuleName3_12_ from DistributionRule distributi0_ where distributi0_.ObjectRule=?
  2015-06-09 20:24:43,078 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,078 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Orders.findBySide
  2015-06-09 20:24:43,078 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.side = :side
  2015-06-09 20:24:43,080 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'trading'
    |  |     |  \-[IDENT] Node: 'Orders'
    |  |     \-[ALIAS] Node: 'o'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'o'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'o'
          |  \-[IDENT] Node: 'side'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'side'

  2015-06-09 20:24:43,080 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,081 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,081 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.Orders (o) -> orders0_
  2015-06-09 20:24:43,081 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:24:43,081 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:24:43,081 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : side -> org.hibernate.type.CustomType@5cbe2654
  2015-06-09 20:24:43,081 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o.side -> orders0_.Side
  2015-06-09 20:24:43,081 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,081 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} orders0_.orderID ) ( FromClause{level=1} Orders orders0_ ) ( WHERE ( = ( orders0_.Side orders0_.orderID side ) ? ) ) )
  2015-06-09 20:24:43,081 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Orders orders0_]
  2015-06-09 20:24:43,081 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,081 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID as orderID1_26_' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
    |  \-[SQL_TOKEN] SqlFragment: 'orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[orders0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Orders orders0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=Orders,tableAlias=orders0_,origin=null,columns={,className=com.cmm.jft.trading.Orders}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'orders0_.Side' {propertyName=side,dereferenceType=PRIMITIVE,getPropertyPath=side,path=o.side,tableAlias=orders0_,className=com.cmm.jft.trading.Orders,classAlias=o}
          |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
          |  \-[IDENT] IdentNode: 'side' {originalText=side}
          \-[NAMED_PARAM] ParameterNode: '?' {name=side, expectedType=org.hibernate.type.CustomType@5cbe2654}

  2015-06-09 20:24:43,081 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,082 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.side = :side
  2015-06-09 20:24:43,082 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select orders0_.orderID as orderID1_26_, orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_ from Orders orders0_ where orders0_.Side=?
  2015-06-09 20:24:43,082 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,082 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Account.findByAccountID
  2015-06-09 20:24:43,082 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.accountID = :accountID
  2015-06-09 20:24:43,088 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'accountID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'accountID'

  2015-06-09 20:24:43,088 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,088 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,089 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Account (a) -> account0_
  2015-06-09 20:24:43,089 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:24:43,089 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:24:43,089 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : accountID -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:43,090 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a.accountID -> account0_.accountID
  2015-06-09 20:24:43,090 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,090 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} account0_.accountID ) ( FromClause{level=1} Account account0_ ) ( WHERE ( = ( account0_.accountID account0_.accountID accountID ) ? ) ) )
  2015-06-09 20:24:43,090 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Account account0_]
  2015-06-09 20:24:43,090 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,090 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountID as accountI1_0_' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.cmm.jft.financial.Account}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.accountID' {propertyName=accountID,dereferenceType=PRIMITIVE,getPropertyPath=accountID,path=a.accountID,tableAlias=account0_,className=com.cmm.jft.financial.Account,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'account0_.accountID' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'accountID' {originalText=accountID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=accountID, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:43,090 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,090 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.accountID = :accountID
  2015-06-09 20:24:43,090 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select account0_.accountID as accountI1_0_, account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_ from Account account0_ where account0_.accountID=?
  2015-06-09 20:24:43,090 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,091 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: TaxSetup.findBySetupName
  2015-06-09 20:24:43,091 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t WHERE t.setupName = :setupName
  2015-06-09 20:24:43,094 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'TaxSetup'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'setupName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'setupName'

  2015-06-09 20:24:43,094 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,094 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,094 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.TaxSetup (t) -> taxsetup0_
  2015-06-09 20:24:43,095 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:24:43,095 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:24:43,095 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : setupName -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:43,095 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t.setupName -> taxsetup0_.SetupName
  2015-06-09 20:24:43,095 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,095 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} taxsetup0_.taxSetupID ) ( FromClause{level=1} TaxSetup taxsetup0_ ) ( WHERE ( = ( taxsetup0_.SetupName taxsetup0_.taxSetupID setupName ) ? ) ) )
  2015-06-09 20:24:43,096 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [TaxSetup taxsetup0_]
  2015-06-09 20:24:43,096 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,098 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TaxSetup)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID as taxSetup1_36_' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
    |  \-[SQL_TOKEN] SqlFragment: 'taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[taxsetup0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'TaxSetup taxsetup0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=TaxSetup,tableAlias=taxsetup0_,origin=null,columns={,className=com.cmm.jft.financial.TaxSetup}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'taxsetup0_.SetupName' {propertyName=setupName,dereferenceType=PRIMITIVE,getPropertyPath=setupName,path=t.setupName,tableAlias=taxsetup0_,className=com.cmm.jft.financial.TaxSetup,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
          |  \-[IDENT] IdentNode: 'setupName' {originalText=setupName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=setupName, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:43,098 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,098 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t WHERE t.setupName = :setupName
  2015-06-09 20:24:43,098 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select taxsetup0_.taxSetupID as taxSetup1_36_, taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_ from TaxSetup taxsetup0_ where taxsetup0_.SetupName=?
  2015-06-09 20:24:43,098 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,098 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Security.findAll
  2015-06-09 20:24:43,098 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.trading.securities.Security e
  2015-06-09 20:24:43,100 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Security'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'e'

  2015-06-09 20:24:43,100 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,100 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,100 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Security (e) -> security0_
  2015-06-09 20:24:43,100 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> security0_.securityID
  2015-06-09 20:24:43,100 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,100 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} security0_.securityID ) ( FromClause{level=1} Security security0_ ) )
  2015-06-09 20:24:43,101 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Security security0_]
  2015-06-09 20:24:43,101 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,101 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Security)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'security0_.securityID as security1_30_' {alias=e, className=com.cmm.jft.trading.securities.Security, tableAlias=security0_}
    |  \-[SQL_TOKEN] SqlFragment: 'security0_.Description as Descript2_30_, security0_.securityInfoID_securityInfoID as security4_30_, security0_.Symbol as Symbol3_30_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[security0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Security security0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=Security,tableAlias=security0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Security}}

  2015-06-09 20:24:43,101 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,101 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.trading.securities.Security e
  2015-06-09 20:24:43,101 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select security0_.securityID as security1_30_, security0_.Description as Descript2_30_, security0_.securityInfoID_securityInfoID as security4_30_, security0_.Symbol as Symbol3_30_ from Security security0_
  2015-06-09 20:24:43,101 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,101 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Deposit.findByDepositID
  2015-06-09 20:24:43,101 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.Deposit d WHERE d.depositID = :depositID
  2015-06-09 20:24:43,104 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Deposit'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'depositID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'depositID'

  2015-06-09 20:24:43,104 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,104 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,105 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Deposit (d) -> deposit0_
  2015-06-09 20:24:43,105 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:24:43,105 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:24:43,105 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : depositID -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:43,106 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d.depositID -> deposit0_.depositID
  2015-06-09 20:24:43,106 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,106 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} deposit0_.depositID ) ( FromClause{level=1} Deposit deposit0_ ) ( WHERE ( = ( deposit0_.depositID deposit0_.depositID depositID ) ? ) ) )
  2015-06-09 20:24:43,106 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Deposit deposit0_]
  2015-06-09 20:24:43,106 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,106 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Deposit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID as depositI1_11_' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[deposit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Deposit deposit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=Deposit,tableAlias=deposit0_,origin=null,columns={,className=com.cmm.jft.financial.Deposit}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'deposit0_.depositID' {propertyName=depositID,dereferenceType=PRIMITIVE,getPropertyPath=depositID,path=d.depositID,tableAlias=deposit0_,className=com.cmm.jft.financial.Deposit,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
          |  \-[IDENT] IdentNode: 'depositID' {originalText=depositID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=depositID, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:43,106 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,106 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.Deposit d WHERE d.depositID = :depositID
  2015-06-09 20:24:43,106 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select deposit0_.depositID as depositI1_11_, deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_ from Deposit deposit0_ where deposit0_.depositID=?
  2015-06-09 20:24:43,106 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,106 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Account.findByAccName
  2015-06-09 20:24:43,107 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.accName = :accName
  2015-06-09 20:24:43,109 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'accName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'accName'

  2015-06-09 20:24:43,109 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,109 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,110 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Account (a) -> account0_
  2015-06-09 20:24:43,110 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:24:43,110 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:24:43,110 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : accName -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:43,110 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a.accName -> account0_.AccName
  2015-06-09 20:24:43,110 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,110 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} account0_.accountID ) ( FromClause{level=1} Account account0_ ) ( WHERE ( = ( account0_.AccName account0_.accountID accName ) ? ) ) )
  2015-06-09 20:24:43,110 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Account account0_]
  2015-06-09 20:24:43,110 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,110 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountID as accountI1_0_' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.cmm.jft.financial.Account}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.AccName' {propertyName=accName,dereferenceType=PRIMITIVE,getPropertyPath=accName,path=a.accName,tableAlias=account0_,className=com.cmm.jft.financial.Account,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'account0_.accountID' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'accName' {originalText=accName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=accName, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:43,110 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,111 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.accName = :accName
  2015-06-09 20:24:43,111 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select account0_.accountID as accountI1_0_, account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_ from Account account0_ where account0_.AccName=?
  2015-06-09 20:24:43,111 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,111 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Rule.findByRuleID
  2015-06-09 20:24:43,111 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT r FROM com.cmm.jft.financial.Rule r WHERE r.ruleID = :ruleID
  2015-06-09 20:24:43,114 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Rule'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'ruleID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'ruleID'

  2015-06-09 20:24:43,114 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,114 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,114 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Rule (r) -> rule0_
  2015-06-09 20:24:43,114 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : r -> rule0_.ruleID
  2015-06-09 20:24:43,114 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : r -> rule0_.ruleID
  2015-06-09 20:24:43,114 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : ruleID -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:43,114 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : r.ruleID -> rule0_.ruleID
  2015-06-09 20:24:43,114 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,114 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} rule0_.ruleID ) ( FromClause{level=1} Rule rule0_ ) ( WHERE ( = ( rule0_.ruleID rule0_.ruleID ruleID ) ? ) ) )
  2015-06-09 20:24:43,115 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Rule rule0_]
  2015-06-09 20:24:43,115 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,115 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Rule)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'rule0_.ruleID as ruleID1_27_' {alias=r, className=com.cmm.jft.financial.Rule, tableAlias=rule0_}
    |  \-[SQL_TOKEN] SqlFragment: 'rule0_.ApplyTax as ApplyTax2_27_, rule0_.ApplyValue as ApplyVal3_27_, rule0_.creditAccountID as creditAc5_27_, rule0_.debitAccountID as debitAcc6_27_, rule0_.distributionRuleID as distribu7_27_, rule0_.Object as Object4_27_, rule0_.ruleFormulaID as ruleForm8_27_, rule0_.taxSetupID as taxSetup9_27_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[rule0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Rule rule0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=Rule,tableAlias=rule0_,origin=null,columns={,className=com.cmm.jft.financial.Rule}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'rule0_.ruleID' {propertyName=ruleID,dereferenceType=PRIMITIVE,getPropertyPath=ruleID,path=r.ruleID,tableAlias=rule0_,className=com.cmm.jft.financial.Rule,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'rule0_.ruleID' {alias=r, className=com.cmm.jft.financial.Rule, tableAlias=rule0_}
          |  \-[IDENT] IdentNode: 'ruleID' {originalText=ruleID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=ruleID, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:43,115 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,115 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT r FROM com.cmm.jft.financial.Rule r WHERE r.ruleID = :ruleID
  2015-06-09 20:24:43,115 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select rule0_.ruleID as ruleID1_27_, rule0_.ApplyTax as ApplyTax2_27_, rule0_.ApplyValue as ApplyVal3_27_, rule0_.creditAccountID as creditAc5_27_, rule0_.debitAccountID as debitAcc6_27_, rule0_.distributionRuleID as distribu7_27_, rule0_.Object as Object4_27_, rule0_.ruleFormulaID as ruleForm8_27_, rule0_.taxSetupID as taxSetup9_27_ from Rule rule0_ where rule0_.ruleID=?
  2015-06-09 20:24:43,115 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,115 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: JournalEntry.findByEntryStatus
  2015-06-09 20:24:43,116 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.journalStatus = :journalStatus
  2015-06-09 20:24:43,118 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'JournalEntry'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'journalStatus'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'journalStatus'

  2015-06-09 20:24:43,118 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,118 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,119 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.JournalEntry (e) -> journalent0_
  2015-06-09 20:24:43,119 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:24:43,119 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:24:43,119 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : journalStatus -> org.hibernate.type.CustomType@66f0548d
  2015-06-09 20:24:43,119 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.journalStatus -> journalent0_.JournalStatus
  2015-06-09 20:24:43,119 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,119 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} journalent0_.entryID ) ( FromClause{level=1} JournalEntry journalent0_ ) ( WHERE ( = ( journalent0_.JournalStatus journalent0_.entryID journalStatus ) ? ) ) )
  2015-06-09 20:24:43,119 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [JournalEntry journalent0_]
  2015-06-09 20:24:43,119 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,119 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JournalEntry)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID as entryID1_20_' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
    |  \-[SQL_TOKEN] SqlFragment: 'journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[journalent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JournalEntry journalent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JournalEntry,tableAlias=journalent0_,origin=null,columns={,className=com.cmm.jft.financial.JournalEntry}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'journalent0_.JournalStatus' {propertyName=journalStatus,dereferenceType=PRIMITIVE,getPropertyPath=journalStatus,path=e.journalStatus,tableAlias=journalent0_,className=com.cmm.jft.financial.JournalEntry,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
          |  \-[IDENT] IdentNode: 'journalStatus' {originalText=journalStatus}
          \-[NAMED_PARAM] ParameterNode: '?' {name=journalStatus, expectedType=org.hibernate.type.CustomType@66f0548d}

  2015-06-09 20:24:43,119 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,119 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.journalStatus = :journalStatus
  2015-06-09 20:24:43,119 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select journalent0_.entryID as entryID1_20_, journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_ from JournalEntry journalent0_ where journalent0_.JournalStatus=?
  2015-06-09 20:24:43,119 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,120 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Tax.findAll
  2015-06-09 20:24:43,121 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT t FROM com.cmm.jft.financial.Tax t
  2015-06-09 20:24:43,123 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'Tax'
       |     \-[ALIAS] Node: 't'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 't'

  2015-06-09 20:24:43,123 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,123 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,123 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Tax (t) -> tax0_
  2015-06-09 20:24:43,123 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> tax0_.taxID
  2015-06-09 20:24:43,124 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,125 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} tax0_.taxID ) ( FromClause{level=1} Tax tax0_ ) )
  2015-06-09 20:24:43,125 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Tax tax0_]
  2015-06-09 20:24:43,125 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,125 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Tax)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'tax0_.taxID as taxID1_35_' {alias=t, className=com.cmm.jft.financial.Tax, tableAlias=tax0_}
    |  \-[SQL_TOKEN] SqlFragment: 'tax0_.TaxName as TaxName2_35_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[tax0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Tax tax0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=Tax,tableAlias=tax0_,origin=null,columns={,className=com.cmm.jft.financial.Tax}}

  2015-06-09 20:24:43,125 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,127 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT t FROM com.cmm.jft.financial.Tax t
  2015-06-09 20:24:43,127 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select tax0_.taxID as taxID1_35_, tax0_.TaxName as TaxName2_35_ from Tax tax0_
  2015-06-09 20:24:43,127 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,127 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Orders.findAll
  2015-06-09 20:24:43,127 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT o FROM com.cmm.jft.trading.Orders o
  2015-06-09 20:24:43,129 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'trading'
       |     |  \-[IDENT] Node: 'Orders'
       |     \-[ALIAS] Node: 'o'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'o'

  2015-06-09 20:24:43,129 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,129 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,129 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.Orders (o) -> orders0_
  2015-06-09 20:24:43,129 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:24:43,129 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,129 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} orders0_.orderID ) ( FromClause{level=1} Orders orders0_ ) )
  2015-06-09 20:24:43,129 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Orders orders0_]
  2015-06-09 20:24:43,129 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,130 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID as orderID1_26_' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
    |  \-[SQL_TOKEN] SqlFragment: 'orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[orders0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Orders orders0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=Orders,tableAlias=orders0_,origin=null,columns={,className=com.cmm.jft.trading.Orders}}

  2015-06-09 20:24:43,130 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,130 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT o FROM com.cmm.jft.trading.Orders o
  2015-06-09 20:24:43,130 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select orders0_.orderID as orderID1_26_, orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_ from Orders orders0_
  2015-06-09 20:24:43,130 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,130 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: JournalEntry.findByEntryClose
  2015-06-09 20:24:43,130 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.entryClose = :entryClose
  2015-06-09 20:24:43,134 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'JournalEntry'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'entryClose'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'entryClose'

  2015-06-09 20:24:43,134 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,134 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,134 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.JournalEntry (e) -> journalent0_
  2015-06-09 20:24:43,134 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:24:43,134 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:24:43,134 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : entryClose -> org.hibernate.type.TimestampType@3b938003
  2015-06-09 20:24:43,134 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.entryClose -> journalent0_.EntryClose
  2015-06-09 20:24:43,134 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,135 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} journalent0_.entryID ) ( FromClause{level=1} JournalEntry journalent0_ ) ( WHERE ( = ( journalent0_.EntryClose journalent0_.entryID entryClose ) ? ) ) )
  2015-06-09 20:24:43,135 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [JournalEntry journalent0_]
  2015-06-09 20:24:43,135 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,135 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JournalEntry)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID as entryID1_20_' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
    |  \-[SQL_TOKEN] SqlFragment: 'journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[journalent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JournalEntry journalent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JournalEntry,tableAlias=journalent0_,origin=null,columns={,className=com.cmm.jft.financial.JournalEntry}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'journalent0_.EntryClose' {propertyName=entryClose,dereferenceType=PRIMITIVE,getPropertyPath=entryClose,path=e.entryClose,tableAlias=journalent0_,className=com.cmm.jft.financial.JournalEntry,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
          |  \-[IDENT] IdentNode: 'entryClose' {originalText=entryClose}
          \-[NAMED_PARAM] ParameterNode: '?' {name=entryClose, expectedType=org.hibernate.type.TimestampType@3b938003}

  2015-06-09 20:24:43,135 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,135 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.entryClose = :entryClose
  2015-06-09 20:24:43,135 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select journalent0_.entryID as entryID1_20_, journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_ from JournalEntry journalent0_ where journalent0_.EntryClose=?
  2015-06-09 20:24:43,135 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,136 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Broker.findByBrokerCode
  2015-06-09 20:24:43,136 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT b FROM com.cmm.jft.trading.account.Broker b WHERE b.brokerCode = :brokerCode
  2015-06-09 20:24:43,139 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'account'
    |  |     |  \-[IDENT] Node: 'Broker'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'b'
          |  \-[IDENT] Node: 'brokerCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'brokerCode'

  2015-06-09 20:24:43,139 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,139 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,139 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.account.Broker (b) -> broker0_
  2015-06-09 20:24:43,140 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : b -> broker0_.brokerID
  2015-06-09 20:24:43,140 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : b -> broker0_.brokerID
  2015-06-09 20:24:43,140 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : brokerCode -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:43,140 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : b.brokerCode -> broker0_.BrokerCode
  2015-06-09 20:24:43,140 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,140 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} broker0_.brokerID ) ( FromClause{level=1} Broker broker0_ ) ( WHERE ( = ( broker0_.BrokerCode broker0_.brokerID brokerCode ) ? ) ) )
  2015-06-09 20:24:43,140 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Broker broker0_]
  2015-06-09 20:24:43,140 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,140 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Broker)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'broker0_.brokerID as brokerID1_1_' {alias=b, className=com.cmm.jft.trading.account.Broker, tableAlias=broker0_}
    |  \-[SQL_TOKEN] SqlFragment: 'broker0_.BrokerCode as BrokerCo2_1_, broker0_.BrokerName as BrokerNa3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[broker0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Broker broker0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Broker,tableAlias=broker0_,origin=null,columns={,className=com.cmm.jft.trading.account.Broker}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'broker0_.BrokerCode' {propertyName=brokerCode,dereferenceType=PRIMITIVE,getPropertyPath=brokerCode,path=b.brokerCode,tableAlias=broker0_,className=com.cmm.jft.trading.account.Broker,classAlias=b}
          |  +-[ALIAS_REF] IdentNode: 'broker0_.brokerID' {alias=b, className=com.cmm.jft.trading.account.Broker, tableAlias=broker0_}
          |  \-[IDENT] IdentNode: 'brokerCode' {originalText=brokerCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=brokerCode, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:43,140 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,140 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT b FROM com.cmm.jft.trading.account.Broker b WHERE b.brokerCode = :brokerCode
  2015-06-09 20:24:43,140 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select broker0_.brokerID as brokerID1_1_, broker0_.BrokerCode as BrokerCo2_1_, broker0_.BrokerName as BrokerNa3_1_ from Broker broker0_ where broker0_.BrokerCode=?
  2015-06-09 20:24:43,140 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,142 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: IndexComposition.findByIndexDate
  2015-06-09 20:24:43,142 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT i FROM com.cmm.jft.trading.securities.IndexComposition i WHERE i.indexDate = :indexDate
  2015-06-09 20:24:43,145 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'IndexComposition'
    |  |     \-[ALIAS] Node: 'i'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'i'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'i'
          |  \-[IDENT] Node: 'indexDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'indexDate'

  2015-06-09 20:24:43,145 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,146 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,147 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.IndexComposition (i) -> indexcompo0_
  2015-06-09 20:24:43,147 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> indexcompo0_.indexCompID
  2015-06-09 20:24:43,147 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> indexcompo0_.indexCompID
  2015-06-09 20:24:43,147 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : indexDate -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:43,147 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i.indexDate -> indexcompo0_.IndexDate
  2015-06-09 20:24:43,147 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,147 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} indexcompo0_.indexCompID ) ( FromClause{level=1} IndexComposition indexcompo0_ ) ( WHERE ( = ( indexcompo0_.IndexDate indexcompo0_.indexCompID indexDate ) ? ) ) )
  2015-06-09 20:24:43,147 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [IndexComposition indexcompo0_]
  2015-06-09 20:24:43,147 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,147 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (IndexComposition)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'indexcompo0_.indexCompID as indexCom1_18_' {alias=i, className=com.cmm.jft.trading.securities.IndexComposition, tableAlias=indexcompo0_}
    |  \-[SQL_TOKEN] SqlFragment: 'indexcompo0_.IndexDate as IndexDat2_18_, indexcompo0_.indexID as indexID3_18_, indexcompo0_.securityID as security4_18_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[i], fromElementByTableAlias=[indexcompo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'IndexComposition indexcompo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=IndexComposition,tableAlias=indexcompo0_,origin=null,columns={,className=com.cmm.jft.trading.securities.IndexComposition}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'indexcompo0_.IndexDate' {propertyName=indexDate,dereferenceType=PRIMITIVE,getPropertyPath=indexDate,path=i.indexDate,tableAlias=indexcompo0_,className=com.cmm.jft.trading.securities.IndexComposition,classAlias=i}
          |  +-[ALIAS_REF] IdentNode: 'indexcompo0_.indexCompID' {alias=i, className=com.cmm.jft.trading.securities.IndexComposition, tableAlias=indexcompo0_}
          |  \-[IDENT] IdentNode: 'indexDate' {originalText=indexDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=indexDate, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:43,147 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,147 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT i FROM com.cmm.jft.trading.securities.IndexComposition i WHERE i.indexDate = :indexDate
  2015-06-09 20:24:43,147 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select indexcompo0_.indexCompID as indexCom1_18_, indexcompo0_.IndexDate as IndexDat2_18_, indexcompo0_.indexID as indexID3_18_, indexcompo0_.securityID as security4_18_ from IndexComposition indexcompo0_ where indexcompo0_.IndexDate=?
  2015-06-09 20:24:43,147 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,148 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Orders.findByVolume
  2015-06-09 20:24:43,148 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.volume = :volume
  2015-06-09 20:24:43,151 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'trading'
    |  |     |  \-[IDENT] Node: 'Orders'
    |  |     \-[ALIAS] Node: 'o'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'o'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'o'
          |  \-[IDENT] Node: 'volume'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'volume'

  2015-06-09 20:24:43,151 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,151 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,151 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.Orders (o) -> orders0_
  2015-06-09 20:24:43,151 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:24:43,151 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:24:43,151 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : volume -> org.hibernate.type.IntegerType@564718df
  2015-06-09 20:24:43,151 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o.volume -> orders0_.Volume
  2015-06-09 20:24:43,151 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,151 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} orders0_.orderID ) ( FromClause{level=1} Orders orders0_ ) ( WHERE ( = ( orders0_.Volume orders0_.orderID volume ) ? ) ) )
  2015-06-09 20:24:43,151 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Orders orders0_]
  2015-06-09 20:24:43,151 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,152 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID as orderID1_26_' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
    |  \-[SQL_TOKEN] SqlFragment: 'orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[orders0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Orders orders0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=Orders,tableAlias=orders0_,origin=null,columns={,className=com.cmm.jft.trading.Orders}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'orders0_.Volume' {propertyName=volume,dereferenceType=PRIMITIVE,getPropertyPath=volume,path=o.volume,tableAlias=orders0_,className=com.cmm.jft.trading.Orders,classAlias=o}
          |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
          |  \-[IDENT] IdentNode: 'volume' {originalText=volume}
          \-[NAMED_PARAM] ParameterNode: '?' {name=volume, expectedType=org.hibernate.type.IntegerType@564718df}

  2015-06-09 20:24:43,152 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,152 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.volume = :volume
  2015-06-09 20:24:43,152 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select orders0_.orderID as orderID1_26_, orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_ from Orders orders0_ where orders0_.Volume=?
  2015-06-09 20:24:43,152 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,152 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: StockExchange.findByStockExchangeID
  2015-06-09 20:24:43,152 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.trading.securities.StockExchange e WHERE e.stockExchangeID = :stockExchangeID
  2015-06-09 20:24:43,156 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'StockExchange'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'stockExchangeID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'stockExchangeID'

  2015-06-09 20:24:43,156 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,156 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,156 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.StockExchange (e) -> stockexcha0_
  2015-06-09 20:24:43,158 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> stockexcha0_.stockExchangeID
  2015-06-09 20:24:43,158 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> stockexcha0_.stockExchangeID
  2015-06-09 20:24:43,158 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : stockExchangeID -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:43,158 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.stockExchangeID -> stockexcha0_.stockExchangeID
  2015-06-09 20:24:43,158 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,158 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} stockexcha0_.stockExchangeID ) ( FromClause{level=1} StockExchange stockexcha0_ ) ( WHERE ( = ( stockexcha0_.stockExchangeID stockexcha0_.stockExchangeID stockExchangeID ) ? ) ) )
  2015-06-09 20:24:43,159 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [StockExchange stockexcha0_]
  2015-06-09 20:24:43,161 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,161 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (StockExchange)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'stockexcha0_.stockExchangeID as stockExc1_33_' {alias=e, className=com.cmm.jft.trading.securities.StockExchange, tableAlias=stockexcha0_}
    |  \-[SQL_TOKEN] SqlFragment: 'stockexcha0_.countryID as countryI3_33_, stockexcha0_.ExchangeName as Exchange2_33_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[stockexcha0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'StockExchange stockexcha0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=StockExchange,tableAlias=stockexcha0_,origin=null,columns={,className=com.cmm.jft.trading.securities.StockExchange}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'stockexcha0_.stockExchangeID' {propertyName=stockExchangeID,dereferenceType=PRIMITIVE,getPropertyPath=stockExchangeID,path=e.stockExchangeID,tableAlias=stockexcha0_,className=com.cmm.jft.trading.securities.StockExchange,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'stockexcha0_.stockExchangeID' {alias=e, className=com.cmm.jft.trading.securities.StockExchange, tableAlias=stockexcha0_}
          |  \-[IDENT] IdentNode: 'stockExchangeID' {originalText=stockExchangeID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=stockExchangeID, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:43,161 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,161 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.trading.securities.StockExchange e WHERE e.stockExchangeID = :stockExchangeID
  2015-06-09 20:24:43,161 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select stockexcha0_.stockExchangeID as stockExc1_33_, stockexcha0_.countryID as countryI3_33_, stockexcha0_.ExchangeName as Exchange2_33_ from StockExchange stockexcha0_ where stockexcha0_.stockExchangeID=?
  2015-06-09 20:24:43,161 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,162 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: MarketTrade.findByVolume
  2015-06-09 20:24:43,163 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m WHERE m.volume = :volume
  2015-06-09 20:24:43,165 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'marketdata'
    |  |     |  \-[IDENT] Node: 'MarketTrade'
    |  |     \-[ALIAS] Node: 'm'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'm'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'm'
          |  \-[IDENT] Node: 'volume'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'volume'

  2015-06-09 20:24:43,166 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,166 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,166 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.marketdata.MarketTrade (m) -> markettrad0_
  2015-06-09 20:24:43,166 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:24:43,166 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:24:43,166 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : volume -> org.hibernate.type.IntegerType@564718df
  2015-06-09 20:24:43,166 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m.volume -> markettrad0_.Volume
  2015-06-09 20:24:43,166 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,166 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} markettrad0_.marketTradeID ) ( FromClause{level=1} MarketTrade markettrad0_ ) ( WHERE ( = ( markettrad0_.Volume markettrad0_.marketTradeID volume ) ? ) ) )
  2015-06-09 20:24:43,166 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [MarketTrade markettrad0_]
  2015-06-09 20:24:43,167 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,167 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (MarketTrade)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID as marketTr1_23_' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
    |  \-[SQL_TOKEN] SqlFragment: 'markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[m], fromElementByTableAlias=[markettrad0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'MarketTrade markettrad0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=MarketTrade,tableAlias=markettrad0_,origin=null,columns={,className=com.cmm.jft.trading.marketdata.MarketTrade}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'markettrad0_.Volume' {propertyName=volume,dereferenceType=PRIMITIVE,getPropertyPath=volume,path=m.volume,tableAlias=markettrad0_,className=com.cmm.jft.trading.marketdata.MarketTrade,classAlias=m}
          |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
          |  \-[IDENT] IdentNode: 'volume' {originalText=volume}
          \-[NAMED_PARAM] ParameterNode: '?' {name=volume, expectedType=org.hibernate.type.IntegerType@564718df}

  2015-06-09 20:24:43,167 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,167 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m WHERE m.volume = :volume
  2015-06-09 20:24:43,167 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select markettrad0_.marketTradeID as marketTr1_23_, markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_ from MarketTrade markettrad0_ where markettrad0_.Volume=?
  2015-06-09 20:24:43,167 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,167 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Company.findAll
  2015-06-09 20:24:43,167 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c
  2015-06-09 20:24:43,169 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Company'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

  2015-06-09 20:24:43,169 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,169 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,169 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Company (c) -> company0_
  2015-06-09 20:24:43,169 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:24:43,169 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,169 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} company0_.companyID ) ( FromClause{level=1} Company company0_ ) )
  2015-06-09 20:24:43,170 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Company company0_]
  2015-06-09 20:24:43,170 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,170 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Company)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'company0_.companyID as companyI1_4_' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
    |  \-[SQL_TOKEN] SqlFragment: 'company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[company0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Company company0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Company,tableAlias=company0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Company}}

  2015-06-09 20:24:43,170 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,170 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c
  2015-06-09 20:24:43,170 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select company0_.companyID as companyI1_4_, company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_ from Company company0_
  2015-06-09 20:24:43,170 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,170 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Rule.findAll
  2015-06-09 20:24:43,170 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT r FROM com.cmm.jft.financial.Rule r
  2015-06-09 20:24:43,172 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'Rule'
       |     \-[ALIAS] Node: 'r'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'r'

  2015-06-09 20:24:43,172 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,172 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,172 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Rule (r) -> rule0_
  2015-06-09 20:24:43,172 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : r -> rule0_.ruleID
  2015-06-09 20:24:43,172 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,172 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} rule0_.ruleID ) ( FromClause{level=1} Rule rule0_ ) )
  2015-06-09 20:24:43,173 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Rule rule0_]
  2015-06-09 20:24:43,173 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,173 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Rule)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'rule0_.ruleID as ruleID1_27_' {alias=r, className=com.cmm.jft.financial.Rule, tableAlias=rule0_}
    |  \-[SQL_TOKEN] SqlFragment: 'rule0_.ApplyTax as ApplyTax2_27_, rule0_.ApplyValue as ApplyVal3_27_, rule0_.creditAccountID as creditAc5_27_, rule0_.debitAccountID as debitAcc6_27_, rule0_.distributionRuleID as distribu7_27_, rule0_.Object as Object4_27_, rule0_.ruleFormulaID as ruleForm8_27_, rule0_.taxSetupID as taxSetup9_27_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[rule0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Rule rule0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=Rule,tableAlias=rule0_,origin=null,columns={,className=com.cmm.jft.financial.Rule}}

  2015-06-09 20:24:43,173 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,173 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT r FROM com.cmm.jft.financial.Rule r
  2015-06-09 20:24:43,173 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select rule0_.ruleID as ruleID1_27_, rule0_.ApplyTax as ApplyTax2_27_, rule0_.ApplyValue as ApplyVal3_27_, rule0_.creditAccountID as creditAc5_27_, rule0_.debitAccountID as debitAcc6_27_, rule0_.distributionRuleID as distribu7_27_, rule0_.Object as Object4_27_, rule0_.ruleFormulaID as ruleForm8_27_, rule0_.taxSetupID as taxSetup9_27_ from Rule rule0_
  2015-06-09 20:24:43,173 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,173 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: EntryRegister.findByOperationID
  2015-06-09 20:24:43,173 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.operationID = :operationID
  2015-06-09 20:24:43,176 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'EntryRegister'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'operationID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'operationID'

  2015-06-09 20:24:43,176 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,176 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,176 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.EntryRegister (e) -> entryregis0_
  2015-06-09 20:24:43,176 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:24:43,176 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:24:43,177 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : operationID -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:43,177 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.operationID -> entryregis0_.OperationID
  2015-06-09 20:24:43,177 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,177 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} entryregis0_.entryRegisterID ) ( FromClause{level=1} EntryRegister entryregis0_ ) ( WHERE ( = ( entryregis0_.OperationID entryregis0_.entryRegisterID operationID ) ? ) ) )
  2015-06-09 20:24:43,177 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [EntryRegister entryregis0_]
  2015-06-09 20:24:43,177 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,178 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EntryRegister)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID as entryReg1_14_' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
    |  \-[SQL_TOKEN] SqlFragment: 'entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[entryregis0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EntryRegister entryregis0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=EntryRegister,tableAlias=entryregis0_,origin=null,columns={,className=com.cmm.jft.financial.EntryRegister}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'entryregis0_.OperationID' {propertyName=operationID,dereferenceType=PRIMITIVE,getPropertyPath=operationID,path=e.operationID,tableAlias=entryregis0_,className=com.cmm.jft.financial.EntryRegister,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
          |  \-[IDENT] IdentNode: 'operationID' {originalText=operationID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=operationID, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:43,178 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,178 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.operationID = :operationID
  2015-06-09 20:24:43,178 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select entryregis0_.entryRegisterID as entryReg1_14_, entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_ from EntryRegister entryregis0_ where entryregis0_.OperationID=?
  2015-06-09 20:24:43,178 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,178 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Security.findBySecurityID
  2015-06-09 20:24:43,178 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.trading.securities.Security e WHERE e.securityID = :securityID
  2015-06-09 20:24:43,181 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Security'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'securityID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'securityID'

  2015-06-09 20:24:43,181 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,182 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,182 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Security (e) -> security0_
  2015-06-09 20:24:43,182 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> security0_.securityID
  2015-06-09 20:24:43,182 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> security0_.securityID
  2015-06-09 20:24:43,182 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : securityID -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:43,182 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.securityID -> security0_.securityID
  2015-06-09 20:24:43,182 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,182 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} security0_.securityID ) ( FromClause{level=1} Security security0_ ) ( WHERE ( = ( security0_.securityID security0_.securityID securityID ) ? ) ) )
  2015-06-09 20:24:43,182 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Security security0_]
  2015-06-09 20:24:43,183 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,183 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Security)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'security0_.securityID as security1_30_' {alias=e, className=com.cmm.jft.trading.securities.Security, tableAlias=security0_}
    |  \-[SQL_TOKEN] SqlFragment: 'security0_.Description as Descript2_30_, security0_.securityInfoID_securityInfoID as security4_30_, security0_.Symbol as Symbol3_30_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[security0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Security security0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=Security,tableAlias=security0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Security}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'security0_.securityID' {propertyName=securityID,dereferenceType=PRIMITIVE,getPropertyPath=securityID,path=e.securityID,tableAlias=security0_,className=com.cmm.jft.trading.securities.Security,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'security0_.securityID' {alias=e, className=com.cmm.jft.trading.securities.Security, tableAlias=security0_}
          |  \-[IDENT] IdentNode: 'securityID' {originalText=securityID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=securityID, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:43,183 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,183 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.trading.securities.Security e WHERE e.securityID = :securityID
  2015-06-09 20:24:43,183 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select security0_.securityID as security1_30_, security0_.Description as Descript2_30_, security0_.securityInfoID_securityInfoID as security4_30_, security0_.Symbol as Symbol3_30_ from Security security0_ where security0_.securityID=?
  2015-06-09 20:24:43,183 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,183 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Deposit.findByDepositDate
  2015-06-09 20:24:43,184 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.Deposit d WHERE d.depositDate = :depositDate
  2015-06-09 20:24:43,186 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Deposit'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'depositDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'depositDate'

  2015-06-09 20:24:43,186 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,186 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,187 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Deposit (d) -> deposit0_
  2015-06-09 20:24:43,187 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:24:43,187 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:24:43,187 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : depositDate -> org.hibernate.type.TimestampType@3b938003
  2015-06-09 20:24:43,187 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d.depositDate -> deposit0_.DepositDate
  2015-06-09 20:24:43,187 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,187 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} deposit0_.depositID ) ( FromClause{level=1} Deposit deposit0_ ) ( WHERE ( = ( deposit0_.DepositDate deposit0_.depositID depositDate ) ? ) ) )
  2015-06-09 20:24:43,187 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Deposit deposit0_]
  2015-06-09 20:24:43,187 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,187 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Deposit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID as depositI1_11_' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[deposit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Deposit deposit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=Deposit,tableAlias=deposit0_,origin=null,columns={,className=com.cmm.jft.financial.Deposit}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'deposit0_.DepositDate' {propertyName=depositDate,dereferenceType=PRIMITIVE,getPropertyPath=depositDate,path=d.depositDate,tableAlias=deposit0_,className=com.cmm.jft.financial.Deposit,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
          |  \-[IDENT] IdentNode: 'depositDate' {originalText=depositDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=depositDate, expectedType=org.hibernate.type.TimestampType@3b938003}

  2015-06-09 20:24:43,187 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,187 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.Deposit d WHERE d.depositDate = :depositDate
  2015-06-09 20:24:43,187 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select deposit0_.depositID as depositI1_11_, deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_ from Deposit deposit0_ where deposit0_.DepositDate=?
  2015-06-09 20:24:43,187 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,188 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Index.findAll
  2015-06-09 20:24:43,188 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT i FROM com.cmm.jft.trading.securities.Index i
  2015-06-09 20:24:43,189 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Index'
       |     \-[ALIAS] Node: 'i'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'i'

  2015-06-09 20:24:43,189 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,190 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,190 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Index (i) -> index0_
  2015-06-09 20:24:43,190 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> index0_.indexID
  2015-06-09 20:24:43,190 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,190 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} index0_.indexID ) ( FromClause{level=1} Index index0_ ) )
  2015-06-09 20:24:43,190 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Index index0_]
  2015-06-09 20:24:43,190 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,190 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Index)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'index0_.indexID as indexID1_17_' {alias=i, className=com.cmm.jft.trading.securities.Index, tableAlias=index0_}
    |  \-[SQL_TOKEN] SqlFragment: 'index0_.Index as Index2_17_, index0_.IndexName as IndexNam3_17_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[i], fromElementByTableAlias=[index0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Index index0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=Index,tableAlias=index0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Index}}

  2015-06-09 20:24:43,190 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,190 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT i FROM com.cmm.jft.trading.securities.Index i
  2015-06-09 20:24:43,190 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select index0_.indexID as indexID1_17_, index0_.Index as Index2_17_, index0_.IndexName as IndexNam3_17_ from Index index0_
  2015-06-09 20:24:43,190 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,190 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: EntryRegister.findByEntryType
  2015-06-09 20:24:43,191 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.entryType = :entryType
  2015-06-09 20:24:43,194 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'EntryRegister'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'entryType'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'entryType'

  2015-06-09 20:24:43,194 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,194 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,194 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.EntryRegister (e) -> entryregis0_
  2015-06-09 20:24:43,194 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:24:43,194 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:24:43,194 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : entryType -> org.hibernate.type.CustomType@6850b758
  2015-06-09 20:24:43,194 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.entryType -> entryregis0_.EntryType
  2015-06-09 20:24:43,195 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,195 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} entryregis0_.entryRegisterID ) ( FromClause{level=1} EntryRegister entryregis0_ ) ( WHERE ( = ( entryregis0_.EntryType entryregis0_.entryRegisterID entryType ) ? ) ) )
  2015-06-09 20:24:43,195 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [EntryRegister entryregis0_]
  2015-06-09 20:24:43,195 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,195 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EntryRegister)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID as entryReg1_14_' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
    |  \-[SQL_TOKEN] SqlFragment: 'entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[entryregis0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EntryRegister entryregis0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=EntryRegister,tableAlias=entryregis0_,origin=null,columns={,className=com.cmm.jft.financial.EntryRegister}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'entryregis0_.EntryType' {propertyName=entryType,dereferenceType=PRIMITIVE,getPropertyPath=entryType,path=e.entryType,tableAlias=entryregis0_,className=com.cmm.jft.financial.EntryRegister,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
          |  \-[IDENT] IdentNode: 'entryType' {originalText=entryType}
          \-[NAMED_PARAM] ParameterNode: '?' {name=entryType, expectedType=org.hibernate.type.CustomType@6850b758}

  2015-06-09 20:24:43,195 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,195 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.entryType = :entryType
  2015-06-09 20:24:43,195 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select entryregis0_.entryRegisterID as entryReg1_14_, entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_ from EntryRegister entryregis0_ where entryregis0_.EntryType=?
  2015-06-09 20:24:43,195 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,195 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: DistributionRule.findAll
  2015-06-09 20:24:43,200 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.DistributionRule d
  2015-06-09 20:24:43,204 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'DistributionRule'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'd'

  2015-06-09 20:24:43,204 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,204 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,205 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.DistributionRule (d) -> distributi0_
  2015-06-09 20:24:43,205 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> distributi0_.distributionRuleID
  2015-06-09 20:24:43,205 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,205 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} distributi0_.distributionRuleID ) ( FromClause{level=1} DistributionRule distributi0_ ) )
  2015-06-09 20:24:43,205 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [DistributionRule distributi0_]
  2015-06-09 20:24:43,205 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,205 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (DistributionRule)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'distributi0_.distributionRuleID as distribu1_12_' {alias=d, className=com.cmm.jft.financial.DistributionRule, tableAlias=distributi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'distributi0_.ObjectRule as ObjectRu2_12_, distributi0_.RuleName as RuleName3_12_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[distributi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'DistributionRule distributi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=DistributionRule,tableAlias=distributi0_,origin=null,columns={,className=com.cmm.jft.financial.DistributionRule}}

  2015-06-09 20:24:43,205 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,205 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.DistributionRule d
  2015-06-09 20:24:43,205 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select distributi0_.distributionRuleID as distribu1_12_, distributi0_.ObjectRule as ObjectRu2_12_, distributi0_.RuleName as RuleName3_12_ from DistributionRule distributi0_
  2015-06-09 20:24:43,205 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,205 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: MarketTrade.findByMarketTradeID
  2015-06-09 20:24:43,206 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m WHERE m.marketTradeID = :marketTradeID
  2015-06-09 20:24:43,209 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'marketdata'
    |  |     |  \-[IDENT] Node: 'MarketTrade'
    |  |     \-[ALIAS] Node: 'm'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'm'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'm'
          |  \-[IDENT] Node: 'marketTradeID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'marketTradeID'

  2015-06-09 20:24:43,209 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,209 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,209 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.marketdata.MarketTrade (m) -> markettrad0_
  2015-06-09 20:24:43,209 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:24:43,209 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:24:43,209 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : marketTradeID -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:43,209 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m.marketTradeID -> markettrad0_.marketTradeID
  2015-06-09 20:24:43,209 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,209 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} markettrad0_.marketTradeID ) ( FromClause{level=1} MarketTrade markettrad0_ ) ( WHERE ( = ( markettrad0_.marketTradeID markettrad0_.marketTradeID marketTradeID ) ? ) ) )
  2015-06-09 20:24:43,210 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [MarketTrade markettrad0_]
  2015-06-09 20:24:43,210 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,210 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (MarketTrade)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID as marketTr1_23_' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
    |  \-[SQL_TOKEN] SqlFragment: 'markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[m], fromElementByTableAlias=[markettrad0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'MarketTrade markettrad0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=MarketTrade,tableAlias=markettrad0_,origin=null,columns={,className=com.cmm.jft.trading.marketdata.MarketTrade}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'markettrad0_.marketTradeID' {propertyName=marketTradeID,dereferenceType=PRIMITIVE,getPropertyPath=marketTradeID,path=m.marketTradeID,tableAlias=markettrad0_,className=com.cmm.jft.trading.marketdata.MarketTrade,classAlias=m}
          |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
          |  \-[IDENT] IdentNode: 'marketTradeID' {originalText=marketTradeID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=marketTradeID, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:43,210 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,210 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m WHERE m.marketTradeID = :marketTradeID
  2015-06-09 20:24:43,210 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select markettrad0_.marketTradeID as marketTr1_23_, markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=?
  2015-06-09 20:24:43,210 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,210 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Rule.findByApplyTax
  2015-06-09 20:24:43,210 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT r FROM com.cmm.jft.financial.Rule r WHERE r.applyTax = :applyTax
  2015-06-09 20:24:43,214 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Rule'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'applyTax'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'applyTax'

  2015-06-09 20:24:43,214 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,214 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,214 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Rule (r) -> rule0_
  2015-06-09 20:24:43,215 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : r -> rule0_.ruleID
  2015-06-09 20:24:43,219 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : r -> rule0_.ruleID
  2015-06-09 20:24:43,219 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : applyTax -> org.hibernate.type.BooleanType@646be2c3
  2015-06-09 20:24:43,219 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : r.applyTax -> rule0_.ApplyTax
  2015-06-09 20:24:43,219 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,219 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} rule0_.ruleID ) ( FromClause{level=1} Rule rule0_ ) ( WHERE ( = ( rule0_.ApplyTax rule0_.ruleID applyTax ) ? ) ) )
  2015-06-09 20:24:43,219 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Rule rule0_]
  2015-06-09 20:24:43,219 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,220 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Rule)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'rule0_.ruleID as ruleID1_27_' {alias=r, className=com.cmm.jft.financial.Rule, tableAlias=rule0_}
    |  \-[SQL_TOKEN] SqlFragment: 'rule0_.ApplyTax as ApplyTax2_27_, rule0_.ApplyValue as ApplyVal3_27_, rule0_.creditAccountID as creditAc5_27_, rule0_.debitAccountID as debitAcc6_27_, rule0_.distributionRuleID as distribu7_27_, rule0_.Object as Object4_27_, rule0_.ruleFormulaID as ruleForm8_27_, rule0_.taxSetupID as taxSetup9_27_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[rule0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Rule rule0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=Rule,tableAlias=rule0_,origin=null,columns={,className=com.cmm.jft.financial.Rule}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'rule0_.ApplyTax' {propertyName=applyTax,dereferenceType=PRIMITIVE,getPropertyPath=applyTax,path=r.applyTax,tableAlias=rule0_,className=com.cmm.jft.financial.Rule,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'rule0_.ruleID' {alias=r, className=com.cmm.jft.financial.Rule, tableAlias=rule0_}
          |  \-[IDENT] IdentNode: 'applyTax' {originalText=applyTax}
          \-[NAMED_PARAM] ParameterNode: '?' {name=applyTax, expectedType=org.hibernate.type.BooleanType@646be2c3}

  2015-06-09 20:24:43,220 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,220 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT r FROM com.cmm.jft.financial.Rule r WHERE r.applyTax = :applyTax
  2015-06-09 20:24:43,220 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select rule0_.ruleID as ruleID1_27_, rule0_.ApplyTax as ApplyTax2_27_, rule0_.ApplyValue as ApplyVal3_27_, rule0_.creditAccountID as creditAc5_27_, rule0_.debitAccountID as debitAcc6_27_, rule0_.distributionRuleID as distribu7_27_, rule0_.Object as Object4_27_, rule0_.ruleFormulaID as ruleForm8_27_, rule0_.taxSetupID as taxSetup9_27_ from Rule rule0_ where rule0_.ApplyTax=?
  2015-06-09 20:24:43,220 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,220 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: CurrencyQuote.findAll
  2015-06-09 20:24:43,220 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.financial.CurrencyQuote c
  2015-06-09 20:24:43,225 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'CurrencyQuote'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

  2015-06-09 20:24:43,225 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,225 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,225 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.CurrencyQuote (c) -> currencyqu0_
  2015-06-09 20:24:43,225 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currencyqu0_.currencyQuoteID
  2015-06-09 20:24:43,225 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,225 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} currencyqu0_.currencyQuoteID ) ( FromClause{level=1} CurrencyQuote currencyqu0_ ) )
  2015-06-09 20:24:43,225 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [CurrencyQuote currencyqu0_]
  2015-06-09 20:24:43,225 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,226 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CurrencyQuote)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currencyqu0_.currencyQuoteID as currency1_10_' {alias=c, className=com.cmm.jft.financial.CurrencyQuote, tableAlias=currencyqu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currencyqu0_.currencyID as currency4_10_, currencyqu0_.QDateTime as QDateTim2_10_, currencyqu0_.Value as Value3_10_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currencyqu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CurrencyQuote currencyqu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CurrencyQuote,tableAlias=currencyqu0_,origin=null,columns={,className=com.cmm.jft.financial.CurrencyQuote}}

  2015-06-09 20:24:43,226 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,226 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.financial.CurrencyQuote c
  2015-06-09 20:24:43,226 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select currencyqu0_.currencyQuoteID as currency1_10_, currencyqu0_.currencyID as currency4_10_, currencyqu0_.QDateTime as QDateTim2_10_, currencyqu0_.Value as Value3_10_ from CurrencyQuote currencyqu0_
  2015-06-09 20:24:43,226 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,226 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: TaxSetup.findByTaxSetupID
  2015-06-09 20:24:43,226 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t WHERE t.taxSetupID = :taxSetupID
  2015-06-09 20:24:43,231 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'TaxSetup'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'taxSetupID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'taxSetupID'

  2015-06-09 20:24:43,231 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,234 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,234 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.TaxSetup (t) -> taxsetup0_
  2015-06-09 20:24:43,234 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:24:43,234 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:24:43,235 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : taxSetupID -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:43,235 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t.taxSetupID -> taxsetup0_.taxSetupID
  2015-06-09 20:24:43,235 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,235 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} taxsetup0_.taxSetupID ) ( FromClause{level=1} TaxSetup taxsetup0_ ) ( WHERE ( = ( taxsetup0_.taxSetupID taxsetup0_.taxSetupID taxSetupID ) ? ) ) )
  2015-06-09 20:24:43,235 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [TaxSetup taxsetup0_]
  2015-06-09 20:24:43,235 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,235 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TaxSetup)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID as taxSetup1_36_' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
    |  \-[SQL_TOKEN] SqlFragment: 'taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[taxsetup0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'TaxSetup taxsetup0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=TaxSetup,tableAlias=taxsetup0_,origin=null,columns={,className=com.cmm.jft.financial.TaxSetup}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'taxsetup0_.taxSetupID' {propertyName=taxSetupID,dereferenceType=PRIMITIVE,getPropertyPath=taxSetupID,path=t.taxSetupID,tableAlias=taxsetup0_,className=com.cmm.jft.financial.TaxSetup,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
          |  \-[IDENT] IdentNode: 'taxSetupID' {originalText=taxSetupID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=taxSetupID, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:43,235 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,235 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t WHERE t.taxSetupID = :taxSetupID
  2015-06-09 20:24:43,235 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select taxsetup0_.taxSetupID as taxSetup1_36_, taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=?
  2015-06-09 20:24:43,235 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,235 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: StockExchange.findByExchangeName
  2015-06-09 20:24:43,236 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.trading.securities.StockExchange e WHERE e.exchangeName = :exchangeName
  2015-06-09 20:24:43,238 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'StockExchange'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'exchangeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'exchangeName'

  2015-06-09 20:24:43,238 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,239 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,239 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.StockExchange (e) -> stockexcha0_
  2015-06-09 20:24:43,239 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> stockexcha0_.stockExchangeID
  2015-06-09 20:24:43,239 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> stockexcha0_.stockExchangeID
  2015-06-09 20:24:43,239 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : exchangeName -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:43,239 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.exchangeName -> stockexcha0_.ExchangeName
  2015-06-09 20:24:43,239 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,239 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} stockexcha0_.stockExchangeID ) ( FromClause{level=1} StockExchange stockexcha0_ ) ( WHERE ( = ( stockexcha0_.ExchangeName stockexcha0_.stockExchangeID exchangeName ) ? ) ) )
  2015-06-09 20:24:43,239 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [StockExchange stockexcha0_]
  2015-06-09 20:24:43,239 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,239 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (StockExchange)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'stockexcha0_.stockExchangeID as stockExc1_33_' {alias=e, className=com.cmm.jft.trading.securities.StockExchange, tableAlias=stockexcha0_}
    |  \-[SQL_TOKEN] SqlFragment: 'stockexcha0_.countryID as countryI3_33_, stockexcha0_.ExchangeName as Exchange2_33_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[stockexcha0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'StockExchange stockexcha0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=StockExchange,tableAlias=stockexcha0_,origin=null,columns={,className=com.cmm.jft.trading.securities.StockExchange}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'stockexcha0_.ExchangeName' {propertyName=exchangeName,dereferenceType=PRIMITIVE,getPropertyPath=exchangeName,path=e.exchangeName,tableAlias=stockexcha0_,className=com.cmm.jft.trading.securities.StockExchange,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'stockexcha0_.stockExchangeID' {alias=e, className=com.cmm.jft.trading.securities.StockExchange, tableAlias=stockexcha0_}
          |  \-[IDENT] IdentNode: 'exchangeName' {originalText=exchangeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=exchangeName, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:43,239 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,240 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.trading.securities.StockExchange e WHERE e.exchangeName = :exchangeName
  2015-06-09 20:24:43,240 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select stockexcha0_.stockExchangeID as stockExc1_33_, stockexcha0_.countryID as countryI3_33_, stockexcha0_.ExchangeName as Exchange2_33_ from StockExchange stockexcha0_ where stockexcha0_.ExchangeName=?
  2015-06-09 20:24:43,240 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,240 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: CurrencyQuote.findByQDateTime
  2015-06-09 20:24:43,240 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.financial.CurrencyQuote c WHERE c.qDateTime = :qDateTime
  2015-06-09 20:24:43,242 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'CurrencyQuote'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'qDateTime'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'qDateTime'

  2015-06-09 20:24:43,243 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,243 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,243 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.CurrencyQuote (c) -> currencyqu0_
  2015-06-09 20:24:43,244 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currencyqu0_.currencyQuoteID
  2015-06-09 20:24:43,244 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currencyqu0_.currencyQuoteID
  2015-06-09 20:24:43,245 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : qDateTime -> org.hibernate.type.TimestampType@3b938003
  2015-06-09 20:24:43,245 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.qDateTime -> currencyqu0_.QDateTime
  2015-06-09 20:24:43,245 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,245 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} currencyqu0_.currencyQuoteID ) ( FromClause{level=1} CurrencyQuote currencyqu0_ ) ( WHERE ( = ( currencyqu0_.QDateTime currencyqu0_.currencyQuoteID qDateTime ) ? ) ) )
  2015-06-09 20:24:43,245 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [CurrencyQuote currencyqu0_]
  2015-06-09 20:24:43,245 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,245 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CurrencyQuote)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currencyqu0_.currencyQuoteID as currency1_10_' {alias=c, className=com.cmm.jft.financial.CurrencyQuote, tableAlias=currencyqu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currencyqu0_.currencyID as currency4_10_, currencyqu0_.QDateTime as QDateTim2_10_, currencyqu0_.Value as Value3_10_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currencyqu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CurrencyQuote currencyqu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CurrencyQuote,tableAlias=currencyqu0_,origin=null,columns={,className=com.cmm.jft.financial.CurrencyQuote}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'currencyqu0_.QDateTime' {propertyName=qDateTime,dereferenceType=PRIMITIVE,getPropertyPath=qDateTime,path=c.qDateTime,tableAlias=currencyqu0_,className=com.cmm.jft.financial.CurrencyQuote,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'currencyqu0_.currencyQuoteID' {alias=c, className=com.cmm.jft.financial.CurrencyQuote, tableAlias=currencyqu0_}
          |  \-[IDENT] IdentNode: 'qDateTime' {originalText=qDateTime}
          \-[NAMED_PARAM] ParameterNode: '?' {name=qDateTime, expectedType=org.hibernate.type.TimestampType@3b938003}

  2015-06-09 20:24:43,245 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,245 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.financial.CurrencyQuote c WHERE c.qDateTime = :qDateTime
  2015-06-09 20:24:43,245 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select currencyqu0_.currencyQuoteID as currency1_10_, currencyqu0_.currencyID as currency4_10_, currencyqu0_.QDateTime as QDateTim2_10_, currencyqu0_.Value as Value3_10_ from CurrencyQuote currencyqu0_ where currencyqu0_.QDateTime=?
  2015-06-09 20:24:43,245 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,245 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Account.findByBalance
  2015-06-09 20:24:43,246 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.balance = :balance
  2015-06-09 20:24:43,248 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'balance'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'balance'

  2015-06-09 20:24:43,248 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,248 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,248 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Account (a) -> account0_
  2015-06-09 20:24:43,248 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:24:43,248 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:24:43,248 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : balance -> org.hibernate.type.BigDecimalType@3bbc39f8
  2015-06-09 20:24:43,248 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a.balance -> account0_.Balance
  2015-06-09 20:24:43,248 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,248 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} account0_.accountID ) ( FromClause{level=1} Account account0_ ) ( WHERE ( = ( account0_.Balance account0_.accountID balance ) ? ) ) )
  2015-06-09 20:24:43,249 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Account account0_]
  2015-06-09 20:24:43,249 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,249 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountID as accountI1_0_' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.cmm.jft.financial.Account}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.Balance' {propertyName=balance,dereferenceType=PRIMITIVE,getPropertyPath=balance,path=a.balance,tableAlias=account0_,className=com.cmm.jft.financial.Account,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'account0_.accountID' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'balance' {originalText=balance}
          \-[NAMED_PARAM] ParameterNode: '?' {name=balance, expectedType=org.hibernate.type.BigDecimalType@3bbc39f8}

  2015-06-09 20:24:43,249 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,249 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.balance = :balance
  2015-06-09 20:24:43,249 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select account0_.accountID as accountI1_0_, account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_ from Account account0_ where account0_.Balance=?
  2015-06-09 20:24:43,249 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,249 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: StockExchange.findAll
  2015-06-09 20:24:43,249 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.trading.securities.StockExchange e
  2015-06-09 20:24:43,252 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'StockExchange'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'e'

  2015-06-09 20:24:43,252 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,252 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,252 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.StockExchange (e) -> stockexcha0_
  2015-06-09 20:24:43,252 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> stockexcha0_.stockExchangeID
  2015-06-09 20:24:43,252 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,253 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} stockexcha0_.stockExchangeID ) ( FromClause{level=1} StockExchange stockexcha0_ ) )
  2015-06-09 20:24:43,253 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [StockExchange stockexcha0_]
  2015-06-09 20:24:43,253 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,253 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (StockExchange)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'stockexcha0_.stockExchangeID as stockExc1_33_' {alias=e, className=com.cmm.jft.trading.securities.StockExchange, tableAlias=stockexcha0_}
    |  \-[SQL_TOKEN] SqlFragment: 'stockexcha0_.countryID as countryI3_33_, stockexcha0_.ExchangeName as Exchange2_33_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[stockexcha0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'StockExchange stockexcha0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=StockExchange,tableAlias=stockexcha0_,origin=null,columns={,className=com.cmm.jft.trading.securities.StockExchange}}

  2015-06-09 20:24:43,253 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,253 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.trading.securities.StockExchange e
  2015-06-09 20:24:43,253 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select stockexcha0_.stockExchangeID as stockExc1_33_, stockexcha0_.countryID as countryI3_33_, stockexcha0_.ExchangeName as Exchange2_33_ from StockExchange stockexcha0_
  2015-06-09 20:24:43,253 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,253 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Security.findBySymbol
  2015-06-09 20:24:43,253 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.trading.securities.Security e WHERE e.symbol = :symbol
  2015-06-09 20:24:43,256 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Security'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'symbol'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'symbol'

  2015-06-09 20:24:43,257 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,257 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,257 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Security (e) -> security0_
  2015-06-09 20:24:43,257 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> security0_.securityID
  2015-06-09 20:24:43,257 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> security0_.securityID
  2015-06-09 20:24:43,257 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : symbol -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:43,257 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.symbol -> security0_.Symbol
  2015-06-09 20:24:43,257 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,257 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} security0_.securityID ) ( FromClause{level=1} Security security0_ ) ( WHERE ( = ( security0_.Symbol security0_.securityID symbol ) ? ) ) )
  2015-06-09 20:24:43,257 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Security security0_]
  2015-06-09 20:24:43,257 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,257 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Security)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'security0_.securityID as security1_30_' {alias=e, className=com.cmm.jft.trading.securities.Security, tableAlias=security0_}
    |  \-[SQL_TOKEN] SqlFragment: 'security0_.Description as Descript2_30_, security0_.securityInfoID_securityInfoID as security4_30_, security0_.Symbol as Symbol3_30_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[security0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Security security0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=Security,tableAlias=security0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Security}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'security0_.Symbol' {propertyName=symbol,dereferenceType=PRIMITIVE,getPropertyPath=symbol,path=e.symbol,tableAlias=security0_,className=com.cmm.jft.trading.securities.Security,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'security0_.securityID' {alias=e, className=com.cmm.jft.trading.securities.Security, tableAlias=security0_}
          |  \-[IDENT] IdentNode: 'symbol' {originalText=symbol}
          \-[NAMED_PARAM] ParameterNode: '?' {name=symbol, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:43,257 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,258 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.trading.securities.Security e WHERE e.symbol = :symbol
  2015-06-09 20:24:43,258 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select security0_.securityID as security1_30_, security0_.Description as Descript2_30_, security0_.securityInfoID_securityInfoID as security4_30_, security0_.Symbol as Symbol3_30_ from Security security0_ where security0_.Symbol=?
  2015-06-09 20:24:43,258 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,258 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: IndexComposition.findByIndexCompID
  2015-06-09 20:24:43,258 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT i FROM com.cmm.jft.trading.securities.IndexComposition i WHERE i.indexCompID = :indexCompID
  2015-06-09 20:24:43,261 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'IndexComposition'
    |  |     \-[ALIAS] Node: 'i'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'i'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'i'
          |  \-[IDENT] Node: 'indexCompID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'indexCompID'

  2015-06-09 20:24:43,261 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,261 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,261 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.IndexComposition (i) -> indexcompo0_
  2015-06-09 20:24:43,261 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> indexcompo0_.indexCompID
  2015-06-09 20:24:43,261 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> indexcompo0_.indexCompID
  2015-06-09 20:24:43,261 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : indexCompID -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:43,261 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i.indexCompID -> indexcompo0_.indexCompID
  2015-06-09 20:24:43,261 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,261 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} indexcompo0_.indexCompID ) ( FromClause{level=1} IndexComposition indexcompo0_ ) ( WHERE ( = ( indexcompo0_.indexCompID indexcompo0_.indexCompID indexCompID ) ? ) ) )
  2015-06-09 20:24:43,261 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [IndexComposition indexcompo0_]
  2015-06-09 20:24:43,262 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,262 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (IndexComposition)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'indexcompo0_.indexCompID as indexCom1_18_' {alias=i, className=com.cmm.jft.trading.securities.IndexComposition, tableAlias=indexcompo0_}
    |  \-[SQL_TOKEN] SqlFragment: 'indexcompo0_.IndexDate as IndexDat2_18_, indexcompo0_.indexID as indexID3_18_, indexcompo0_.securityID as security4_18_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[i], fromElementByTableAlias=[indexcompo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'IndexComposition indexcompo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=IndexComposition,tableAlias=indexcompo0_,origin=null,columns={,className=com.cmm.jft.trading.securities.IndexComposition}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'indexcompo0_.indexCompID' {propertyName=indexCompID,dereferenceType=PRIMITIVE,getPropertyPath=indexCompID,path=i.indexCompID,tableAlias=indexcompo0_,className=com.cmm.jft.trading.securities.IndexComposition,classAlias=i}
          |  +-[ALIAS_REF] IdentNode: 'indexcompo0_.indexCompID' {alias=i, className=com.cmm.jft.trading.securities.IndexComposition, tableAlias=indexcompo0_}
          |  \-[IDENT] IdentNode: 'indexCompID' {originalText=indexCompID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=indexCompID, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:43,262 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,262 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT i FROM com.cmm.jft.trading.securities.IndexComposition i WHERE i.indexCompID = :indexCompID
  2015-06-09 20:24:43,262 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select indexcompo0_.indexCompID as indexCom1_18_, indexcompo0_.IndexDate as IndexDat2_18_, indexcompo0_.indexID as indexID3_18_, indexcompo0_.securityID as security4_18_ from IndexComposition indexcompo0_ where indexcompo0_.indexCompID=?
  2015-06-09 20:24:43,262 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,262 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Subsector.findBySubsectorID
  2015-06-09 20:24:43,262 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Subsector s WHERE s.subsectorID = :subsectorID
  2015-06-09 20:24:43,265 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Subsector'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'subsectorID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'subsectorID'

  2015-06-09 20:24:43,265 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,265 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,265 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Subsector (s) -> subsector0_
  2015-06-09 20:24:43,265 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> subsector0_.subsectorID
  2015-06-09 20:24:43,265 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> subsector0_.subsectorID
  2015-06-09 20:24:43,265 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : subsectorID -> org.hibernate.type.LongType@c540f5a
  2015-06-09 20:24:43,265 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s.subsectorID -> subsector0_.subsectorID
  2015-06-09 20:24:43,266 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,266 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} subsector0_.subsectorID ) ( FromClause{level=1} Subsector subsector0_ ) ( WHERE ( = ( subsector0_.subsectorID subsector0_.subsectorID subsectorID ) ? ) ) )
  2015-06-09 20:24:43,266 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Subsector subsector0_]
  2015-06-09 20:24:43,266 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,266 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Subsector)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'subsector0_.subsectorID as subsecto1_34_' {alias=s, className=com.cmm.jft.trading.securities.Subsector, tableAlias=subsector0_}
    |  \-[SQL_TOKEN] SqlFragment: 'subsector0_.sectorID as sectorID3_34_, subsector0_.SubsectorName as Subsecto2_34_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[subsector0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Subsector subsector0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Subsector,tableAlias=subsector0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Subsector}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'subsector0_.subsectorID' {propertyName=subsectorID,dereferenceType=PRIMITIVE,getPropertyPath=subsectorID,path=s.subsectorID,tableAlias=subsector0_,className=com.cmm.jft.trading.securities.Subsector,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'subsector0_.subsectorID' {alias=s, className=com.cmm.jft.trading.securities.Subsector, tableAlias=subsector0_}
          |  \-[IDENT] IdentNode: 'subsectorID' {originalText=subsectorID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=subsectorID, expectedType=org.hibernate.type.LongType@c540f5a}

  2015-06-09 20:24:43,266 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,266 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Subsector s WHERE s.subsectorID = :subsectorID
  2015-06-09 20:24:43,266 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select subsector0_.subsectorID as subsecto1_34_, subsector0_.sectorID as sectorID3_34_, subsector0_.SubsectorName as Subsecto2_34_ from Subsector subsector0_ where subsector0_.subsectorID=?
  2015-06-09 20:24:43,266 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,266 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Account.findByDescription
  2015-06-09 20:24:43,267 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.description = :description
  2015-06-09 20:24:43,270 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'description'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'description'

  2015-06-09 20:24:43,270 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,270 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,270 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Account (a) -> account0_
  2015-06-09 20:24:43,270 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:24:43,270 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:24:43,271 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : description -> org.hibernate.type.StringType@2890c451
  2015-06-09 20:24:43,271 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a.description -> account0_.Description
  2015-06-09 20:24:43,271 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,271 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} account0_.accountID ) ( FromClause{level=1} Account account0_ ) ( WHERE ( = ( account0_.Description account0_.accountID description ) ? ) ) )
  2015-06-09 20:24:43,271 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Account account0_]
  2015-06-09 20:24:43,271 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,271 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountID as accountI1_0_' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.cmm.jft.financial.Account}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.Description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=a.description,tableAlias=account0_,className=com.cmm.jft.financial.Account,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'account0_.accountID' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[NAMED_PARAM] ParameterNode: '?' {name=description, expectedType=org.hibernate.type.StringType@2890c451}

  2015-06-09 20:24:43,271 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,271 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.description = :description
  2015-06-09 20:24:43,271 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select account0_.accountID as accountI1_0_, account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_ from Account account0_ where account0_.Description=?
  2015-06-09 20:24:43,271 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,271 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: TaxSetup.findByTaxValue
  2015-06-09 20:24:43,272 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t WHERE t.taxValue = :taxValue
  2015-06-09 20:24:43,276 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'TaxSetup'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'taxValue'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'taxValue'

  2015-06-09 20:24:43,276 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,276 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,276 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.TaxSetup (t) -> taxsetup0_
  2015-06-09 20:24:43,276 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:24:43,276 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:24:43,276 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : taxValue -> org.hibernate.type.BigDecimalType@3bbc39f8
  2015-06-09 20:24:43,276 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t.taxValue -> taxsetup0_.TaxValue
  2015-06-09 20:24:43,276 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,276 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} taxsetup0_.taxSetupID ) ( FromClause{level=1} TaxSetup taxsetup0_ ) ( WHERE ( = ( taxsetup0_.TaxValue taxsetup0_.taxSetupID taxValue ) ? ) ) )
  2015-06-09 20:24:43,276 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [TaxSetup taxsetup0_]
  2015-06-09 20:24:43,276 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,277 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TaxSetup)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID as taxSetup1_36_' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
    |  \-[SQL_TOKEN] SqlFragment: 'taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[taxsetup0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'TaxSetup taxsetup0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=TaxSetup,tableAlias=taxsetup0_,origin=null,columns={,className=com.cmm.jft.financial.TaxSetup}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'taxsetup0_.TaxValue' {propertyName=taxValue,dereferenceType=PRIMITIVE,getPropertyPath=taxValue,path=t.taxValue,tableAlias=taxsetup0_,className=com.cmm.jft.financial.TaxSetup,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
          |  \-[IDENT] IdentNode: 'taxValue' {originalText=taxValue}
          \-[NAMED_PARAM] ParameterNode: '?' {name=taxValue, expectedType=org.hibernate.type.BigDecimalType@3bbc39f8}

  2015-06-09 20:24:43,277 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,277 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t WHERE t.taxValue = :taxValue
  2015-06-09 20:24:43,277 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select taxsetup0_.taxSetupID as taxSetup1_36_, taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_ from TaxSetup taxsetup0_ where taxsetup0_.TaxValue=?
  2015-06-09 20:24:43,277 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,278 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: MarketTrade.findByPrice
  2015-06-09 20:24:43,278 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m WHERE m.price = :price
  2015-06-09 20:24:43,281 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'marketdata'
    |  |     |  \-[IDENT] Node: 'MarketTrade'
    |  |     \-[ALIAS] Node: 'm'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'm'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'm'
          |  \-[IDENT] Node: 'price'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'price'

  2015-06-09 20:24:43,281 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,281 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,281 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.marketdata.MarketTrade (m) -> markettrad0_
  2015-06-09 20:24:43,283 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:24:43,283 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:24:43,283 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : price -> org.hibernate.type.BigDecimalType@3bbc39f8
  2015-06-09 20:24:43,283 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m.price -> markettrad0_.Price
  2015-06-09 20:24:43,283 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,283 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} markettrad0_.marketTradeID ) ( FromClause{level=1} MarketTrade markettrad0_ ) ( WHERE ( = ( markettrad0_.Price markettrad0_.marketTradeID price ) ? ) ) )
  2015-06-09 20:24:43,283 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [MarketTrade markettrad0_]
  2015-06-09 20:24:43,283 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,284 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (MarketTrade)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID as marketTr1_23_' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
    |  \-[SQL_TOKEN] SqlFragment: 'markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[m], fromElementByTableAlias=[markettrad0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'MarketTrade markettrad0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=MarketTrade,tableAlias=markettrad0_,origin=null,columns={,className=com.cmm.jft.trading.marketdata.MarketTrade}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'markettrad0_.Price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=m.price,tableAlias=markettrad0_,className=com.cmm.jft.trading.marketdata.MarketTrade,classAlias=m}
          |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
          |  \-[IDENT] IdentNode: 'price' {originalText=price}
          \-[NAMED_PARAM] ParameterNode: '?' {name=price, expectedType=org.hibernate.type.BigDecimalType@3bbc39f8}

  2015-06-09 20:24:43,284 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,284 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m WHERE m.price = :price
  2015-06-09 20:24:43,284 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select markettrad0_.marketTradeID as marketTr1_23_, markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_ from MarketTrade markettrad0_ where markettrad0_.Price=?
  2015-06-09 20:24:43,284 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,284 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Earning.findAll
  2015-06-09 20:24:43,285 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: select e from com.cmm.jft.trading.securities.Earning e
  2015-06-09 20:24:43,286 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Earning'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'e'

  2015-06-09 20:24:43,286 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,286 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,286 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Earning (e) -> earning0_
  2015-06-09 20:24:43,287 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> earning0_.earningID
  2015-06-09 20:24:43,287 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,287 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} earning0_.earningID ) ( FromClause{level=1} Earning earning0_ ) )
  2015-06-09 20:24:43,287 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Earning earning0_]
  2015-06-09 20:24:43,287 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,287 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Earning)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'earning0_.earningID as earningI1_13_' {alias=e, className=com.cmm.jft.trading.securities.Earning, tableAlias=earning0_}
    |  \-[SQL_TOKEN] SqlFragment: 'earning0_.EarningType as EarningT2_13_, earning0_.EarningValue as EarningV3_13_, earning0_.ExDate as ExDate4_13_, earning0_.ExPrice as ExPrice5_13_, earning0_.securityID as security6_13_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[earning0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Earning earning0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=Earning,tableAlias=earning0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Earning}}

  2015-06-09 20:24:43,287 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,287 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: select e from com.cmm.jft.trading.securities.Earning e
  2015-06-09 20:24:43,287 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select earning0_.earningID as earningI1_13_, earning0_.EarningType as EarningT2_13_, earning0_.EarningValue as EarningV3_13_, earning0_.ExDate as ExDate4_13_, earning0_.ExPrice as ExPrice5_13_, earning0_.securityID as security6_13_ from Earning earning0_
  2015-06-09 20:24:43,287 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,287 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Deposit.findByValue
  2015-06-09 20:24:43,287 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.Deposit d WHERE d.value = :value
  2015-06-09 20:24:43,291 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Deposit'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'value'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'value'

  2015-06-09 20:24:43,291 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,291 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:24:43,291 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Deposit (d) -> deposit0_
  2015-06-09 20:24:43,291 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:24:43,291 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:24:43,291 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : value -> org.hibernate.type.BigDecimalType@3bbc39f8
  2015-06-09 20:24:43,291 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d.value -> deposit0_.Value
  2015-06-09 20:24:43,291 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:24:43,291 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} deposit0_.depositID ) ( FromClause{level=1} Deposit deposit0_ ) ( WHERE ( = ( deposit0_.Value deposit0_.depositID value ) ? ) ) )
  2015-06-09 20:24:43,292 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Deposit deposit0_]
  2015-06-09 20:24:43,292 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:24:43,292 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Deposit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID as depositI1_11_' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[deposit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Deposit deposit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=Deposit,tableAlias=deposit0_,origin=null,columns={,className=com.cmm.jft.financial.Deposit}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'deposit0_.Value' {propertyName=value,dereferenceType=PRIMITIVE,getPropertyPath=value,path=d.value,tableAlias=deposit0_,className=com.cmm.jft.financial.Deposit,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
          |  \-[IDENT] IdentNode: 'value' {originalText=value}
          \-[NAMED_PARAM] ParameterNode: '?' {name=value, expectedType=org.hibernate.type.BigDecimalType@3bbc39f8}

  2015-06-09 20:24:43,292 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,292 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.Deposit d WHERE d.value = :value
  2015-06-09 20:24:43,292 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select deposit0_.depositID as depositI1_11_, deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_ from Deposit deposit0_ where deposit0_.Value=?
  2015-06-09 20:24:43,292 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:24:43,292 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking 0 named SQL queries
  2015-06-09 20:24:43,310 [main] (DEBUG) org.hibernate.stat.internal.StatisticsInitiator -> Statistics initialized [enabled=false]
  2015-06-09 20:24:48,260 [AWT-EventQueue-0] (DEBUG) org.hibernate.SQL -> select orders0_.orderID as orderID1_26_, orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_ from Orders orders0_
  2015-06-09 20:24:48,260 [AWT-EventQueue-0] (DEBUG) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl -> Obtaining JDBC connection
  2015-06-09 20:24:48,260 [AWT-EventQueue-0] (DEBUG) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl -> Obtained JDBC connection
  2015-06-09 20:28:54,996 [main] (DEBUG) org.jboss.logging -> Logging Provider: org.jboss.logging.Log4jLoggerProvider
  2015-06-09 20:28:55,048 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration boolean -> org.hibernate.type.BooleanType@6fdb1f78
  2015-06-09 20:28:55,048 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration boolean -> org.hibernate.type.BooleanType@6fdb1f78
  2015-06-09 20:28:55,049 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6fdb1f78
  2015-06-09 20:28:55,051 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fccd51b
  2015-06-09 20:28:55,053 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@768debd
  2015-06-09 20:28:55,055 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration yes_no -> org.hibernate.type.YesNoType@449b2d27
  2015-06-09 20:28:55,058 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration byte -> org.hibernate.type.ByteType@46f5f779
  2015-06-09 20:28:55,058 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration byte -> org.hibernate.type.ByteType@46f5f779
  2015-06-09 20:28:55,058 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@46f5f779
  2015-06-09 20:28:55,061 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration character -> org.hibernate.type.CharacterType@52d455b8
  2015-06-09 20:28:55,061 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration char -> org.hibernate.type.CharacterType@52d455b8
  2015-06-09 20:28:55,061 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52d455b8
  2015-06-09 20:28:55,064 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration short -> org.hibernate.type.ShortType@12bc6874
  2015-06-09 20:28:55,064 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration short -> org.hibernate.type.ShortType@12bc6874
  2015-06-09 20:28:55,064 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@12bc6874
  2015-06-09 20:28:55,066 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration integer -> org.hibernate.type.IntegerType@67117f44
  2015-06-09 20:28:55,067 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration int -> org.hibernate.type.IntegerType@67117f44
  2015-06-09 20:28:55,067 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@67117f44
  2015-06-09 20:28:55,070 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration long -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:28:55,070 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration long -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:28:55,072 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:28:55,079 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration float -> org.hibernate.type.FloatType@1bc6a36e
  2015-06-09 20:28:55,079 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration float -> org.hibernate.type.FloatType@1bc6a36e
  2015-06-09 20:28:55,079 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1bc6a36e
  2015-06-09 20:28:55,082 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration double -> org.hibernate.type.DoubleType@1c53fd30
  2015-06-09 20:28:55,082 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration double -> org.hibernate.type.DoubleType@1c53fd30
  2015-06-09 20:28:55,083 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c53fd30
  2015-06-09 20:28:55,089 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@21a06946
  2015-06-09 20:28:55,089 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@21a06946
  2015-06-09 20:28:55,092 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2cfb4a64
  2015-06-09 20:28:55,093 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2cfb4a64
  2015-06-09 20:28:55,095 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration string -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:28:55,095 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.lang.String -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:28:55,101 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration nstring -> org.hibernate.type.StringNVarcharType@63d4e2ba
  2015-06-09 20:28:55,105 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@47fd17e3
  2015-06-09 20:28:55,108 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration url -> org.hibernate.type.UrlType@6fffcba5
  2015-06-09 20:28:55,108 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@6fffcba5
  2015-06-09 20:28:55,113 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration date -> org.hibernate.type.DateType@6ea6d14e
  2015-06-09 20:28:55,113 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@6ea6d14e
  2015-06-09 20:28:55,117 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration time -> org.hibernate.type.TimeType@35851384
  2015-06-09 20:28:55,117 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@35851384
  2015-06-09 20:28:55,128 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration timestamp -> org.hibernate.type.TimestampType@d7b1517
  2015-06-09 20:28:55,129 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d7b1517
  2015-06-09 20:28:55,129 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d7b1517
  2015-06-09 20:28:55,132 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4ec6a292
  2015-06-09 20:28:55,139 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration calendar -> org.hibernate.type.CalendarType@71c7db30
  2015-06-09 20:28:55,140 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@71c7db30
  2015-06-09 20:28:55,140 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@71c7db30
  2015-06-09 20:28:55,141 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@11531931
  2015-06-09 20:28:55,147 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration locale -> org.hibernate.type.LocaleType@7cf10a6f
  2015-06-09 20:28:55,148 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7cf10a6f
  2015-06-09 20:28:55,149 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration currency -> org.hibernate.type.CurrencyType@3f0ee7cb
  2015-06-09 20:28:55,149 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3f0ee7cb
  2015-06-09 20:28:55,151 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a39699c
  2015-06-09 20:28:55,151 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a39699c
  2015-06-09 20:28:55,153 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration class -> org.hibernate.type.ClassType@129a8472
  2015-06-09 20:28:55,153 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@129a8472
  2015-06-09 20:28:55,156 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4c203ea1
  2015-06-09 20:28:55,156 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4c203ea1
  2015-06-09 20:28:55,157 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@48140564
  2015-06-09 20:28:55,158 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@43a25848
  2015-06-09 20:28:55,160 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration binary -> org.hibernate.type.BinaryType@6e8dacdf
  2015-06-09 20:28:55,160 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration byte[] -> org.hibernate.type.BinaryType@6e8dacdf
  2015-06-09 20:28:55,163 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration [B -> org.hibernate.type.BinaryType@6e8dacdf
  2015-06-09 20:28:55,167 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7f63425a
  2015-06-09 20:28:55,167 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7f63425a
  2015-06-09 20:28:55,167 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7f63425a
  2015-06-09 20:28:55,168 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration image -> org.hibernate.type.ImageType@30c7da1e
  2015-06-09 20:28:55,170 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration characters -> org.hibernate.type.CharArrayType@7e0ea639
  2015-06-09 20:28:55,171 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration char[] -> org.hibernate.type.CharArrayType@7e0ea639
  2015-06-09 20:28:55,171 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration [C -> org.hibernate.type.CharArrayType@7e0ea639
  2015-06-09 20:28:55,173 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17f6480
  2015-06-09 20:28:55,174 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17f6480
  2015-06-09 20:28:55,174 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17f6480
  2015-06-09 20:28:55,176 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration text -> org.hibernate.type.TextType@96532d6
  2015-06-09 20:28:55,178 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration ntext -> org.hibernate.type.NTextType@60f82f98
  2015-06-09 20:28:55,192 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration blob -> org.hibernate.type.BlobType@38082d64
  2015-06-09 20:28:55,192 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@38082d64
  2015-06-09 20:28:55,193 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26ba2a48
  2015-06-09 20:28:55,213 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration clob -> org.hibernate.type.ClobType@6be46e8f
  2015-06-09 20:28:55,213 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6be46e8f
  2015-06-09 20:28:55,220 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration nclob -> org.hibernate.type.NClobType@54a097cc
  2015-06-09 20:28:55,220 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@54a097cc
  2015-06-09 20:28:55,221 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3551a94
  2015-06-09 20:28:55,222 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@735b478
  2015-06-09 20:28:55,225 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration serializable -> org.hibernate.type.SerializableType@737996a0
  2015-06-09 20:28:55,230 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration object -> org.hibernate.type.ObjectType@7ca48474
  2015-06-09 20:28:55,230 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ca48474
  2015-06-09 20:28:55,231 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61a485d2
  2015-06-09 20:28:55,231 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@39fb3ab6
  2015-06-09 20:28:55,231 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6276ae34
  2015-06-09 20:28:55,231 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7946e1f4
  2015-06-09 20:28:55,231 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c09711b
  2015-06-09 20:28:55,231 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5cc7c2a6
  2015-06-09 20:28:55,231 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b97c004
  2015-06-09 20:28:55,231 [main] (DEBUG) org.hibernate.type.BasicTypeRegistry -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4590c9c3
  2015-06-09 20:28:55,259 [main] (INFO) org.hibernate.annotations.common.Version -> HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
  2015-06-09 20:28:55,270 [main] (INFO) org.hibernate.Version -> HHH000412: Hibernate Core {4.3.10.Final}
  2015-06-09 20:28:55,274 [main] (INFO) org.hibernate.cfg.Environment -> HHH000206: hibernate.properties not found
  2015-06-09 20:28:55,276 [main] (INFO) org.hibernate.cfg.Environment -> HHH000021: Bytecode provider name : javassist
  2015-06-09 20:28:55,307 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
  2015-06-09 20:28:55,307 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
  2015-06-09 20:28:55,308 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
  2015-06-09 20:28:55,309 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
  2015-06-09 20:28:55,311 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
  2015-06-09 20:28:55,312 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
  2015-06-09 20:28:55,313 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
  2015-06-09 20:28:55,314 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
  2015-06-09 20:28:55,315 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
  2015-06-09 20:28:55,315 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
  2015-06-09 20:28:55,316 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
  2015-06-09 20:28:55,317 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
  2015-06-09 20:28:55,318 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
  2015-06-09 20:28:55,319 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
  2015-06-09 20:28:55,320 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
  2015-06-09 20:28:55,331 [main] (INFO) org.hibernate.cfg.Configuration -> HHH000043: Configuring from resource: ./META-INF/hibernate.cfg.xml
  2015-06-09 20:28:55,331 [main] (INFO) org.hibernate.cfg.Configuration -> HHH000040: Configuration resource: ./META-INF/hibernate.cfg.xml
  2015-06-09 20:28:55,401 [main] (DEBUG) org.hibernate.internal.util.xml.DTDEntityResolver -> Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
  2015-06-09 20:28:55,401 [main] (DEBUG) org.hibernate.internal.util.xml.DTDEntityResolver -> Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
  2015-06-09 20:28:55,402 [main] (DEBUG) org.hibernate.internal.util.xml.DTDEntityResolver -> Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
  2015-06-09 20:28:55,447 [main] (DEBUG) org.hibernate.cfg.Configuration -> connection.driver_class=org.postgresql.Driver
  2015-06-09 20:28:55,447 [main] (DEBUG) org.hibernate.cfg.Configuration -> connection.url=jdbc:postgresql://localhost:5432/StockData
  2015-06-09 20:28:55,447 [main] (DEBUG) org.hibernate.cfg.Configuration -> connection.username=stockdata
  2015-06-09 20:28:55,447 [main] (DEBUG) org.hibernate.cfg.Configuration -> connection.password=287463
  2015-06-09 20:28:55,448 [main] (DEBUG) org.hibernate.cfg.Configuration -> connection.pool_size=1
  2015-06-09 20:28:55,448 [main] (DEBUG) org.hibernate.cfg.Configuration -> dialect=org.hibernate.dialect.PostgreSQLDialect
  2015-06-09 20:28:55,448 [main] (DEBUG) org.hibernate.cfg.Configuration -> current_session_context_class=thread
  2015-06-09 20:28:55,448 [main] (DEBUG) org.hibernate.cfg.Configuration -> hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
  2015-06-09 20:28:55,448 [main] (DEBUG) org.hibernate.cfg.Configuration -> hibernate.cache.use_second_level_cache=true
  2015-06-09 20:28:55,448 [main] (DEBUG) org.hibernate.cfg.Configuration -> hibernate.cache.use_query_cache=true
  2015-06-09 20:28:55,448 [main] (DEBUG) org.hibernate.cfg.Configuration -> show_sql=false
  2015-06-09 20:28:55,448 [main] (DEBUG) org.hibernate.cfg.Configuration -> hbm2ddl.auto=create-drop
  2015-06-09 20:28:55,455 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.core.Configuration] for mapping
  2015-06-09 20:28:55,472 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.financial.Account] for mapping
  2015-06-09 20:28:55,473 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.financial.CostCenter] for mapping
  2015-06-09 20:28:55,474 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.financial.Currency] for mapping
  2015-06-09 20:28:55,475 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.financial.CurrencyQuote] for mapping
  2015-06-09 20:28:55,476 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.financial.Deposit] for mapping
  2015-06-09 20:28:55,477 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.financial.DistributionRule] for mapping
  2015-06-09 20:28:55,478 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.financial.EntryRegister] for mapping
  2015-06-09 20:28:55,479 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.financial.JournalEntry] for mapping
  2015-06-09 20:28:55,480 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.financial.Rule] for mapping
  2015-06-09 20:28:55,487 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.financial.RuleFormula] for mapping
  2015-06-09 20:28:55,488 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.financial.Tax] for mapping
  2015-06-09 20:28:55,490 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.financial.TaxSetup] for mapping
  2015-06-09 20:28:55,491 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.db.DBObject] for mapping
  2015-06-09 20:28:55,491 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.account.Broker] for mapping
  2015-06-09 20:28:55,492 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.account.Brokerage] for mapping
  2015-06-09 20:28:55,493 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.account.Commission] for mapping
  2015-06-09 20:28:55,494 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.account.ExchangeTax] for mapping
  2015-06-09 20:28:55,495 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.OrderEvent] for mapping
  2015-06-09 20:28:55,498 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.OrderExecution] for mapping
  2015-06-09 20:28:55,499 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.Orders] for mapping
  2015-06-09 20:28:55,500 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.marketdata.HistoricalQuote] for mapping
  2015-06-09 20:28:55,501 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.marketdata.MarketEvent] for mapping
  2015-06-09 20:28:55,502 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.marketdata.MarketOrder] for mapping
  2015-06-09 20:28:55,503 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.marketdata.MarketTrade] for mapping
  2015-06-09 20:28:55,504 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.securities.Company] for mapping
  2015-06-09 20:28:55,505 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.securities.Country] for mapping
  2015-06-09 20:28:55,506 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.securities.Earning] for mapping
  2015-06-09 20:28:55,507 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.securities.StockExchange] for mapping
  2015-06-09 20:28:55,508 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.securities.Sector] for mapping
  2015-06-09 20:28:55,508 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.securities.Segment] for mapping
  2015-06-09 20:28:55,509 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.securities.Subsector] for mapping
  2015-06-09 20:28:55,510 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.securities.Isin] for mapping
  2015-06-09 20:28:55,511 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.securities.Index] for mapping
  2015-06-09 20:28:55,512 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.securities.IndexComposition] for mapping
  2015-06-09 20:28:55,513 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.securities.Security] for mapping
  2015-06-09 20:28:55,514 [main] (DEBUG) org.hibernate.cfg.Configuration -> Session-factory config [null] named class [com.cmm.jft.trading.securities.SecurityInfo] for mapping
  2015-06-09 20:28:55,515 [main] (INFO) org.hibernate.cfg.Configuration -> HHH000041: Configured SessionFactory: null
  2015-06-09 20:28:55,515 [main] (DEBUG) org.hibernate.cfg.Configuration -> Properties: {show_sql=false, java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:postgresql://localhost:5432/StockData, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create-drop, os.name=Windows 8, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_40\lib\resources.jar;C:\Program Files\Java\jre1.8.0_40\lib\rt.jar;C:\Program Files\Java\jre1.8.0_40\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_40\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_40\lib\jce.jar;C:\Program Files\Java\jre1.8.0_40\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_40\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_40\classes, user.country.format=BR, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_40-b26, user.name=Cristiano, user.language.format=pt, connection.driver_class=org.postgresql.Driver, current_session_context_class=thread, user.language=en, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_40\bin, dialect=org.hibernate.dialect.PostgreSQLDialect, java.version=1.8.0_40, user.timezone=America/Sao_Paulo, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_40\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=US, connection.url=jdbc:postgresql://localhost:5432/StockData, java.home=C:\Program Files\Java\jre1.8.0_40, java.vm.info=mixed mode, os.version=6.2, path.separator=;, connection.password=287463, java.vm.version=25.40-b25, hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory, hibernate.connection.password=287463, user.variant=, sun.awt.enableExtraMouseButtons=true, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=stockdata, user.script=, user.home=C:\Users\Cristiano, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=create-drop, java.library.path=C:\Program Files\Java\jre1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_40/bin/server;C:/Program Files/Java/jre1.8.0_40/bin;C:/Program Files/Java/jre1.8.0_40/lib/amd64;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.0\bin;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.0\libnvvp;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Programs\Oracle\orcluser\product\12.1.0\dbhome_3\bin;C:\Programs\Python27\;C:\Programs\Python27\Scripts;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_40\bin;C:\Program Files (x86)\Common Files\Roxio Shared\DLLShared\;C:\Program Files\MiKTeX 2.9\miktex\bin\x64\;C:\Program Files (x86)\MiKTeX 2.9\miktex\bin\;C:\Programs\apache-ant\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Programs\IDE\eclipse-jee-luna;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=org.postgresql.Driver, connection.username=stockdata, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=com.cmm.jft_ui.Main, java.class.path=C:\Disco\Workspaces\JFT\jft_modules\ui\target\classes;C:\Disco\Workspaces\JFT\jft_modules\lib\searchbox\SearchBox.jar;C:\Disco\Workspaces\JFT\jft_modules\lib\jcalendar\jcalendar-1.4.jar;C:\Disco\Workspaces\JFT\jft_modules\lib\jdbc\postgresql-9.0-801.jdbc4.jar;C:\Users\Cristiano\.m2\repository\com\toedter\jcalendar\1.4\jcalendar-1.4.jar;C:\Users\Cristiano\.m2\repository\unknown\binary\SearchBox\SNAPSHOT\SearchBox-SNAPSHOT.jar;C:\Disco\Workspaces\JFT\jft_modules\db\target\classes;C:\Disco\Workspaces\JFT\jft_modules\logging\target\classes;C:\Users\Cristiano\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Cristiano\.m2\repository\org\hibernate\hibernate-core\4.3.10.Final\hibernate-core-4.3.10.Final.jar;C:\Users\Cristiano\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\Cristiano\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\Cristiano\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\Cristiano\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cristiano\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cristiano\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\Cristiano\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Cristiano\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\Cristiano\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cristiano\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\Cristiano\.m2\repository\org\hibernate\hibernate-ehcache\4.3.10.Final\hibernate-ehcache-4.3.10.Final.jar;C:\Users\Cristiano\.m2\repository\net\sf\ehcache\ehcache-core\2.4.3\ehcache-core-2.4.3.jar;C:\Users\Cristiano\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Disco\Workspaces\JFT\jft_modules\core\target\classes;C:\Users\Cristiano\.m2\repository\bsh\bsh\1.3.0\bsh-1.3.0.jar;C:\Disco\Workspaces\JFT\jft_modules\jft_model\target\classes;C:\Disco\Workspaces\JFT\jft_modules\lib\quickfixj\mina-core-1.1.7.jar;C:\Disco\Workspaces\JFT\jft_modules\lib\quickfixj\quickfixj-all-1.5.3.jar;C:\Disco\Workspaces\JFT\jft_modules\lib\quickfixj\quickfixj-core-1.5.3.jar;C:\Disco\Workspaces\JFT\jft_modules\lib\quickfixj\quickfixj-examples-1.5.3.jar;C:\Disco\Workspaces\JFT\jft_modules\data\target\classes;C:\Disco\Workspaces\JFT\jft_modules\lib\ftp4j\ftp4j-1.7.2.jar;C:\Disco\Workspaces\JFT\jft_modules\lib\jdde\pretty-tools-JDDE-2.0.1.jar;C:\Disco\Workspaces\JFT\jft_modules\lib\jxl\jxl.jar;C:\Disco\Workspaces\JFT\jft_modules\lib\jsoup\jsoup-1.8.1.jar;C:\Users\Cristiano\.m2\repository\org\apache\pdfbox\pdfbox-ant\1.8.9\pdfbox-ant-1.8.9.jar;C:\Users\Cristiano\.m2\repository\org\apache\pdfbox\pdfbox\1.8.9\pdfbox-1.8.9.jar;C:\Users\Cristiano\.m2\repository\org\apache\pdfbox\fontbox\1.8.9\fontbox-1.8.9.jar;C:\Users\Cristiano\.m2\repository\org\apache\pdfbox\jempbox\1.8.9\jempbox-1.8.9.jar;C:\Users\Cristiano\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cristiano\.m2\repository\org\apache\ant\ant\1.8.1\ant-1.8.1.jar;C:\Users\Cristiano\.m2\repository\org\apache\ant\ant-launcher\1.8.1\ant-launcher-1.8.1.jar;C:\Users\Cristiano\.m2\repository\com\sun\mail\javax.mail\1.5.3\javax.mail-1.5.3.jar;C:\Users\Cristiano\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, hibernate.cache.use_query_cache=true, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=1, java.io.tmpdir=C:\Users\CRISTI~1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jre1.8.0_40\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Disco\Workspaces\JFT\jft_modules\ui, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.cache.use_second_level_cache=true, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=false, hibernate.connection.pool_size=1}
  2015-06-09 20:28:55,535 [main] (DEBUG) org.hibernate.integrator.internal.IntegratorServiceImpl -> Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
  2015-06-09 20:28:55,539 [main] (DEBUG) org.hibernate.integrator.internal.IntegratorServiceImpl -> Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
  2015-06-09 20:28:55,541 [main] (DEBUG) org.hibernate.integrator.internal.IntegratorServiceImpl -> Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
  2015-06-09 20:28:55,572 [main] (DEBUG) org.hibernate.boot.registry.selector.internal.StrategySelectorImpl -> Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
  2015-06-09 20:28:55,572 [main] (DEBUG) org.hibernate.boot.registry.selector.internal.StrategySelectorImpl -> Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
  2015-06-09 20:28:55,679 [main] (DEBUG) org.hibernate.service.spi.ServiceBinding -> Overriding existing service binding [org.hibernate.secure.spi.JaccService]
  2015-06-09 20:28:55,679 [main] (DEBUG) org.hibernate.cfg.Configuration -> Preparing to build session factory with filters : {}
  2015-06-09 20:28:55,696 [main] (WARN) org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl -> HHH000402: Using Hibernate built-in connection pool (not for production use!)
  2015-06-09 20:28:55,708 [main] (INFO) org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl -> HHH000401: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/StockData]
  2015-06-09 20:28:55,708 [main] (INFO) org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl -> HHH000046: Connection properties: {user=stockdata, password=287463}
  2015-06-09 20:28:55,708 [main] (INFO) org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl -> HHH000006: Autocommit mode: false
  2015-06-09 20:28:55,711 [main] (INFO) org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl -> HHH000115: Hibernate connection pool size: 1 (min=1)
  2015-06-09 20:28:55,711 [main] (DEBUG) org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl -> Initializing Connection pool with 1 Connections
  2015-06-09 20:28:55,836 [main] (DEBUG) org.hibernate.engine.jdbc.internal.JdbcServicesImpl -> Database ->
       name : PostgreSQL
    version : 9.4.1
      major : 9
      minor : 4
  2015-06-09 20:28:55,836 [main] (DEBUG) org.hibernate.engine.jdbc.internal.JdbcServicesImpl -> Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.0 JDBC4 (build 801)
      major : 9
      minor : 0
  2015-06-09 20:28:55,836 [main] (DEBUG) org.hibernate.engine.jdbc.internal.JdbcServicesImpl -> JDBC version : 4.0
  2015-06-09 20:28:55,840 [main] (DEBUG) org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport -> Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
  2015-06-09 20:28:56,139 [main] (INFO) org.hibernate.dialect.Dialect -> HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
  2015-06-09 20:28:56,163 [main] (INFO) org.hibernate.engine.jdbc.internal.LobCreatorBuilder -> HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
  2015-06-09 20:28:56,263 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing hbm.xml files
  2015-06-09 20:28:56,263 [main] (DEBUG) org.hibernate.cfg.Configuration -> Process annotated classes
  2015-06-09 20:28:56,271 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.core.Configuration
  2015-06-09 20:28:56,308 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,310 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,321 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Configuration
  2015-06-09 20:28:56,326 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.core.Configuration on table Configuration
  2015-06-09 20:28:56,375 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Configuration), mappingColumn=configurationID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,381 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property configurationID with lazy=false
  2015-06-09 20:28:56,383 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.core.Configuration:configurationID]
  2015-06-09 20:28:56,385 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for configurationID
  2015-06-09 20:28:56,387 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property configurationID
  2015-06-09 20:28:56,401 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Configuration), mappingColumn=properties, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,402 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property properties with lazy=false
  2015-06-09 20:28:56,403 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.core.Configuration:properties]
  2015-06-09 20:28:56,403 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for properties
  2015-06-09 20:28:56,403 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property properties
  2015-06-09 20:28:56,405 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.financial.Account
  2015-06-09 20:28:56,411 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Account.findAll => SELECT a FROM Account a
  2015-06-09 20:28:56,411 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Account.findByAccountID => SELECT a FROM Account a WHERE a.accountID = :accountID
  2015-06-09 20:28:56,411 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Account.findByAccName => SELECT a FROM Account a WHERE a.accName = :accName
  2015-06-09 20:28:56,411 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Account.findByDescription => SELECT a FROM Account a WHERE a.description = :description
  2015-06-09 20:28:56,411 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Account.findByBalance => SELECT a FROM Account a WHERE a.balance = :balance
  2015-06-09 20:28:56,411 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Account.findByOpen => SELECT a FROM Account a WHERE a.open = :open
  2015-06-09 20:28:56,412 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,412 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Account
  2015-06-09 20:28:56,412 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.financial.Account on table Account
  2015-06-09 20:28:56,447 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,448 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property accountID with lazy=false
  2015-06-09 20:28:56,448 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Account:accountID]
  2015-06-09 20:28:56,448 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for accountID
  2015-06-09 20:28:56,449 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property accountID
  2015-06-09 20:28:56,449 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=AccName, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,451 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property accName with lazy=false
  2015-06-09 20:28:56,451 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Account:accName]
  2015-06-09 20:28:56,451 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for accName
  2015-06-09 20:28:56,451 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property accName
  2015-06-09 20:28:56,452 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=AccountCategory, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,452 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property accountCategory with lazy=false
  2015-06-09 20:28:56,452 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Account:accountCategory]
  2015-06-09 20:28:56,455 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for accountCategory
  2015-06-09 20:28:56,456 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property accountCategory
  2015-06-09 20:28:56,456 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=AccountType, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,456 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property accountType with lazy=false
  2015-06-09 20:28:56,456 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Account:accountType]
  2015-06-09 20:28:56,456 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for accountType
  2015-06-09 20:28:56,456 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property accountType
  2015-06-09 20:28:56,457 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=Balance, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,457 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property balance with lazy=false
  2015-06-09 20:28:56,457 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Account:balance]
  2015-06-09 20:28:56,457 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for balance
  2015-06-09 20:28:56,457 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property balance
  2015-06-09 20:28:56,458 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='fatherAccountID'}
  2015-06-09 20:28:56,458 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=childAccounts, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,461 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,474 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,475 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=childAccounts_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,476 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='childAccounts_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,478 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='fatherAccountID'}
  2015-06-09 20:28:56,478 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='fatherAccountID'}
  2015-06-09 20:28:56,479 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.financial.Account.childAccounts
  2015-06-09 20:28:56,482 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property childAccounts
  2015-06-09 20:28:56,486 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=CreditLimit, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,486 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property creditLimit with lazy=false
  2015-06-09 20:28:56,486 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Account:creditLimit]
  2015-06-09 20:28:56,487 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for creditLimit
  2015-06-09 20:28:56,487 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property creditLimit
  2015-06-09 20:28:56,487 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='currencyID', referencedColumn='currencyID', mappedBy=''}
  2015-06-09 20:28:56,487 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=currencyID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,490 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property currencyID
  2015-06-09 20:28:56,491 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='depositAccount'}
  2015-06-09 20:28:56,491 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=depositSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,491 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,492 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,493 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=depositSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,493 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='depositSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,493 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='depositAccount'}
  2015-06-09 20:28:56,493 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='depositAccount'}
  2015-06-09 20:28:56,493 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.financial.Account.depositSet
  2015-06-09 20:28:56,493 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property depositSet
  2015-06-09 20:28:56,493 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=Description, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,493 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property description with lazy=false
  2015-06-09 20:28:56,493 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Account:description]
  2015-06-09 20:28:56,494 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for description
  2015-06-09 20:28:56,494 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property description
  2015-06-09 20:28:56,495 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='creditAccountID'}
  2015-06-09 20:28:56,495 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=entryRegisterCrdtSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,495 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,495 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,495 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=entryRegisterCrdtSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,495 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='entryRegisterCrdtSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,495 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='creditAccountID'}
  2015-06-09 20:28:56,495 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='creditAccountID'}
  2015-06-09 20:28:56,495 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.financial.Account.entryRegisterCrdtSet
  2015-06-09 20:28:56,495 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property entryRegisterCrdtSet
  2015-06-09 20:28:56,498 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='debitAccountID'}
  2015-06-09 20:28:56,498 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=entryRegisterDbtSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,498 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,499 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,499 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=entryRegisterDbtSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,499 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='entryRegisterDbtSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,499 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='debitAccountID'}
  2015-06-09 20:28:56,499 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='debitAccountID'}
  2015-06-09 20:28:56,499 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.financial.Account.entryRegisterDbtSet
  2015-06-09 20:28:56,499 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property entryRegisterDbtSet
  2015-06-09 20:28:56,499 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='fatherAccountID', referencedColumn='accountID', mappedBy=''}
  2015-06-09 20:28:56,500 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=fatherAccountID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,500 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property fatherAccountID
  2015-06-09 20:28:56,500 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=Open, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,500 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property open with lazy=false
  2015-06-09 20:28:56,500 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Account:open]
  2015-06-09 20:28:56,500 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for open
  2015-06-09 20:28:56,500 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property open
  2015-06-09 20:28:56,500 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='creditAccountID'}
  2015-06-09 20:28:56,500 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=ruleCrdtAccSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,500 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,509 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,509 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=ruleCrdtAccSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,509 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='ruleCrdtAccSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,509 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='creditAccountID'}
  2015-06-09 20:28:56,509 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='creditAccountID'}
  2015-06-09 20:28:56,509 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.financial.Account.ruleCrdtAccSet
  2015-06-09 20:28:56,509 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property ruleCrdtAccSet
  2015-06-09 20:28:56,509 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='debitAccountID'}
  2015-06-09 20:28:56,509 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=ruleDbtAccSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,509 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,510 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,510 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=ruleDbtAccSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,510 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='ruleDbtAccSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,510 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='debitAccountID'}
  2015-06-09 20:28:56,510 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='debitAccountID'}
  2015-06-09 20:28:56,510 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.financial.Account.ruleDbtAccSet
  2015-06-09 20:28:56,510 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property ruleDbtAccSet
  2015-06-09 20:28:56,511 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.financial.CostCenter
  2015-06-09 20:28:56,511 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,511 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,511 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name CostCenter
  2015-06-09 20:28:56,511 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.financial.CostCenter on table CostCenter
  2015-06-09 20:28:56,512 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CostCenter), mappingColumn=costCenterID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,512 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property costCenterID with lazy=false
  2015-06-09 20:28:56,512 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.CostCenter:costCenterID]
  2015-06-09 20:28:56,512 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for costCenterID
  2015-06-09 20:28:56,513 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property costCenterID
  2015-06-09 20:28:56,513 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CostCenter), mappingColumn=Name, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,513 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property name with lazy=false
  2015-06-09 20:28:56,513 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.CostCenter:name]
  2015-06-09 20:28:56,513 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for name
  2015-06-09 20:28:56,513 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property name
  2015-06-09 20:28:56,513 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.financial.Currency
  2015-06-09 20:28:56,514 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Currency.findAll => SELECT c FROM Currency c
  2015-06-09 20:28:56,514 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Currency.findByCurrencyID => SELECT c FROM Currency c WHERE c.currencyID = :currencyID
  2015-06-09 20:28:56,514 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Currency.findByCurrSymbol => SELECT c FROM Currency c WHERE c.currSymbol = :currSymbol
  2015-06-09 20:28:56,514 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Currency.findByDescription => SELECT c FROM Currency c WHERE c.description = :description
  2015-06-09 20:28:56,514 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,514 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,515 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Currency
  2015-06-09 20:28:56,515 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.financial.Currency on table Currency
  2015-06-09 20:28:56,521 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=currencyID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,522 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property currencyID with lazy=false
  2015-06-09 20:28:56,522 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Currency:currencyID]
  2015-06-09 20:28:56,522 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for currencyID
  2015-06-09 20:28:56,522 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property currencyID
  2015-06-09 20:28:56,523 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='currencyID'}
  2015-06-09 20:28:56,523 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=accountSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,523 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,523 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,523 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=accountSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,523 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='accountSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,523 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='currencyID'}
  2015-06-09 20:28:56,523 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='currencyID'}
  2015-06-09 20:28:56,523 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.financial.Currency.accountSet
  2015-06-09 20:28:56,523 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property accountSet
  2015-06-09 20:28:56,524 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=CurrSymbol, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,524 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property currSymbol with lazy=false
  2015-06-09 20:28:56,524 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Currency:currSymbol]
  2015-06-09 20:28:56,524 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for currSymbol
  2015-06-09 20:28:56,524 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property currSymbol
  2015-06-09 20:28:56,524 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='currencyID'}
  2015-06-09 20:28:56,524 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=currencyQuoteSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,524 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,524 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,524 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=currencyQuoteSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,524 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='currencyQuoteSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,524 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='currencyID'}
  2015-06-09 20:28:56,524 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='currencyID'}
  2015-06-09 20:28:56,525 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.financial.Currency.currencyQuoteSet
  2015-06-09 20:28:56,525 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property currencyQuoteSet
  2015-06-09 20:28:56,525 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=Description, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,525 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property description with lazy=false
  2015-06-09 20:28:56,525 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Currency:description]
  2015-06-09 20:28:56,525 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for description
  2015-06-09 20:28:56,525 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property description
  2015-06-09 20:28:56,525 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='currencyID'}
  2015-06-09 20:28:56,525 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=entryRegisterSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,525 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,525 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,525 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=entryRegisterSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,526 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='entryRegisterSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,526 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='currencyID'}
  2015-06-09 20:28:56,526 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='currencyID'}
  2015-06-09 20:28:56,526 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.financial.Currency.entryRegisterSet
  2015-06-09 20:28:56,526 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property entryRegisterSet
  2015-06-09 20:28:56,526 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=FractionalUnit, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,526 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property fractionalUnit with lazy=false
  2015-06-09 20:28:56,526 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Currency:fractionalUnit]
  2015-06-09 20:28:56,526 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for fractionalUnit
  2015-06-09 20:28:56,526 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property fractionalUnit
  2015-06-09 20:28:56,526 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='currencyID'}
  2015-06-09 20:28:56,526 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=securityInfoList, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,527 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,527 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,527 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=securityInfoList_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,527 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='securityInfoList_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,527 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='currencyID'}
  2015-06-09 20:28:56,527 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='currencyID'}
  2015-06-09 20:28:56,527 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.financial.Currency.securityInfoList
  2015-06-09 20:28:56,527 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property securityInfoList
  2015-06-09 20:28:56,527 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Currency), mappingColumn=Sign, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,527 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property sign with lazy=false
  2015-06-09 20:28:56,527 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Currency:sign]
  2015-06-09 20:28:56,527 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for sign
  2015-06-09 20:28:56,527 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property sign
  2015-06-09 20:28:56,528 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.financial.CurrencyQuote
  2015-06-09 20:28:56,528 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: CurrencyQuote.findAll => SELECT c FROM CurrencyQuote c
  2015-06-09 20:28:56,528 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: CurrencyQuote.findByCurrencyQuoteID => SELECT c FROM CurrencyQuote c WHERE c.currencyQuoteID = :currencyQuoteID
  2015-06-09 20:28:56,530 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: CurrencyQuote.findByQDateTime => SELECT c FROM CurrencyQuote c WHERE c.qDateTime = :qDateTime
  2015-06-09 20:28:56,530 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: CurrencyQuote.findByValue => SELECT c FROM CurrencyQuote c WHERE c.value = :value
  2015-06-09 20:28:56,531 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,531 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,531 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name CurrencyQuote
  2015-06-09 20:28:56,531 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.financial.CurrencyQuote on table CurrencyQuote
  2015-06-09 20:28:56,540 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CurrencyQuote), mappingColumn=currencyQuoteID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,541 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property currencyQuoteID with lazy=false
  2015-06-09 20:28:56,541 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.CurrencyQuote:currencyQuoteID]
  2015-06-09 20:28:56,541 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for currencyQuoteID
  2015-06-09 20:28:56,541 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property currencyQuoteID
  2015-06-09 20:28:56,541 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='currencyID', referencedColumn='currencyID', mappedBy=''}
  2015-06-09 20:28:56,542 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CurrencyQuote), mappingColumn=currencyID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,542 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property currencyID
  2015-06-09 20:28:56,542 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CurrencyQuote), mappingColumn=QDateTime, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,542 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property qDateTime with lazy=false
  2015-06-09 20:28:56,542 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.CurrencyQuote:qDateTime]
  2015-06-09 20:28:56,543 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for qDateTime
  2015-06-09 20:28:56,543 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property qDateTime
  2015-06-09 20:28:56,543 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CurrencyQuote), mappingColumn=Value, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,544 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property value with lazy=false
  2015-06-09 20:28:56,544 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.CurrencyQuote:value]
  2015-06-09 20:28:56,544 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for value
  2015-06-09 20:28:56,544 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property value
  2015-06-09 20:28:56,544 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.financial.Deposit
  2015-06-09 20:28:56,544 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Deposit.findAll => SELECT d FROM Deposit d
  2015-06-09 20:28:56,544 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Deposit.findByDepositID => SELECT d FROM Deposit d WHERE d.depositID = :depositID
  2015-06-09 20:28:56,544 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Deposit.findByDepositDate => SELECT d FROM Deposit d WHERE d.depositDate = :depositDate
  2015-06-09 20:28:56,544 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Deposit.findByValue => SELECT d FROM Deposit d WHERE d.value = :value
  2015-06-09 20:28:56,545 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Deposit.findByDescription => SELECT d FROM Deposit d WHERE d.description = :description
  2015-06-09 20:28:56,545 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,545 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Deposit
  2015-06-09 20:28:56,545 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.financial.Deposit on table Deposit
  2015-06-09 20:28:56,551 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Deposit), mappingColumn=depositID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,551 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property depositID with lazy=false
  2015-06-09 20:28:56,551 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Deposit:depositID]
  2015-06-09 20:28:56,551 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for depositID
  2015-06-09 20:28:56,551 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property depositID
  2015-06-09 20:28:56,552 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='DepositAccount', referencedColumn='accountID', mappedBy=''}
  2015-06-09 20:28:56,552 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Deposit), mappingColumn=depositAccount, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,573 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property depositAccount
  2015-06-09 20:28:56,573 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Deposit), mappingColumn=DepositDate, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,573 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property depositDate with lazy=false
  2015-06-09 20:28:56,573 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Deposit:depositDate]
  2015-06-09 20:28:56,575 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for depositDate
  2015-06-09 20:28:56,576 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property depositDate
  2015-06-09 20:28:56,576 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Deposit), mappingColumn=Description, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,576 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property description with lazy=false
  2015-06-09 20:28:56,576 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Deposit:description]
  2015-06-09 20:28:56,576 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for description
  2015-06-09 20:28:56,576 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property description
  2015-06-09 20:28:56,576 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Deposit), mappingColumn=Value, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,577 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property value with lazy=false
  2015-06-09 20:28:56,577 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Deposit:value]
  2015-06-09 20:28:56,577 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for value
  2015-06-09 20:28:56,577 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property value
  2015-06-09 20:28:56,577 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.financial.DistributionRule
  2015-06-09 20:28:56,577 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: DistributionRule.findAll => SELECT d FROM DistributionRule d
  2015-06-09 20:28:56,577 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: DistributionRule.findByDistributionRuleID => SELECT d FROM DistributionRule d WHERE d.distributionRuleID = :distributionRuleID
  2015-06-09 20:28:56,577 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: DistributionRule.findByRuleName => SELECT d FROM DistributionRule d WHERE d.ruleName = :ruleName
  2015-06-09 20:28:56,577 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: DistributionRule.findByObjectRule => SELECT d FROM DistributionRule d WHERE d.objectRule = :objectRule
  2015-06-09 20:28:56,577 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,577 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name DistributionRule
  2015-06-09 20:28:56,577 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.financial.DistributionRule on table DistributionRule
  2015-06-09 20:28:56,583 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DistributionRule), mappingColumn=distributionRuleID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,583 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property distributionRuleID with lazy=false
  2015-06-09 20:28:56,583 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.DistributionRule:distributionRuleID]
  2015-06-09 20:28:56,583 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for distributionRuleID
  2015-06-09 20:28:56,583 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property distributionRuleID
  2015-06-09 20:28:56,583 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DistributionRule), mappingColumn=ObjectRule, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,584 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property objectRule with lazy=false
  2015-06-09 20:28:56,584 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.DistributionRule:objectRule]
  2015-06-09 20:28:56,584 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for objectRule
  2015-06-09 20:28:56,584 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property objectRule
  2015-06-09 20:28:56,584 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DistributionRule), mappingColumn=RuleName, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,584 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property ruleName with lazy=false
  2015-06-09 20:28:56,584 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.DistributionRule:ruleName]
  2015-06-09 20:28:56,584 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for ruleName
  2015-06-09 20:28:56,584 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property ruleName
  2015-06-09 20:28:56,584 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='distributionRuleID'}
  2015-06-09 20:28:56,584 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DistributionRule), mappingColumn=ruleSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,584 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DistributionRule), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,585 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DistributionRule), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,585 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DistributionRule), mappingColumn=ruleSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,585 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='ruleSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,585 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='distributionRuleID'}
  2015-06-09 20:28:56,585 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='distributionRuleID'}
  2015-06-09 20:28:56,585 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.financial.DistributionRule.ruleSet
  2015-06-09 20:28:56,585 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property ruleSet
  2015-06-09 20:28:56,585 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.financial.EntryRegister
  2015-06-09 20:28:56,585 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: EntryRegister.findAll => SELECT e FROM EntryRegister e
  2015-06-09 20:28:56,585 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: EntryRegister.findByEntryRegisterID => SELECT e FROM EntryRegister e WHERE e.entryRegisterID = :entryRegisterID
  2015-06-09 20:28:56,585 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: EntryRegister.findByEntryType => SELECT e FROM EntryRegister e WHERE e.entryType = :entryType
  2015-06-09 20:28:56,585 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: EntryRegister.findByCredit => SELECT e FROM EntryRegister e WHERE e.credit = :credit
  2015-06-09 20:28:56,585 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: EntryRegister.findByDebit => SELECT e FROM EntryRegister e WHERE e.debit = :debit
  2015-06-09 20:28:56,585 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: EntryRegister.findByDescription => SELECT e FROM EntryRegister e WHERE e.description = :description
  2015-06-09 20:28:56,595 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: EntryRegister.findByOperationID => SELECT e FROM EntryRegister e WHERE e.operationID = :operationID
  2015-06-09 20:28:56,595 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,596 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name EntryRegister
  2015-06-09 20:28:56,596 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.financial.EntryRegister on table EntryRegister
  2015-06-09 20:28:56,600 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntryRegister), mappingColumn=entryRegisterID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,601 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property entryRegisterID with lazy=false
  2015-06-09 20:28:56,601 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.EntryRegister:entryRegisterID]
  2015-06-09 20:28:56,601 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for entryRegisterID
  2015-06-09 20:28:56,601 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property entryRegisterID
  2015-06-09 20:28:56,601 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntryRegister), mappingColumn=Credit, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,601 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property credit with lazy=false
  2015-06-09 20:28:56,601 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.EntryRegister:credit]
  2015-06-09 20:28:56,601 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for credit
  2015-06-09 20:28:56,601 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property credit
  2015-06-09 20:28:56,601 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='creditAccountID', referencedColumn='accountID', mappedBy=''}
  2015-06-09 20:28:56,601 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntryRegister), mappingColumn=creditAccountID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,602 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property creditAccountID
  2015-06-09 20:28:56,602 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='currencyID', referencedColumn='currencyID', mappedBy=''}
  2015-06-09 20:28:56,602 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntryRegister), mappingColumn=currencyID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,602 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property currencyID
  2015-06-09 20:28:56,602 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntryRegister), mappingColumn=Debit, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,602 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property debit with lazy=false
  2015-06-09 20:28:56,602 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.EntryRegister:debit]
  2015-06-09 20:28:56,602 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for debit
  2015-06-09 20:28:56,602 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property debit
  2015-06-09 20:28:56,602 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='debitAccountID', referencedColumn='accountID', mappedBy=''}
  2015-06-09 20:28:56,602 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntryRegister), mappingColumn=debitAccountID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,603 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property debitAccountID
  2015-06-09 20:28:56,603 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntryRegister), mappingColumn=Description, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,604 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property description with lazy=false
  2015-06-09 20:28:56,604 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.EntryRegister:description]
  2015-06-09 20:28:56,604 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for description
  2015-06-09 20:28:56,604 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property description
  2015-06-09 20:28:56,604 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='entryID', referencedColumn='entryID', mappedBy=''}
  2015-06-09 20:28:56,606 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntryRegister), mappingColumn=entryID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,606 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property entryID
  2015-06-09 20:28:56,607 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntryRegister), mappingColumn=EntryType, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,607 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property entryType with lazy=false
  2015-06-09 20:28:56,608 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.EntryRegister:entryType]
  2015-06-09 20:28:56,608 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for entryType
  2015-06-09 20:28:56,608 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property entryType
  2015-06-09 20:28:56,609 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EntryRegister), mappingColumn=OperationID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,609 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property operationID with lazy=false
  2015-06-09 20:28:56,609 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.EntryRegister:operationID]
  2015-06-09 20:28:56,609 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for operationID
  2015-06-09 20:28:56,609 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property operationID
  2015-06-09 20:28:56,609 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.financial.JournalEntry
  2015-06-09 20:28:56,609 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: JournalEntry.findAll => SELECT e FROM JournalEntry e
  2015-06-09 20:28:56,609 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: JournalEntry.findByEntryID => SELECT e FROM JournalEntry e WHERE e.entryID = :entryID
  2015-06-09 20:28:56,609 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: JournalEntry.findByEntryDate => SELECT e FROM JournalEntry e WHERE e.entryDate = :entryDate
  2015-06-09 20:28:56,609 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: JournalEntry.findByEntryClose => SELECT e FROM JournalEntry e WHERE e.entryClose = :entryClose
  2015-06-09 20:28:56,609 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: JournalEntry.findByDescription => SELECT e FROM JournalEntry e WHERE e.description = :description
  2015-06-09 20:28:56,609 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: JournalEntry.findByEntryStatus => SELECT e FROM JournalEntry e WHERE e.journalStatus = :journalStatus
  2015-06-09 20:28:56,609 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,609 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name JournalEntry
  2015-06-09 20:28:56,610 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.financial.JournalEntry on table JournalEntry
  2015-06-09 20:28:56,613 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(JournalEntry), mappingColumn=entryID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,613 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property entryID with lazy=false
  2015-06-09 20:28:56,613 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.JournalEntry:entryID]
  2015-06-09 20:28:56,613 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for entryID
  2015-06-09 20:28:56,613 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property entryID
  2015-06-09 20:28:56,613 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(JournalEntry), mappingColumn=Description, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,613 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property description with lazy=false
  2015-06-09 20:28:56,613 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.JournalEntry:description]
  2015-06-09 20:28:56,613 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for description
  2015-06-09 20:28:56,613 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property description
  2015-06-09 20:28:56,613 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(JournalEntry), mappingColumn=EntryClose, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,613 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property entryClose with lazy=false
  2015-06-09 20:28:56,614 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.JournalEntry:entryClose]
  2015-06-09 20:28:56,614 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for entryClose
  2015-06-09 20:28:56,614 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property entryClose
  2015-06-09 20:28:56,614 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(JournalEntry), mappingColumn=EntryDate, insertable=true, updatable=false, unique=false}
  2015-06-09 20:28:56,614 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property entryDate with lazy=false
  2015-06-09 20:28:56,614 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.JournalEntry:entryDate]
  2015-06-09 20:28:56,614 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for entryDate
  2015-06-09 20:28:56,614 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property entryDate
  2015-06-09 20:28:56,614 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entryID'}
  2015-06-09 20:28:56,614 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(JournalEntry), mappingColumn=entryRegisterSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,614 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(JournalEntry), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,614 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(JournalEntry), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,614 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(JournalEntry), mappingColumn=entryRegisterSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,614 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='entryRegisterSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,615 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entryID'}
  2015-06-09 20:28:56,615 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='entryID'}
  2015-06-09 20:28:56,615 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.financial.JournalEntry.entryRegisterSet
  2015-06-09 20:28:56,615 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property entryRegisterSet
  2015-06-09 20:28:56,615 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(JournalEntry), mappingColumn=JournalStatus, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,615 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property journalStatus with lazy=false
  2015-06-09 20:28:56,615 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.JournalEntry:journalStatus]
  2015-06-09 20:28:56,615 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for journalStatus
  2015-06-09 20:28:56,615 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property journalStatus
  2015-06-09 20:28:56,615 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.financial.Rule
  2015-06-09 20:28:56,615 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Rule.findAll => SELECT r FROM Rule r
  2015-06-09 20:28:56,615 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Rule.findByRuleID => SELECT r FROM Rule r WHERE r.ruleID = :ruleID
  2015-06-09 20:28:56,615 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Rule.findByApplyTax => SELECT r FROM Rule r WHERE r.applyTax = :applyTax
  2015-06-09 20:28:56,615 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,616 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Rule
  2015-06-09 20:28:56,616 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.financial.Rule on table Rule
  2015-06-09 20:28:56,620 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Rule), mappingColumn=ruleID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,620 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property ruleID with lazy=false
  2015-06-09 20:28:56,620 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Rule:ruleID]
  2015-06-09 20:28:56,620 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for ruleID
  2015-06-09 20:28:56,620 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property ruleID
  2015-06-09 20:28:56,621 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Rule), mappingColumn=ApplyTax, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,621 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property applyTax with lazy=false
  2015-06-09 20:28:56,621 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Rule:applyTax]
  2015-06-09 20:28:56,621 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for applyTax
  2015-06-09 20:28:56,621 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property applyTax
  2015-06-09 20:28:56,621 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Rule), mappingColumn=ApplyValue, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,621 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property applyValue with lazy=false
  2015-06-09 20:28:56,621 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Rule:applyValue]
  2015-06-09 20:28:56,621 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for applyValue
  2015-06-09 20:28:56,621 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property applyValue
  2015-06-09 20:28:56,621 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='creditAccountID', referencedColumn='accountID', mappedBy=''}
  2015-06-09 20:28:56,621 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Rule), mappingColumn=creditAccountID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,621 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property creditAccountID
  2015-06-09 20:28:56,621 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='debitAccountID', referencedColumn='accountID', mappedBy=''}
  2015-06-09 20:28:56,621 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Rule), mappingColumn=debitAccountID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,622 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property debitAccountID
  2015-06-09 20:28:56,622 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='distributionRuleID', referencedColumn='distributionRuleID', mappedBy=''}
  2015-06-09 20:28:56,622 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Rule), mappingColumn=distributionRuleID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,623 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property distributionRuleID
  2015-06-09 20:28:56,623 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Rule), mappingColumn=Object, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,623 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property object with lazy=false
  2015-06-09 20:28:56,623 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Rule:object]
  2015-06-09 20:28:56,623 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for object
  2015-06-09 20:28:56,623 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property object
  2015-06-09 20:28:56,625 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='ruleFormulaID', referencedColumn='ruleFormulaID', mappedBy=''}
  2015-06-09 20:28:56,625 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Rule), mappingColumn=ruleFormulaID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,625 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property ruleFormulaID
  2015-06-09 20:28:56,625 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='taxSetupID', referencedColumn='taxSetupID', mappedBy=''}
  2015-06-09 20:28:56,625 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Rule), mappingColumn=taxSetupID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,625 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property taxSetupID
  2015-06-09 20:28:56,625 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.financial.RuleFormula
  2015-06-09 20:28:56,628 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,628 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,628 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name RuleFormula
  2015-06-09 20:28:56,628 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.financial.RuleFormula on table RuleFormula
  2015-06-09 20:28:56,634 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(RuleFormula), mappingColumn=ruleFormulaID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,635 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property ruleFormulaID with lazy=false
  2015-06-09 20:28:56,635 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.RuleFormula:ruleFormulaID]
  2015-06-09 20:28:56,635 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for ruleFormulaID
  2015-06-09 20:28:56,635 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property ruleFormulaID
  2015-06-09 20:28:56,635 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(RuleFormula), mappingColumn=Description, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,635 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property description with lazy=false
  2015-06-09 20:28:56,635 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.RuleFormula:description]
  2015-06-09 20:28:56,635 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for description
  2015-06-09 20:28:56,635 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property description
  2015-06-09 20:28:56,635 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='ruleFormulaID'}
  2015-06-09 20:28:56,635 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(RuleFormula), mappingColumn=ruleSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,636 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(RuleFormula), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,637 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(RuleFormula), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,637 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(RuleFormula), mappingColumn=ruleSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,637 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='ruleSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,637 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='ruleFormulaID'}
  2015-06-09 20:28:56,637 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='ruleFormulaID'}
  2015-06-09 20:28:56,637 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.financial.RuleFormula.ruleSet
  2015-06-09 20:28:56,637 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property ruleSet
  2015-06-09 20:28:56,637 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(RuleFormula), mappingColumn=ValueFormula, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,638 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property valueFormula with lazy=false
  2015-06-09 20:28:56,638 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.RuleFormula:valueFormula]
  2015-06-09 20:28:56,638 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for valueFormula
  2015-06-09 20:28:56,638 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property valueFormula
  2015-06-09 20:28:56,638 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.financial.Tax
  2015-06-09 20:28:56,638 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Tax.findAll => SELECT t FROM Tax t
  2015-06-09 20:28:56,638 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Tax.findByTaxID => SELECT t FROM Tax t WHERE t.taxID = :taxID
  2015-06-09 20:28:56,638 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Tax.findByTaxName => SELECT t FROM Tax t WHERE t.taxName = :taxName
  2015-06-09 20:28:56,638 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,638 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Tax
  2015-06-09 20:28:56,639 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.financial.Tax on table Tax
  2015-06-09 20:28:56,642 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tax), mappingColumn=taxID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,642 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property taxID with lazy=false
  2015-06-09 20:28:56,642 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Tax:taxID]
  2015-06-09 20:28:56,642 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for taxID
  2015-06-09 20:28:56,642 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property taxID
  2015-06-09 20:28:56,642 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tax), mappingColumn=TaxName, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,642 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property taxName with lazy=false
  2015-06-09 20:28:56,642 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.Tax:taxName]
  2015-06-09 20:28:56,642 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for taxName
  2015-06-09 20:28:56,642 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property taxName
  2015-06-09 20:28:56,642 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='taxID'}
  2015-06-09 20:28:56,642 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tax), mappingColumn=taxSetupSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,643 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tax), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,643 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tax), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,643 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tax), mappingColumn=taxSetupSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,643 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='taxSetupSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,643 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='taxID'}
  2015-06-09 20:28:56,643 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='taxID'}
  2015-06-09 20:28:56,643 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.financial.Tax.taxSetupSet
  2015-06-09 20:28:56,643 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property taxSetupSet
  2015-06-09 20:28:56,643 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.financial.TaxSetup
  2015-06-09 20:28:56,643 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: TaxSetup.findAll => SELECT t FROM TaxSetup t
  2015-06-09 20:28:56,643 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: TaxSetup.findByTaxSetupID => SELECT t FROM TaxSetup t WHERE t.taxSetupID = :taxSetupID
  2015-06-09 20:28:56,643 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: TaxSetup.findBySetupName => SELECT t FROM TaxSetup t WHERE t.setupName = :setupName
  2015-06-09 20:28:56,643 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: TaxSetup.findByAliquota => SELECT t FROM TaxSetup t WHERE t.aliquota = :aliquota
  2015-06-09 20:28:56,643 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: TaxSetup.findByTaxValue => SELECT t FROM TaxSetup t WHERE t.taxValue = :taxValue
  2015-06-09 20:28:56,643 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,643 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name TaxSetup
  2015-06-09 20:28:56,644 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.financial.TaxSetup on table TaxSetup
  2015-06-09 20:28:56,645 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TaxSetup), mappingColumn=taxSetupID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,645 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property taxSetupID with lazy=false
  2015-06-09 20:28:56,645 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.TaxSetup:taxSetupID]
  2015-06-09 20:28:56,646 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for taxSetupID
  2015-06-09 20:28:56,646 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property taxSetupID
  2015-06-09 20:28:56,646 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TaxSetup), mappingColumn=Aliquota, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,646 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property aliquota with lazy=false
  2015-06-09 20:28:56,646 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.TaxSetup:aliquota]
  2015-06-09 20:28:56,646 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for aliquota
  2015-06-09 20:28:56,646 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property aliquota
  2015-06-09 20:28:56,646 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='taxSetupID'}
  2015-06-09 20:28:56,646 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TaxSetup), mappingColumn=ruleSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,646 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TaxSetup), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,646 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TaxSetup), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,646 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TaxSetup), mappingColumn=ruleSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,646 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='ruleSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,647 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='taxSetupID'}
  2015-06-09 20:28:56,647 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='taxSetupID'}
  2015-06-09 20:28:56,647 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.financial.TaxSetup.ruleSet
  2015-06-09 20:28:56,647 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property ruleSet
  2015-06-09 20:28:56,647 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TaxSetup), mappingColumn=SetupName, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,647 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property setupName with lazy=false
  2015-06-09 20:28:56,647 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.TaxSetup:setupName]
  2015-06-09 20:28:56,647 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for setupName
  2015-06-09 20:28:56,647 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property setupName
  2015-06-09 20:28:56,647 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='taxID', referencedColumn='taxID', mappedBy=''}
  2015-06-09 20:28:56,647 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TaxSetup), mappingColumn=taxID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,647 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property taxID
  2015-06-09 20:28:56,648 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TaxSetup), mappingColumn=TaxValue, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,649 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property taxValue with lazy=false
  2015-06-09 20:28:56,649 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.financial.TaxSetup:taxValue]
  2015-06-09 20:28:56,649 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for taxValue
  2015-06-09 20:28:56,649 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property taxValue
  2015-06-09 20:28:56,649 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:28:56,650 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Broker.findAll => SELECT b FROM Broker b
  2015-06-09 20:28:56,650 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Broker.findByBrokerCode => SELECT b FROM Broker b WHERE b.brokerCode = :brokerCode
  2015-06-09 20:28:56,650 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,650 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,650 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Broker
  2015-06-09 20:28:56,650 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.account.Broker on table Broker
  2015-06-09 20:28:56,654 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Broker), mappingColumn=brokerID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,654 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property brokerID with lazy=false
  2015-06-09 20:28:56,654 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.account.Broker:brokerID]
  2015-06-09 20:28:56,654 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for brokerID
  2015-06-09 20:28:56,654 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property brokerID
  2015-06-09 20:28:56,655 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Broker), mappingColumn=BrokerCode, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,655 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property brokerCode with lazy=false
  2015-06-09 20:28:56,655 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.account.Broker:brokerCode]
  2015-06-09 20:28:56,655 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for brokerCode
  2015-06-09 20:28:56,655 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property brokerCode
  2015-06-09 20:28:56,655 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Broker), mappingColumn=BrokerName, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,655 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property brokerName with lazy=false
  2015-06-09 20:28:56,655 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.account.Broker:brokerName]
  2015-06-09 20:28:56,655 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for brokerName
  2015-06-09 20:28:56,655 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property brokerName
  2015-06-09 20:28:56,655 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='brokerID'}
  2015-06-09 20:28:56,656 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Broker), mappingColumn=brokerageList, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,656 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Broker), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,656 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Broker), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,656 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Broker), mappingColumn=brokerageList_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,656 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='brokerageList_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,656 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='brokerID'}
  2015-06-09 20:28:56,656 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='brokerID'}
  2015-06-09 20:28:56,656 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.account.Broker.brokerageList
  2015-06-09 20:28:56,656 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property brokerageList
  2015-06-09 20:28:56,656 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='brokerID'}
  2015-06-09 20:28:56,656 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Broker), mappingColumn=marketOrderSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,656 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Broker), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,657 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Broker), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,657 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Broker), mappingColumn=marketOrderSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,657 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='marketOrderSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,657 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='brokerID'}
  2015-06-09 20:28:56,657 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='brokerID'}
  2015-06-09 20:28:56,657 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.account.Broker.marketOrderSet
  2015-06-09 20:28:56,657 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property marketOrderSet
  2015-06-09 20:28:56,657 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:28:56,658 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,658 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,658 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Brokerage
  2015-06-09 20:28:56,658 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.account.Brokerage on table Brokerage
  2015-06-09 20:28:56,661 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Brokerage), mappingColumn=brokerageID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,661 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property brokerageID with lazy=false
  2015-06-09 20:28:56,662 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.account.Brokerage:brokerageID]
  2015-06-09 20:28:56,662 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for brokerageID
  2015-06-09 20:28:56,662 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property brokerageID
  2015-06-09 20:28:56,662 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='brokerID', referencedColumn='brokerID', mappedBy=''}
  2015-06-09 20:28:56,662 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Brokerage), mappingColumn=brokerID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,662 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property brokerID
  2015-06-09 20:28:56,662 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Brokerage), mappingColumn=Category, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,663 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property category with lazy=false
  2015-06-09 20:28:56,663 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.account.Brokerage:category]
  2015-06-09 20:28:56,663 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for category
  2015-06-09 20:28:56,663 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property category
  2015-06-09 20:28:56,663 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='brokerageID'}
  2015-06-09 20:28:56,663 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Brokerage), mappingColumn=commissionList, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,663 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Brokerage), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,665 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Brokerage), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,665 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Brokerage), mappingColumn=commissionList_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,665 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='commissionList_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,665 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='brokerageID'}
  2015-06-09 20:28:56,665 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='brokerageID'}
  2015-06-09 20:28:56,665 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.account.Brokerage.commissionList
  2015-06-09 20:28:56,665 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property commissionList
  2015-06-09 20:28:56,665 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='brokerageID'}
  2015-06-09 20:28:56,665 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Brokerage), mappingColumn=exchangeTaxList, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,665 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Brokerage), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,665 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Brokerage), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,665 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Brokerage), mappingColumn=exchangeTaxList_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,666 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='exchangeTaxList_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,666 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='brokerageID'}
  2015-06-09 20:28:56,666 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='brokerageID'}
  2015-06-09 20:28:56,666 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.account.Brokerage.exchangeTaxList
  2015-06-09 20:28:56,666 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property exchangeTaxList
  2015-06-09 20:28:56,666 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Brokerage), mappingColumn=TradeType, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,666 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property tradeType with lazy=false
  2015-06-09 20:28:56,666 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.account.Brokerage:tradeType]
  2015-06-09 20:28:56,666 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for tradeType
  2015-06-09 20:28:56,666 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property tradeType
  2015-06-09 20:28:56,666 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.account.Commission
  2015-06-09 20:28:56,666 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,666 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,666 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Commission
  2015-06-09 20:28:56,666 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.account.Commission on table Commission
  2015-06-09 20:28:56,671 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Commission), mappingColumn=commissionID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,671 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property commissionID with lazy=false
  2015-06-09 20:28:56,671 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.account.Commission:commissionID]
  2015-06-09 20:28:56,672 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for commissionID
  2015-06-09 20:28:56,672 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property commissionID
  2015-06-09 20:28:56,672 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='brokerageID', referencedColumn='brokerageID', mappedBy=''}
  2015-06-09 20:28:56,672 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Commission), mappingColumn=brokerageID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,672 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property brokerageID
  2015-06-09 20:28:56,672 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Commission), mappingColumn=CalcTypes, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,672 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property calcType with lazy=false
  2015-06-09 20:28:56,672 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.account.Commission:calcType]
  2015-06-09 20:28:56,672 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for calcType
  2015-06-09 20:28:56,672 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property calcType
  2015-06-09 20:28:56,672 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Commission), mappingColumn=CommValue, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,672 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property commValue with lazy=false
  2015-06-09 20:28:56,673 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.account.Commission:commValue]
  2015-06-09 20:28:56,673 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for commValue
  2015-06-09 20:28:56,673 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property commValue
  2015-06-09 20:28:56,673 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Commission), mappingColumn=ValueMax, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,673 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property valueMax with lazy=false
  2015-06-09 20:28:56,673 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.account.Commission:valueMax]
  2015-06-09 20:28:56,673 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for valueMax
  2015-06-09 20:28:56,673 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property valueMax
  2015-06-09 20:28:56,673 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Commission), mappingColumn=ValueMin, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,673 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property valueMin with lazy=false
  2015-06-09 20:28:56,673 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.account.Commission:valueMin]
  2015-06-09 20:28:56,673 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for valueMin
  2015-06-09 20:28:56,673 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property valueMin
  2015-06-09 20:28:56,674 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.account.ExchangeTax
  2015-06-09 20:28:56,674 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,674 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,674 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name ExchangeTax
  2015-06-09 20:28:56,674 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.account.ExchangeTax on table ExchangeTax
  2015-06-09 20:28:56,675 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ExchangeTax), mappingColumn=exchangeTaxID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,675 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property exchangeTaxID with lazy=false
  2015-06-09 20:28:56,675 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.account.ExchangeTax:exchangeTaxID]
  2015-06-09 20:28:56,675 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for exchangeTaxID
  2015-06-09 20:28:56,675 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property exchangeTaxID
  2015-06-09 20:28:56,676 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='brokerageID', referencedColumn='brokerageID', mappedBy=''}
  2015-06-09 20:28:56,676 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ExchangeTax), mappingColumn=brokerageID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,676 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property brokerageID
  2015-06-09 20:28:56,676 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ExchangeTax), mappingColumn=CalcType, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,676 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property calcType with lazy=false
  2015-06-09 20:28:56,676 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.account.ExchangeTax:calcType]
  2015-06-09 20:28:56,676 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for calcType
  2015-06-09 20:28:56,676 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property calcType
  2015-06-09 20:28:56,677 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ExchangeTax), mappingColumn=Tax, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,677 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property tax with lazy=false
  2015-06-09 20:28:56,677 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.account.ExchangeTax:tax]
  2015-06-09 20:28:56,677 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for tax
  2015-06-09 20:28:56,677 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property tax
  2015-06-09 20:28:56,677 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ExchangeTax), mappingColumn=TaxName, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,677 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property taxName with lazy=false
  2015-06-09 20:28:56,677 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.account.ExchangeTax:taxName]
  2015-06-09 20:28:56,677 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for taxName
  2015-06-09 20:28:56,677 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property taxName
  2015-06-09 20:28:56,677 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.OrderEvent
  2015-06-09 20:28:56,678 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,678 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,678 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name OrderEvent
  2015-06-09 20:28:56,678 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.OrderEvent on table OrderEvent
  2015-06-09 20:28:56,680 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderEvent), mappingColumn=orderEventID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,681 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property orderEventID with lazy=false
  2015-06-09 20:28:56,681 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.OrderEvent:orderEventID]
  2015-06-09 20:28:56,681 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for orderEventID
  2015-06-09 20:28:56,681 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property orderEventID
  2015-06-09 20:28:56,681 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderEvent), mappingColumn=EventDateTime, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,681 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property eventDateTime with lazy=false
  2015-06-09 20:28:56,681 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.OrderEvent:eventDateTime]
  2015-06-09 20:28:56,681 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for eventDateTime
  2015-06-09 20:28:56,681 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property eventDateTime
  2015-06-09 20:28:56,681 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderEvent), mappingColumn=EventType, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,681 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property eventType with lazy=false
  2015-06-09 20:28:56,681 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.OrderEvent:eventType]
  2015-06-09 20:28:56,681 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for eventType
  2015-06-09 20:28:56,681 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property eventType
  2015-06-09 20:28:56,682 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderEvent), mappingColumn=Message, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,682 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property message with lazy=false
  2015-06-09 20:28:56,682 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.OrderEvent:message]
  2015-06-09 20:28:56,682 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for message
  2015-06-09 20:28:56,682 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property message
  2015-06-09 20:28:56,682 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='orderID', referencedColumn='orderID', mappedBy=''}
  2015-06-09 20:28:56,682 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderEvent), mappingColumn=orderID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,683 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property orderID
  2015-06-09 20:28:56,683 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.OrderExecution
  2015-06-09 20:28:56,683 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,683 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,683 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name OrderExecution
  2015-06-09 20:28:56,683 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.OrderExecution on table OrderExecution
  2015-06-09 20:28:56,687 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderExecution), mappingColumn=orderExecutionID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,687 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property orderExecutionID with lazy=false
  2015-06-09 20:28:56,687 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.OrderExecution:orderExecutionID]
  2015-06-09 20:28:56,687 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for orderExecutionID
  2015-06-09 20:28:56,687 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property orderExecutionID
  2015-06-09 20:28:56,687 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderExecution), mappingColumn=ExecutionDateTime, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,688 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property executionDateTime with lazy=false
  2015-06-09 20:28:56,688 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.OrderExecution:executionDateTime]
  2015-06-09 20:28:56,688 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for executionDateTime
  2015-06-09 20:28:56,689 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property executionDateTime
  2015-06-09 20:28:56,689 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='orderID', referencedColumn='orderID', mappedBy=''}
  2015-06-09 20:28:56,689 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderExecution), mappingColumn=orderID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,689 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property orderID
  2015-06-09 20:28:56,690 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderExecution), mappingColumn=Price, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,690 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property price with lazy=false
  2015-06-09 20:28:56,690 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.OrderExecution:price]
  2015-06-09 20:28:56,690 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for price
  2015-06-09 20:28:56,690 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property price
  2015-06-09 20:28:56,690 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderExecution), mappingColumn=Volume, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,690 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property volume with lazy=false
  2015-06-09 20:28:56,690 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.OrderExecution:volume]
  2015-06-09 20:28:56,690 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for volume
  2015-06-09 20:28:56,690 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property volume
  2015-06-09 20:28:56,690 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.Orders
  2015-06-09 20:28:56,690 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Orders.findAll => SELECT o FROM Orders o
  2015-06-09 20:28:56,690 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Orders.findByOrderID => SELECT o FROM Orders o WHERE o.orderID = :orderID
  2015-06-09 20:28:56,691 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Orders.findByVolume => SELECT o FROM Orders o WHERE o.volume = :volume
  2015-06-09 20:28:56,691 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Orders.findByAveragePrice => SELECT o FROM Orders o WHERE o.averagePrice = :averagePrice
  2015-06-09 20:28:56,691 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Orders.findByExecutedVolume => SELECT o FROM Orders o WHERE o.executedVolume = :executedVolume
  2015-06-09 20:28:56,691 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Orders.findByOrderStatus => SELECT o FROM Orders o WHERE o.orderStatus = :orderStatus
  2015-06-09 20:28:56,691 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Orders.findBySide => SELECT o FROM Orders o WHERE o.side = :side
  2015-06-09 20:28:56,692 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,692 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,692 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Orders
  2015-06-09 20:28:56,693 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.Orders on table Orders
  2015-06-09 20:28:56,698 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=orderID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,699 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property orderID with lazy=false
  2015-06-09 20:28:56,699 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.Orders:orderID]
  2015-06-09 20:28:56,699 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for orderID
  2015-06-09 20:28:56,699 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property orderID
  2015-06-09 20:28:56,699 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=AveragePrice, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,699 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property averagePrice with lazy=false
  2015-06-09 20:28:56,699 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.Orders:averagePrice]
  2015-06-09 20:28:56,699 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for averagePrice
  2015-06-09 20:28:56,699 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property averagePrice
  2015-06-09 20:28:56,699 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=Comment, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,699 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property comment with lazy=false
  2015-06-09 20:28:56,699 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.Orders:comment]
  2015-06-09 20:28:56,700 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for comment
  2015-06-09 20:28:56,700 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property comment
  2015-06-09 20:28:56,700 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=Duration, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,700 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property duration with lazy=false
  2015-06-09 20:28:56,700 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.Orders:duration]
  2015-06-09 20:28:56,700 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for duration
  2015-06-09 20:28:56,700 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property duration
  2015-06-09 20:28:56,700 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='orderID'}
  2015-06-09 20:28:56,700 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=eventsList, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,701 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,701 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,701 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=eventsList_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,702 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='eventsList_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,702 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='orderID'}
  2015-06-09 20:28:56,703 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='orderID'}
  2015-06-09 20:28:56,703 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.Orders.eventsList
  2015-06-09 20:28:56,703 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property eventsList
  2015-06-09 20:28:56,703 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=ExecutedVolume, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,704 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property executedVolume with lazy=false
  2015-06-09 20:28:56,704 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.Orders:executedVolume]
  2015-06-09 20:28:56,704 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for executedVolume
  2015-06-09 20:28:56,704 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property executedVolume
  2015-06-09 20:28:56,704 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='orderID'}
  2015-06-09 20:28:56,704 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=executionsList, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,704 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,704 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,705 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=executionsList_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,705 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='executionsList_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,705 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='orderID'}
  2015-06-09 20:28:56,705 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='orderID'}
  2015-06-09 20:28:56,705 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.Orders.executionsList
  2015-06-09 20:28:56,705 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property executionsList
  2015-06-09 20:28:56,705 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderDateTime, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,705 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property orderDateTime with lazy=false
  2015-06-09 20:28:56,705 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.Orders:orderDateTime]
  2015-06-09 20:28:56,705 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for orderDateTime
  2015-06-09 20:28:56,705 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property orderDateTime
  2015-06-09 20:28:56,705 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderSerial, insertable=true, updatable=false, unique=false}
  2015-06-09 20:28:56,705 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property orderSerial with lazy=false
  2015-06-09 20:28:56,705 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.Orders:orderSerial]
  2015-06-09 20:28:56,705 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for orderSerial
  2015-06-09 20:28:56,705 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property orderSerial
  2015-06-09 20:28:56,705 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderStatus, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,706 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property orderStatus with lazy=false
  2015-06-09 20:28:56,706 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.Orders:orderStatus]
  2015-06-09 20:28:56,706 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for orderStatus
  2015-06-09 20:28:56,706 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property orderStatus
  2015-06-09 20:28:56,706 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderType, insertable=true, updatable=false, unique=false}
  2015-06-09 20:28:56,706 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property orderType with lazy=false
  2015-06-09 20:28:56,706 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.Orders:orderType]
  2015-06-09 20:28:56,706 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for orderType
  2015-06-09 20:28:56,706 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property orderType
  2015-06-09 20:28:56,706 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=Price, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,706 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property price with lazy=false
  2015-06-09 20:28:56,706 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.Orders:price]
  2015-06-09 20:28:56,706 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for price
  2015-06-09 20:28:56,706 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property price
  2015-06-09 20:28:56,706 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='securityID', referencedColumn='securityID', mappedBy=''}
  2015-06-09 20:28:56,706 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=securityID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,706 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property securityID
  2015-06-09 20:28:56,707 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=Side, insertable=true, updatable=false, unique=false}
  2015-06-09 20:28:56,707 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property side with lazy=false
  2015-06-09 20:28:56,707 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.Orders:side]
  2015-06-09 20:28:56,707 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for side
  2015-06-09 20:28:56,707 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property side
  2015-06-09 20:28:56,707 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=StopPrice, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,707 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property stopPrice with lazy=false
  2015-06-09 20:28:56,707 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.Orders:stopPrice]
  2015-06-09 20:28:56,707 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for stopPrice
  2015-06-09 20:28:56,707 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property stopPrice
  2015-06-09 20:28:56,707 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=TradeType, insertable=true, updatable=false, unique=false}
  2015-06-09 20:28:56,708 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property tradeType with lazy=false
  2015-06-09 20:28:56,708 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.Orders:tradeType]
  2015-06-09 20:28:56,708 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for tradeType
  2015-06-09 20:28:56,708 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property tradeType
  2015-06-09 20:28:56,710 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=Volume, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,710 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property volume with lazy=false
  2015-06-09 20:28:56,710 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.Orders:volume]
  2015-06-09 20:28:56,710 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for volume
  2015-06-09 20:28:56,710 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property volume
  2015-06-09 20:28:56,711 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.marketdata.HistoricalQuote
  2015-06-09 20:28:56,711 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,711 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,711 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name HistoricalQuote
  2015-06-09 20:28:56,711 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.marketdata.HistoricalQuote on table HistoricalQuote
  2015-06-09 20:28:56,713 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(HistoricalQuote), mappingColumn=historicalQuoteID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,713 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property historicalQuoteID with lazy=false
  2015-06-09 20:28:56,713 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.HistoricalQuote:historicalQuoteID]
  2015-06-09 20:28:56,713 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for historicalQuoteID
  2015-06-09 20:28:56,713 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property historicalQuoteID
  2015-06-09 20:28:56,713 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(HistoricalQuote), mappingColumn=AdjClose, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,713 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property adjClose with lazy=false
  2015-06-09 20:28:56,715 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.HistoricalQuote:adjClose]
  2015-06-09 20:28:56,715 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for adjClose
  2015-06-09 20:28:56,715 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property adjClose
  2015-06-09 20:28:56,715 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(HistoricalQuote), mappingColumn=Ask, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,715 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property ask with lazy=false
  2015-06-09 20:28:56,715 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.HistoricalQuote:ask]
  2015-06-09 20:28:56,715 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for ask
  2015-06-09 20:28:56,715 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property ask
  2015-06-09 20:28:56,715 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(HistoricalQuote), mappingColumn=AvgPrice, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,715 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property avgPrice with lazy=false
  2015-06-09 20:28:56,715 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.HistoricalQuote:avgPrice]
  2015-06-09 20:28:56,715 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for avgPrice
  2015-06-09 20:28:56,716 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property avgPrice
  2015-06-09 20:28:56,716 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(HistoricalQuote), mappingColumn=Bid, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,716 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property bid with lazy=false
  2015-06-09 20:28:56,716 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.HistoricalQuote:bid]
  2015-06-09 20:28:56,716 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for bid
  2015-06-09 20:28:56,716 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property bid
  2015-06-09 20:28:56,716 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(HistoricalQuote), mappingColumn=Close, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,716 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property close with lazy=false
  2015-06-09 20:28:56,716 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.HistoricalQuote:close]
  2015-06-09 20:28:56,716 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for close
  2015-06-09 20:28:56,716 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property close
  2015-06-09 20:28:56,716 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(HistoricalQuote), mappingColumn=High, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property high with lazy=false
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.HistoricalQuote:high]
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for high
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property high
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(HistoricalQuote), mappingColumn=Low, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property low with lazy=false
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.HistoricalQuote:low]
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for low
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property low
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(HistoricalQuote), mappingColumn=Open, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property open with lazy=false
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.HistoricalQuote:open]
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for open
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property open
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(HistoricalQuote), mappingColumn=QDateTime, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property qDateTime with lazy=false
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.HistoricalQuote:qDateTime]
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for qDateTime
  2015-06-09 20:28:56,717 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property qDateTime
  2015-06-09 20:28:56,718 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(HistoricalQuote), mappingColumn=QuoteFactor, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,718 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property quoteFactor with lazy=false
  2015-06-09 20:28:56,718 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.HistoricalQuote:quoteFactor]
  2015-06-09 20:28:56,718 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for quoteFactor
  2015-06-09 20:28:56,718 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property quoteFactor
  2015-06-09 20:28:56,718 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='securityID', referencedColumn='securityID', mappedBy=''}
  2015-06-09 20:28:56,718 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(HistoricalQuote), mappingColumn=securityID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,718 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property securityID
  2015-06-09 20:28:56,718 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(HistoricalQuote), mappingColumn=TradedQuantity, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,718 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property tradedQuantity with lazy=false
  2015-06-09 20:28:56,718 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.HistoricalQuote:tradedQuantity]
  2015-06-09 20:28:56,718 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for tradedQuantity
  2015-06-09 20:28:56,718 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property tradedQuantity
  2015-06-09 20:28:56,718 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(HistoricalQuote), mappingColumn=TradedUnits, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,718 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property tradedUnits with lazy=false
  2015-06-09 20:28:56,718 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.HistoricalQuote:tradedUnits]
  2015-06-09 20:28:56,718 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for tradedUnits
  2015-06-09 20:28:56,721 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property tradedUnits
  2015-06-09 20:28:56,721 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(HistoricalQuote), mappingColumn=Volume, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,722 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property volume with lazy=false
  2015-06-09 20:28:56,722 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.HistoricalQuote:volume]
  2015-06-09 20:28:56,722 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for volume
  2015-06-09 20:28:56,722 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property volume
  2015-06-09 20:28:56,722 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.marketdata.MarketEvent
  2015-06-09 20:28:56,722 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,722 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,722 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name MarketEvent
  2015-06-09 20:28:56,722 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.marketdata.MarketEvent on table MarketEvent
  2015-06-09 20:28:56,725 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketEvent), mappingColumn=marketEventID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,726 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property marketEventID with lazy=false
  2015-06-09 20:28:56,726 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.MarketEvent:marketEventID]
  2015-06-09 20:28:56,726 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for marketEventID
  2015-06-09 20:28:56,726 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property marketEventID
  2015-06-09 20:28:56,726 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketEvent), mappingColumn=EventDateTime, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,726 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property eventDateTime with lazy=false
  2015-06-09 20:28:56,726 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.MarketEvent:eventDateTime]
  2015-06-09 20:28:56,726 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for eventDateTime
  2015-06-09 20:28:56,726 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property eventDateTime
  2015-06-09 20:28:56,727 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketEvent), mappingColumn=EventType, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,727 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property eventType with lazy=false
  2015-06-09 20:28:56,727 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.MarketEvent:eventType]
  2015-06-09 20:28:56,727 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for eventType
  2015-06-09 20:28:56,727 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property eventType
  2015-06-09 20:28:56,727 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='marketOrderID', referencedColumn='marketOrderID', mappedBy=''}
  2015-06-09 20:28:56,727 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketEvent), mappingColumn=marketOrderID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,727 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property marketOrderID
  2015-06-09 20:28:56,728 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketEvent), mappingColumn=Message, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,728 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property message with lazy=false
  2015-06-09 20:28:56,728 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.MarketEvent:message]
  2015-06-09 20:28:56,728 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for message
  2015-06-09 20:28:56,728 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property message
  2015-06-09 20:28:56,728 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:28:56,728 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,728 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,728 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name MarketOrder
  2015-06-09 20:28:56,728 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.marketdata.MarketOrder on table MarketOrder
  2015-06-09 20:28:56,733 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=marketOrderID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,733 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property marketOrderID with lazy=false
  2015-06-09 20:28:56,733 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.MarketOrder:marketOrderID]
  2015-06-09 20:28:56,733 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for marketOrderID
  2015-06-09 20:28:56,733 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property marketOrderID
  2015-06-09 20:28:56,734 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='brokerID', referencedColumn='brokerID', mappedBy=''}
  2015-06-09 20:28:56,734 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=brokerID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,734 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property brokerID
  2015-06-09 20:28:56,734 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='buyOrderID'}
  2015-06-09 20:28:56,734 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=buyTradeList, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,734 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,734 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,734 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=buyTradeList_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,734 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='buyTradeList_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,735 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='buyOrderID'}
  2015-06-09 20:28:56,735 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='buyOrderID'}
  2015-06-09 20:28:56,735 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.marketdata.MarketOrder.buyTradeList
  2015-06-09 20:28:56,735 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property buyTradeList
  2015-06-09 20:28:56,735 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='marketEventID'}
  2015-06-09 20:28:56,735 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=eventsList, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,735 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,735 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,735 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=eventsList_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,735 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='eventsList_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,735 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='marketEventID'}
  2015-06-09 20:28:56,735 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='marketEventID'}
  2015-06-09 20:28:56,735 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.marketdata.MarketOrder.eventsList
  2015-06-09 20:28:56,735 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property eventsList
  2015-06-09 20:28:56,735 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=ExpirationDate, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,735 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property expirationDate with lazy=false
  2015-06-09 20:28:56,735 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.MarketOrder:expirationDate]
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for expirationDate
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property expirationDate
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=ExternalID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property externalID with lazy=false
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.MarketOrder:externalID]
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for externalID
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property externalID
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=OrderDateTime, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property orderDateTime with lazy=false
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.MarketOrder:orderDateTime]
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for orderDateTime
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property orderDateTime
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=OrderStatus, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property orderStatus with lazy=false
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.MarketOrder:orderStatus]
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for orderStatus
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property orderStatus
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=Price, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,736 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property price with lazy=false
  2015-06-09 20:28:56,737 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.MarketOrder:price]
  2015-06-09 20:28:56,737 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for price
  2015-06-09 20:28:56,737 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property price
  2015-06-09 20:28:56,737 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='securityID', referencedColumn='securityID', mappedBy=''}
  2015-06-09 20:28:56,737 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=securityID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,737 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property securityID
  2015-06-09 20:28:56,737 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='sellOrderID'}
  2015-06-09 20:28:56,737 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=sellTradeList, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,737 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,737 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,737 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=sellTradeList_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,737 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='sellTradeList_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,737 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='sellOrderID'}
  2015-06-09 20:28:56,737 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='sellOrderID'}
  2015-06-09 20:28:56,737 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.marketdata.MarketOrder.sellTradeList
  2015-06-09 20:28:56,737 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property sellTradeList
  2015-06-09 20:28:56,737 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=Side, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property side with lazy=false
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.MarketOrder:side]
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for side
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property side
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketOrder), mappingColumn=Volume, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property volume with lazy=false
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.MarketOrder:volume]
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for volume
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property volume
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.marketdata.MarketTrade
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: MarketTrade.findAll => SELECT m FROM MarketTrade m
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: MarketTrade.findByMarketTradeID => SELECT m FROM MarketTrade m WHERE m.marketTradeID = :marketTradeID
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: MarketTrade.findByTDateTime => SELECT m FROM MarketTrade m WHERE m.tradeDateTime = :tradeDateTime
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: MarketTrade.findByPrice => SELECT m FROM MarketTrade m WHERE m.price = :price
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: MarketTrade.findByVolume => SELECT m FROM MarketTrade m WHERE m.volume = :volume
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,738 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name MarketTrade
  2015-06-09 20:28:56,739 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.marketdata.MarketTrade on table MarketTrade
  2015-06-09 20:28:56,740 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketTrade), mappingColumn=marketTradeID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,740 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property marketTradeID with lazy=false
  2015-06-09 20:28:56,740 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.MarketTrade:marketTradeID]
  2015-06-09 20:28:56,740 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for marketTradeID
  2015-06-09 20:28:56,740 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property marketTradeID
  2015-06-09 20:28:56,740 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='buyOrderID', referencedColumn='marketOrderID', mappedBy=''}
  2015-06-09 20:28:56,740 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketTrade), mappingColumn=buyOrderID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,740 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property buyOrderID
  2015-06-09 20:28:56,740 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketTrade), mappingColumn=Price, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,740 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property price with lazy=false
  2015-06-09 20:28:56,741 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.MarketTrade:price]
  2015-06-09 20:28:56,741 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for price
  2015-06-09 20:28:56,741 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property price
  2015-06-09 20:28:56,741 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='sellOrderID', referencedColumn='marketOrderID', mappedBy=''}
  2015-06-09 20:28:56,741 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketTrade), mappingColumn=sellOrderID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,741 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property sellOrderID
  2015-06-09 20:28:56,741 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketTrade), mappingColumn=TradeDateTime, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,741 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property tradeDateTime with lazy=false
  2015-06-09 20:28:56,741 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.MarketTrade:tradeDateTime]
  2015-06-09 20:28:56,741 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for tradeDateTime
  2015-06-09 20:28:56,741 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property tradeDateTime
  2015-06-09 20:28:56,741 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MarketTrade), mappingColumn=Volume, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,741 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property volume with lazy=false
  2015-06-09 20:28:56,741 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.marketdata.MarketTrade:volume]
  2015-06-09 20:28:56,741 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for volume
  2015-06-09 20:28:56,741 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property volume
  2015-06-09 20:28:56,741 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.securities.Company
  2015-06-09 20:28:56,742 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Company.findAll => SELECT c FROM Company c
  2015-06-09 20:28:56,742 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Company.findByCompanyID => SELECT c FROM Company c WHERE c.companyID = :companyID
  2015-06-09 20:28:56,742 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Company.findByCompanyName => SELECT c FROM Company c WHERE c.companyName = :companyName
  2015-06-09 20:28:56,742 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Company.findByOnShares => SELECT c FROM Company c WHERE c.onShares = :onShares
  2015-06-09 20:28:56,742 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Company.findByPnShares => SELECT c FROM Company c WHERE c.pnShares = :pnShares
  2015-06-09 20:28:56,742 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,742 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,742 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Company
  2015-06-09 20:28:56,742 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.securities.Company on table Company
  2015-06-09 20:28:56,752 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=companyID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,752 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property companyID with lazy=false
  2015-06-09 20:28:56,752 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Company:companyID]
  2015-06-09 20:28:56,752 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for companyID
  2015-06-09 20:28:56,752 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property companyID
  2015-06-09 20:28:56,752 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=CNPJ, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,752 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property cnpj with lazy=false
  2015-06-09 20:28:56,752 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Company:cnpj]
  2015-06-09 20:28:56,752 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for cnpj
  2015-06-09 20:28:56,752 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property cnpj
  2015-06-09 20:28:56,752 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=CompanyDate, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property companyDate with lazy=false
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Company:companyDate]
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for companyDate
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property companyDate
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=CompanyName, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property companyName with lazy=false
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Company:companyName]
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for companyName
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property companyName
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=MarketName, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property marketName with lazy=false
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Company:marketName]
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for marketName
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property marketName
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=OnShares, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property onShares with lazy=false
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Company:onShares]
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for onShares
  2015-06-09 20:28:56,753 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property onShares
  2015-06-09 20:28:56,754 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=PnShares, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,754 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property pnShares with lazy=false
  2015-06-09 20:28:56,754 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Company:pnShares]
  2015-06-09 20:28:56,754 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for pnShares
  2015-06-09 20:28:56,754 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property pnShares
  2015-06-09 20:28:56,754 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,754 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,754 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=segmentSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,754 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='segmentSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,754 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='companyID', referencedColumn='companyID', mappedBy=''}
  2015-06-09 20:28:56,754 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='segmentID', referencedColumn='segmentID', mappedBy=''}
  2015-06-09 20:28:56,754 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.securities.Company.segmentSet
  2015-06-09 20:28:56,754 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property segmentSet
  2015-06-09 20:28:56,755 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=Status, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,755 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property status with lazy=false
  2015-06-09 20:28:56,756 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Company:status]
  2015-06-09 20:28:56,756 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for status
  2015-06-09 20:28:56,756 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property status
  2015-06-09 20:28:56,756 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='stockExchangeID', referencedColumn='stockExchangeID', mappedBy=''}
  2015-06-09 20:28:56,756 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Company), mappingColumn=stockExchangeID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,756 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property stockExchangeID
  2015-06-09 20:28:56,756 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.securities.Country
  2015-06-09 20:28:56,756 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Country.findAll => select c from Country c
  2015-06-09 20:28:56,756 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,756 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,756 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Country
  2015-06-09 20:28:56,756 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.securities.Country on table Country
  2015-06-09 20:28:56,758 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Country), mappingColumn=countryID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,758 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property countryID with lazy=false
  2015-06-09 20:28:56,758 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Country:countryID]
  2015-06-09 20:28:56,758 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for countryID
  2015-06-09 20:28:56,758 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property countryID
  2015-06-09 20:28:56,758 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Country), mappingColumn=Area, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,758 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property area with lazy=false
  2015-06-09 20:28:56,758 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Country:area]
  2015-06-09 20:28:56,758 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for area
  2015-06-09 20:28:56,760 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property area
  2015-06-09 20:28:56,760 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Country), mappingColumn=Continent, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,760 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property continent with lazy=false
  2015-06-09 20:28:56,760 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Country:continent]
  2015-06-09 20:28:56,760 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for continent
  2015-06-09 20:28:56,760 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property continent
  2015-06-09 20:28:56,761 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Country), mappingColumn=CountryName, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,762 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property countryName with lazy=false
  2015-06-09 20:28:56,762 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Country:countryName]
  2015-06-09 20:28:56,762 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for countryName
  2015-06-09 20:28:56,762 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property countryName
  2015-06-09 20:28:56,762 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='countryID'}
  2015-06-09 20:28:56,762 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Country), mappingColumn=exchangesList, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,762 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Country), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,762 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Country), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,762 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Country), mappingColumn=exchangesList_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,762 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='exchangesList_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,762 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='countryID'}
  2015-06-09 20:28:56,762 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='countryID'}
  2015-06-09 20:28:56,762 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.securities.Country.exchangesList
  2015-06-09 20:28:56,763 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property exchangesList
  2015-06-09 20:28:56,763 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Country), mappingColumn=Population, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,763 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property population with lazy=false
  2015-06-09 20:28:56,763 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Country:population]
  2015-06-09 20:28:56,763 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for population
  2015-06-09 20:28:56,763 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property population
  2015-06-09 20:28:56,763 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.securities.Earning
  2015-06-09 20:28:56,763 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Earning.findAll => select e from Earning e
  2015-06-09 20:28:56,763 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,763 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,763 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Earning
  2015-06-09 20:28:56,763 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.securities.Earning on table Earning
  2015-06-09 20:28:56,767 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Earning), mappingColumn=earningID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,767 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property earningID with lazy=false
  2015-06-09 20:28:56,767 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Earning:earningID]
  2015-06-09 20:28:56,767 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for earningID
  2015-06-09 20:28:56,767 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property earningID
  2015-06-09 20:28:56,767 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Earning), mappingColumn=EarningType, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property earningType with lazy=false
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Earning:earningType]
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for earningType
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property earningType
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Earning), mappingColumn=EarningValue, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property earningValue with lazy=false
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Earning:earningValue]
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for earningValue
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property earningValue
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Earning), mappingColumn=ExDate, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property exDate with lazy=false
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Earning:exDate]
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for exDate
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property exDate
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Earning), mappingColumn=ExPrice, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property exPrice with lazy=false
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Earning:exPrice]
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for exPrice
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property exPrice
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='securityID', referencedColumn='securityID', mappedBy=''}
  2015-06-09 20:28:56,768 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Earning), mappingColumn=securityID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,769 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property securityID
  2015-06-09 20:28:56,769 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.securities.StockExchange
  2015-06-09 20:28:56,769 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: StockExchange.findAll => SELECT e FROM StockExchange e
  2015-06-09 20:28:56,769 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: StockExchange.findByStockExchangeID => SELECT e FROM StockExchange e WHERE e.stockExchangeID = :stockExchangeID
  2015-06-09 20:28:56,769 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: StockExchange.findByExchangeName => SELECT e FROM StockExchange e WHERE e.exchangeName = :exchangeName
  2015-06-09 20:28:56,769 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,769 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,769 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name StockExchange
  2015-06-09 20:28:56,769 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.securities.StockExchange on table StockExchange
  2015-06-09 20:28:56,770 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(StockExchange), mappingColumn=stockExchangeID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,770 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property stockExchangeID with lazy=false
  2015-06-09 20:28:56,770 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.StockExchange:stockExchangeID]
  2015-06-09 20:28:56,770 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for stockExchangeID
  2015-06-09 20:28:56,772 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property stockExchangeID
  2015-06-09 20:28:56,773 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='stockExchangeID'}
  2015-06-09 20:28:56,773 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(StockExchange), mappingColumn=companySet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,773 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(StockExchange), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,773 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(StockExchange), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,773 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(StockExchange), mappingColumn=companySet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,773 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='companySet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,773 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='stockExchangeID'}
  2015-06-09 20:28:56,773 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='stockExchangeID'}
  2015-06-09 20:28:56,773 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.securities.StockExchange.companySet
  2015-06-09 20:28:56,774 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property companySet
  2015-06-09 20:28:56,774 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='countryID', referencedColumn='countryID', mappedBy=''}
  2015-06-09 20:28:56,774 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(StockExchange), mappingColumn=countryID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,774 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property countryID
  2015-06-09 20:28:56,774 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(StockExchange), mappingColumn=ExchangeName, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,774 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property exchangeName with lazy=false
  2015-06-09 20:28:56,774 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.StockExchange:exchangeName]
  2015-06-09 20:28:56,774 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for exchangeName
  2015-06-09 20:28:56,774 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property exchangeName
  2015-06-09 20:28:56,774 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.securities.Sector
  2015-06-09 20:28:56,774 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Sector.findAll => SELECT s FROM Sector s
  2015-06-09 20:28:56,774 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Sector.findBySectorID => SELECT s FROM Sector s WHERE s.sectorID = :sectorID
  2015-06-09 20:28:56,774 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Sector.findBySectorName => SELECT s FROM Sector s WHERE s.sectorName = :sectorName
  2015-06-09 20:28:56,774 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,774 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,775 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Sector
  2015-06-09 20:28:56,775 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.securities.Sector on table Sector
  2015-06-09 20:28:56,779 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Sector), mappingColumn=sectorID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,780 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property sectorID with lazy=false
  2015-06-09 20:28:56,780 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Sector:sectorID]
  2015-06-09 20:28:56,780 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for sectorID
  2015-06-09 20:28:56,780 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property sectorID
  2015-06-09 20:28:56,780 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Sector), mappingColumn=SectorName, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,780 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property sectorName with lazy=false
  2015-06-09 20:28:56,780 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Sector:sectorName]
  2015-06-09 20:28:56,780 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for sectorName
  2015-06-09 20:28:56,780 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property sectorName
  2015-06-09 20:28:56,780 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='sectorID'}
  2015-06-09 20:28:56,780 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Sector), mappingColumn=subsectorSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,780 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Sector), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,781 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Sector), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,781 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Sector), mappingColumn=subsectorSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,781 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='subsectorSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,781 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='sectorID'}
  2015-06-09 20:28:56,781 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='sectorID'}
  2015-06-09 20:28:56,781 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.securities.Sector.subsectorSet
  2015-06-09 20:28:56,781 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property subsectorSet
  2015-06-09 20:28:56,781 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.securities.Segment
  2015-06-09 20:28:56,781 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Segment.findAll => SELECT s FROM Segment s
  2015-06-09 20:28:56,781 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Segment.findBySegmentID => SELECT s FROM Segment s WHERE s.segmentID = :segmentID
  2015-06-09 20:28:56,781 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Segment.findBySegmentName => SELECT s FROM Segment s WHERE s.segmentName = :segmentName
  2015-06-09 20:28:56,781 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,781 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,781 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Segment
  2015-06-09 20:28:56,781 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.securities.Segment on table Segment
  2015-06-09 20:28:56,783 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Segment), mappingColumn=segmentID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,783 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property segmentID with lazy=false
  2015-06-09 20:28:56,783 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Segment:segmentID]
  2015-06-09 20:28:56,783 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for segmentID
  2015-06-09 20:28:56,783 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property segmentID
  2015-06-09 20:28:56,783 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Segment), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,783 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Segment), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,783 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Segment), mappingColumn=companySet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,783 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='companySet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,784 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='segmentSet'}
  2015-06-09 20:28:56,784 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='segmentSet'}
  2015-06-09 20:28:56,784 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.securities.Segment.companySet
  2015-06-09 20:28:56,784 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property companySet
  2015-06-09 20:28:56,784 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Segment), mappingColumn=SegmentName, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,784 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property segmentName with lazy=false
  2015-06-09 20:28:56,784 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Segment:segmentName]
  2015-06-09 20:28:56,784 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for segmentName
  2015-06-09 20:28:56,784 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property segmentName
  2015-06-09 20:28:56,785 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='subsectorID', referencedColumn='subsectorID', mappedBy=''}
  2015-06-09 20:28:56,785 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Segment), mappingColumn=subsectorID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,785 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property subsectorID
  2015-06-09 20:28:56,785 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.securities.Subsector
  2015-06-09 20:28:56,785 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Subsector.findAll => SELECT s FROM Subsector s
  2015-06-09 20:28:56,785 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Subsector.findBySubsectorID => SELECT s FROM Subsector s WHERE s.subsectorID = :subsectorID
  2015-06-09 20:28:56,785 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Subsector.findBySubsectorName => SELECT s FROM Subsector s WHERE s.subsectorName = :subsectorName
  2015-06-09 20:28:56,785 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,785 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,785 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Subsector
  2015-06-09 20:28:56,785 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.securities.Subsector on table Subsector
  2015-06-09 20:28:56,786 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Subsector), mappingColumn=subsectorID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,787 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property subsectorID with lazy=false
  2015-06-09 20:28:56,787 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Subsector:subsectorID]
  2015-06-09 20:28:56,787 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for subsectorID
  2015-06-09 20:28:56,787 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property subsectorID
  2015-06-09 20:28:56,787 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='sectorID', referencedColumn='sectorID', mappedBy=''}
  2015-06-09 20:28:56,787 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Subsector), mappingColumn=sectorID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,787 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property sectorID
  2015-06-09 20:28:56,787 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='subsectorID'}
  2015-06-09 20:28:56,787 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Subsector), mappingColumn=segmentSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,787 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Subsector), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,788 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Subsector), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,788 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Subsector), mappingColumn=segmentSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,788 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='segmentSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,788 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='subsectorID'}
  2015-06-09 20:28:56,788 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='subsectorID'}
  2015-06-09 20:28:56,788 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.securities.Subsector.segmentSet
  2015-06-09 20:28:56,788 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property segmentSet
  2015-06-09 20:28:56,788 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Subsector), mappingColumn=SubsectorName, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,788 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property subsectorName with lazy=false
  2015-06-09 20:28:56,788 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Subsector:subsectorName]
  2015-06-09 20:28:56,788 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for subsectorName
  2015-06-09 20:28:56,788 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property subsectorName
  2015-06-09 20:28:56,788 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.securities.Isin
  2015-06-09 20:28:56,788 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Isin.findAll => SELECT i FROM Isin i
  2015-06-09 20:28:56,788 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,788 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,789 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Isin
  2015-06-09 20:28:56,789 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.securities.Isin on table Isin
  2015-06-09 20:28:56,789 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Isin), mappingColumn=isinID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,790 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property isinID with lazy=false
  2015-06-09 20:28:56,790 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Isin:isinID]
  2015-06-09 20:28:56,790 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for isinID
  2015-06-09 20:28:56,790 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property isinID
  2015-06-09 20:28:56,790 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Isin), mappingColumn=Description, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,790 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property description with lazy=false
  2015-06-09 20:28:56,790 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Isin:description]
  2015-06-09 20:28:56,790 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for description
  2015-06-09 20:28:56,790 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property description
  2015-06-09 20:28:56,790 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Isin), mappingColumn=ISIN, insertable=true, updatable=true, unique=true}
  2015-06-09 20:28:56,790 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property isin with lazy=false
  2015-06-09 20:28:56,790 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Isin:isin]
  2015-06-09 20:28:56,790 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for isin
  2015-06-09 20:28:56,790 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property isin
  2015-06-09 20:28:56,790 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Isin), mappingColumn=Status, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,790 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property status with lazy=false
  2015-06-09 20:28:56,791 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Isin:status]
  2015-06-09 20:28:56,791 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for status
  2015-06-09 20:28:56,791 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property status
  2015-06-09 20:28:56,791 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.securities.Index
  2015-06-09 20:28:56,791 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Index.findAll => SELECT i FROM Index i
  2015-06-09 20:28:56,791 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Index.findByIndexID => SELECT i FROM Index i WHERE i.indexID = :indexID
  2015-06-09 20:28:56,791 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,791 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,791 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Index
  2015-06-09 20:28:56,791 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.securities.Index on table Index
  2015-06-09 20:28:56,797 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Index), mappingColumn=indexID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,797 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property indexID with lazy=false
  2015-06-09 20:28:56,797 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Index:indexID]
  2015-06-09 20:28:56,797 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for indexID
  2015-06-09 20:28:56,797 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property indexID
  2015-06-09 20:28:56,798 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Index), mappingColumn=Index, insertable=true, updatable=true, unique=true}
  2015-06-09 20:28:56,798 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property index with lazy=false
  2015-06-09 20:28:56,798 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Index:index]
  2015-06-09 20:28:56,798 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for index
  2015-06-09 20:28:56,799 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property index
  2015-06-09 20:28:56,799 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='indexID'}
  2015-06-09 20:28:56,799 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Index), mappingColumn=indexCompositionSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,799 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Index), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,799 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Index), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,799 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Index), mappingColumn=indexCompositionSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,799 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='indexCompositionSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,799 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='indexID'}
  2015-06-09 20:28:56,799 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='indexID'}
  2015-06-09 20:28:56,799 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.securities.Index.indexCompositionSet
  2015-06-09 20:28:56,799 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property indexCompositionSet
  2015-06-09 20:28:56,799 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Index), mappingColumn=IndexName, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,799 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property indexName with lazy=false
  2015-06-09 20:28:56,799 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Index:indexName]
  2015-06-09 20:28:56,799 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for indexName
  2015-06-09 20:28:56,799 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property indexName
  2015-06-09 20:28:56,800 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.securities.IndexComposition
  2015-06-09 20:28:56,801 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: IndexComposition.findAll => SELECT i FROM IndexComposition i
  2015-06-09 20:28:56,801 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: IndexComposition.findByIndexCompID => SELECT i FROM IndexComposition i WHERE i.indexCompID = :indexCompID
  2015-06-09 20:28:56,801 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: IndexComposition.findByIndexDate => SELECT i FROM IndexComposition i WHERE i.indexDate = :indexDate
  2015-06-09 20:28:56,801 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,801 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,801 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name IndexComposition
  2015-06-09 20:28:56,801 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.securities.IndexComposition on table IndexComposition
  2015-06-09 20:28:56,803 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(IndexComposition), mappingColumn=indexCompID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,803 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property indexCompID with lazy=false
  2015-06-09 20:28:56,803 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.IndexComposition:indexCompID]
  2015-06-09 20:28:56,803 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for indexCompID
  2015-06-09 20:28:56,803 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property indexCompID
  2015-06-09 20:28:56,803 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(IndexComposition), mappingColumn=IndexDate, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,803 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property indexDate with lazy=false
  2015-06-09 20:28:56,803 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.IndexComposition:indexDate]
  2015-06-09 20:28:56,803 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for indexDate
  2015-06-09 20:28:56,803 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property indexDate
  2015-06-09 20:28:56,804 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='indexID', referencedColumn='indexID', mappedBy=''}
  2015-06-09 20:28:56,804 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(IndexComposition), mappingColumn=indexID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,804 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property indexID
  2015-06-09 20:28:56,804 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='securityID', referencedColumn='securityID', mappedBy=''}
  2015-06-09 20:28:56,804 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(IndexComposition), mappingColumn=securityID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,804 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property securityID
  2015-06-09 20:28:56,804 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:28:56,804 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Security.findAll => SELECT e FROM Security e
  2015-06-09 20:28:56,804 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Security.findBySecurityID => SELECT e FROM Security e WHERE e.securityID = :securityID
  2015-06-09 20:28:56,804 [main] (DEBUG) org.hibernate.cfg.annotations.QueryBinder -> Binding named query: Security.findBySymbol => SELECT e FROM Security e WHERE e.symbol = :symbol
  2015-06-09 20:28:56,804 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,804 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,804 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name Security
  2015-06-09 20:28:56,805 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.securities.Security on table Security
  2015-06-09 20:28:56,819 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Security), mappingColumn=securityID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,819 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property securityID with lazy=false
  2015-06-09 20:28:56,819 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Security:securityID]
  2015-06-09 20:28:56,819 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for securityID
  2015-06-09 20:28:56,819 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property securityID
  2015-06-09 20:28:56,820 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Security), mappingColumn=Description, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,820 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property description with lazy=false
  2015-06-09 20:28:56,820 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Security:description]
  2015-06-09 20:28:56,820 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for description
  2015-06-09 20:28:56,820 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property description
  2015-06-09 20:28:56,820 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='securityID'}
  2015-06-09 20:28:56,820 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Security), mappingColumn=historicalQuoteSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,820 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Security), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,820 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Security), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,820 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Security), mappingColumn=historicalQuoteSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,820 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='historicalQuoteSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,820 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='securityID'}
  2015-06-09 20:28:56,820 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='securityID'}
  2015-06-09 20:28:56,820 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.securities.Security.historicalQuoteSet
  2015-06-09 20:28:56,820 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property historicalQuoteSet
  2015-06-09 20:28:56,821 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='securityID'}
  2015-06-09 20:28:56,821 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Security), mappingColumn=marketOrderSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,821 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Security), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,821 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Security), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,821 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Security), mappingColumn=marketOrderSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,821 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='marketOrderSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,821 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='securityID'}
  2015-06-09 20:28:56,821 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='securityID'}
  2015-06-09 20:28:56,821 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.securities.Security.marketOrderSet
  2015-06-09 20:28:56,821 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property marketOrderSet
  2015-06-09 20:28:56,821 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='securityID'}
  2015-06-09 20:28:56,821 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Security), mappingColumn=ordersSet, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,821 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Security), mappingColumn=null, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,821 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Security), mappingColumn=element, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,822 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Security), mappingColumn=ordersSet_KEY, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,822 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='ordersSet_KEY', referencedColumn='null', mappedBy='null'}
  2015-06-09 20:28:56,822 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='securityID'}
  2015-06-09 20:28:56,822 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='securityID'}
  2015-06-09 20:28:56,822 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Collection role: com.cmm.jft.trading.securities.Security.ordersSet
  2015-06-09 20:28:56,822 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property ordersSet
  2015-06-09 20:28:56,822 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
  2015-06-09 20:28:56,822 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Security), mappingColumn=securityInfoID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,823 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property securityInfoID
  2015-06-09 20:28:56,823 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Security), mappingColumn=Symbol, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,823 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property symbol with lazy=false
  2015-06-09 20:28:56,824 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.Security:symbol]
  2015-06-09 20:28:56,824 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for symbol
  2015-06-09 20:28:56,824 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property symbol
  2015-06-09 20:28:56,824 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> Binding entity from annotated class: com.cmm.jft.trading.securities.SecurityInfo
  2015-06-09 20:28:56,824 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
  2015-06-09 20:28:56,824 [main] (DEBUG) org.hibernate.cfg.AnnotationBinder -> No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
  2015-06-09 20:28:56,824 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Import with entity name SecurityInfo
  2015-06-09 20:28:56,824 [main] (DEBUG) org.hibernate.cfg.annotations.EntityBinder -> Bind entity com.cmm.jft.trading.securities.SecurityInfo on table SecurityInfo
  2015-06-09 20:28:56,833 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SecurityInfo), mappingColumn=securityInfoID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,833 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property securityInfoID with lazy=false
  2015-06-09 20:28:56,833 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.SecurityInfo:securityInfoID]
  2015-06-09 20:28:56,833 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for securityInfoID
  2015-06-09 20:28:56,834 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property securityInfoID
  2015-06-09 20:28:56,834 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SecurityInfo), mappingColumn=Category, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,834 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property category with lazy=false
  2015-06-09 20:28:56,834 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.SecurityInfo:category]
  2015-06-09 20:28:56,834 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for category
  2015-06-09 20:28:56,834 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property category
  2015-06-09 20:28:56,834 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='currencyID', referencedColumn='currencyID', mappedBy=''}
  2015-06-09 20:28:56,834 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SecurityInfo), mappingColumn=currencyID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,834 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property currencyID
  2015-06-09 20:28:56,834 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SecurityInfo), mappingColumn=EmissionDate, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,834 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property emissionDate with lazy=false
  2015-06-09 20:28:56,834 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.SecurityInfo:emissionDate]
  2015-06-09 20:28:56,834 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for emissionDate
  2015-06-09 20:28:56,835 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property emissionDate
  2015-06-09 20:28:56,835 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SecurityInfo), mappingColumn=ExcercisePrice, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,835 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property exercisePrice with lazy=false
  2015-06-09 20:28:56,835 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.SecurityInfo:exercisePrice]
  2015-06-09 20:28:56,835 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for exercisePrice
  2015-06-09 20:28:56,835 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property exercisePrice
  2015-06-09 20:28:56,835 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SecurityInfo), mappingColumn=ExpirationDate, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,835 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property expirationDate with lazy=false
  2015-06-09 20:28:56,835 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.SecurityInfo:expirationDate]
  2015-06-09 20:28:56,835 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for expirationDate
  2015-06-09 20:28:56,835 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property expirationDate
  2015-06-09 20:28:56,835 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SecurityInfo), mappingColumn=FutureSerie, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,835 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property futureSerie with lazy=false
  2015-06-09 20:28:56,835 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.SecurityInfo:futureSerie]
  2015-06-09 20:28:56,835 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for futureSerie
  2015-06-09 20:28:56,835 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property futureSerie
  2015-06-09 20:28:56,836 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SecurityInfo), mappingColumn=MinimalVolume, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,836 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property minimalVolume with lazy=false
  2015-06-09 20:28:56,836 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.SecurityInfo:minimalVolume]
  2015-06-09 20:28:56,836 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for minimalVolume
  2015-06-09 20:28:56,836 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property minimalVolume
  2015-06-09 20:28:56,836 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SecurityInfo), mappingColumn=ObjectAsset, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,836 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property objectAsset with lazy=false
  2015-06-09 20:28:56,836 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.SecurityInfo:objectAsset]
  2015-06-09 20:28:56,836 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for objectAsset
  2015-06-09 20:28:56,836 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property objectAsset
  2015-06-09 20:28:56,836 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SecurityInfo), mappingColumn=OptionSerie, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,836 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property optionSerie with lazy=false
  2015-06-09 20:28:56,836 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.SecurityInfo:optionSerie]
  2015-06-09 20:28:56,837 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for optionSerie
  2015-06-09 20:28:56,837 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property optionSerie
  2015-06-09 20:28:56,837 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SecurityInfo), mappingColumn=OptionStyle, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,837 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property optionStyle with lazy=false
  2015-06-09 20:28:56,837 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.SecurityInfo:optionStyle]
  2015-06-09 20:28:56,837 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for optionStyle
  2015-06-09 20:28:56,837 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property optionStyle
  2015-06-09 20:28:56,837 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SecurityInfo), mappingColumn=QuoteFactor, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,837 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property quoteFactor with lazy=false
  2015-06-09 20:28:56,837 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.SecurityInfo:quoteFactor]
  2015-06-09 20:28:56,837 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for quoteFactor
  2015-06-09 20:28:56,837 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property quoteFactor
  2015-06-09 20:28:56,837 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='securityInfoID'}
  2015-06-09 20:28:56,837 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SecurityInfo), mappingColumn=securityID, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,839 [main] (DEBUG) org.hibernate.cfg.Ejb3Column -> Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SecurityInfo), mappingColumn=SymbolDate, insertable=true, updatable=true, unique=false}
  2015-06-09 20:28:56,839 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> MetadataSourceProcessor property symbolDate with lazy=false
  2015-06-09 20:28:56,840 [main] (DEBUG) org.hibernate.cfg.AbstractPropertyHolder -> Attempting to locate auto-apply AttributeConverter for property [com.cmm.jft.trading.securities.SecurityInfo:symbolDate]
  2015-06-09 20:28:56,840 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> building SimpleValue for symbolDate
  2015-06-09 20:28:56,840 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property symbolDate
  2015-06-09 20:28:56,840 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for configurationID
  2015-06-09 20:28:56,841 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for properties
  2015-06-09 20:28:56,841 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for accountID
  2015-06-09 20:28:56,841 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for accName
  2015-06-09 20:28:56,841 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for accountCategory
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for accountType
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for balance
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for creditLimit
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for description
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for open
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for costCenterID
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for name
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for currencyID
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for currSymbol
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for description
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for fractionalUnit
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for sign
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for currencyQuoteID
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for qDateTime
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for value
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for depositID
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for depositDate
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for description
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for value
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for distributionRuleID
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for objectRule
  2015-06-09 20:28:56,842 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for ruleName
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for entryRegisterID
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for credit
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for debit
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for description
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for entryType
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for operationID
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for entryID
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for description
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for entryClose
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for entryDate
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for journalStatus
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for ruleID
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for applyTax
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for applyValue
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for object
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for ruleFormulaID
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for description
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for valueFormula
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for taxID
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for taxName
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for taxSetupID
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for aliquota
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for setupName
  2015-06-09 20:28:56,843 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for taxValue
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for brokerID
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for brokerCode
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for brokerName
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for brokerageID
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for category
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for tradeType
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for commissionID
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for calcType
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for commValue
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for valueMax
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for valueMin
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for exchangeTaxID
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for calcType
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for tax
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for taxName
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for orderEventID
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for eventDateTime
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for eventType
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for message
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for orderExecutionID
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for executionDateTime
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for price
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for volume
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for orderID
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for averagePrice
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for comment
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for duration
  2015-06-09 20:28:56,844 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for executedVolume
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for orderDateTime
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for orderSerial
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for orderStatus
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for orderType
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for price
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for side
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for stopPrice
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for tradeType
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for volume
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for historicalQuoteID
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for adjClose
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for ask
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for avgPrice
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for bid
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for close
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for high
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for low
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for open
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for qDateTime
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for quoteFactor
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for tradedQuantity
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for tradedUnits
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for volume
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for marketEventID
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for eventDateTime
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for eventType
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for message
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for marketOrderID
  2015-06-09 20:28:56,845 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for expirationDate
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for externalID
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for orderDateTime
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for orderStatus
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for price
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for side
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for volume
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for marketTradeID
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for price
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for tradeDateTime
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for volume
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for companyID
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for cnpj
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for companyDate
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for companyName
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for marketName
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for onShares
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for pnShares
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for status
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for countryID
  2015-06-09 20:28:56,846 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for area
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for continent
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for countryName
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for population
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for earningID
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for earningType
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for earningValue
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for exDate
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for exPrice
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for stockExchangeID
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for exchangeName
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for sectorID
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for sectorName
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for segmentID
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for segmentName
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for subsectorID
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for subsectorName
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for isinID
  2015-06-09 20:28:56,847 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for description
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for isin
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for status
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for indexID
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for index
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for indexName
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for indexCompID
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for indexDate
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for securityID
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for description
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for symbol
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for securityInfoID
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for category
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for emissionDate
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for exercisePrice
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for expirationDate
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for futureSerie
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for minimalVolume
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for objectAsset
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for optionSerie
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for optionStyle
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for quoteFactor
  2015-06-09 20:28:56,848 [main] (DEBUG) org.hibernate.cfg.annotations.SimpleValueBinder -> Starting fillSimpleValue for symbolDate
  2015-06-09 20:28:56,850 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing fk mappings (*ToOne and JoinedSubclass)
  2015-06-09 20:28:56,883 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:28:56,883 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:28:56,883 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing collection mappings
  2015-06-09 20:28:56,883 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.securities.Company.segmentSet
  2015-06-09 20:28:56,883 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding as ManyToMany: com.cmm.jft.trading.securities.Company.segmentSet
  2015-06-09 20:28:56,888 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: companyID, element: segmentID
  2015-06-09 20:28:56,888 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.financial.Account.childAccounts
  2015-06-09 20:28:56,889 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.financial.Account.childAccounts through a foreign key
  2015-06-09 20:28:56,889 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.financial.Account.childAccounts -> Account
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.financial.Account.fatherAccountID
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: fatherAccountID, one-to-many: com.cmm.jft.financial.Account
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.financial.Account.depositSet
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.financial.Account.depositSet through a foreign key
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.financial.Account.depositSet -> Deposit
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.financial.Deposit.depositAccount
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: DepositAccount, one-to-many: com.cmm.jft.financial.Deposit
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.financial.Account.entryRegisterCrdtSet
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.financial.Account.entryRegisterCrdtSet through a foreign key
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.financial.Account.entryRegisterCrdtSet -> EntryRegister
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.financial.EntryRegister.creditAccountID
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: creditAccountID, one-to-many: com.cmm.jft.financial.EntryRegister
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.financial.Account.entryRegisterDbtSet
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.financial.Account.entryRegisterDbtSet through a foreign key
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.financial.Account.entryRegisterDbtSet -> EntryRegister
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.financial.EntryRegister.debitAccountID
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: debitAccountID, one-to-many: com.cmm.jft.financial.EntryRegister
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.financial.Account.ruleCrdtAccSet
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.financial.Account.ruleCrdtAccSet through a foreign key
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.financial.Account.ruleCrdtAccSet -> Rule
  2015-06-09 20:28:56,890 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.financial.Rule.creditAccountID
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: creditAccountID, one-to-many: com.cmm.jft.financial.Rule
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.financial.Account.ruleDbtAccSet
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.financial.Account.ruleDbtAccSet through a foreign key
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.financial.Account.ruleDbtAccSet -> Rule
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.financial.Rule.debitAccountID
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: debitAccountID, one-to-many: com.cmm.jft.financial.Rule
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.financial.Currency.accountSet
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.financial.Currency.accountSet through a foreign key
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.financial.Currency.accountSet -> Account
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.financial.Account.currencyID
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: currencyID, one-to-many: com.cmm.jft.financial.Account
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.financial.Currency.currencyQuoteSet
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.financial.Currency.currencyQuoteSet through a foreign key
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.financial.Currency.currencyQuoteSet -> CurrencyQuote
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.financial.CurrencyQuote.currencyID
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: currencyID, one-to-many: com.cmm.jft.financial.CurrencyQuote
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.financial.Currency.entryRegisterSet
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.financial.Currency.entryRegisterSet through a foreign key
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.financial.Currency.entryRegisterSet -> EntryRegister
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.financial.EntryRegister.currencyID
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: currencyID, one-to-many: com.cmm.jft.financial.EntryRegister
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.financial.Currency.securityInfoList
  2015-06-09 20:28:56,891 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.financial.Currency.securityInfoList through a foreign key
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.financial.Currency.securityInfoList -> SecurityInfo
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.securities.SecurityInfo.currencyID
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: currencyID, one-to-many: com.cmm.jft.trading.securities.SecurityInfo
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.financial.DistributionRule.ruleSet
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.financial.DistributionRule.ruleSet through a foreign key
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.financial.DistributionRule.ruleSet -> Rule
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.financial.Rule.distributionRuleID
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: distributionRuleID, one-to-many: com.cmm.jft.financial.Rule
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.financial.JournalEntry.entryRegisterSet
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.financial.JournalEntry.entryRegisterSet through a foreign key
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.financial.JournalEntry.entryRegisterSet -> EntryRegister
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.financial.EntryRegister.entryID
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: entryID, one-to-many: com.cmm.jft.financial.EntryRegister
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.financial.RuleFormula.ruleSet
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.financial.RuleFormula.ruleSet through a foreign key
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.financial.RuleFormula.ruleSet -> Rule
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.financial.Rule.ruleFormulaID
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: ruleFormulaID, one-to-many: com.cmm.jft.financial.Rule
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.financial.Tax.taxSetupSet
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.financial.Tax.taxSetupSet through a foreign key
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.financial.Tax.taxSetupSet -> TaxSetup
  2015-06-09 20:28:56,892 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.financial.TaxSetup.taxID
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: taxID, one-to-many: com.cmm.jft.financial.TaxSetup
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.financial.TaxSetup.ruleSet
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.financial.TaxSetup.ruleSet through a foreign key
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.financial.TaxSetup.ruleSet -> Rule
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.financial.Rule.taxSetupID
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: taxSetupID, one-to-many: com.cmm.jft.financial.Rule
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.account.Broker.brokerageList
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.trading.account.Broker.brokerageList through a foreign key
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.trading.account.Broker.brokerageList -> Brokerage
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.account.Brokerage.brokerID
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: brokerID, one-to-many: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.account.Broker.marketOrderSet
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.trading.account.Broker.marketOrderSet through a foreign key
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.trading.account.Broker.marketOrderSet -> MarketOrder
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.marketdata.MarketOrder.brokerID
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: brokerID, one-to-many: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.account.Brokerage.commissionList
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.trading.account.Brokerage.commissionList through a foreign key
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.trading.account.Brokerage.commissionList -> Commission
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.account.Commission.brokerageID
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: brokerageID, one-to-many: com.cmm.jft.trading.account.Commission
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.account.Brokerage.exchangeTaxList
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.trading.account.Brokerage.exchangeTaxList through a foreign key
  2015-06-09 20:28:56,893 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.trading.account.Brokerage.exchangeTaxList -> ExchangeTax
  2015-06-09 20:28:56,894 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.account.ExchangeTax.brokerageID
  2015-06-09 20:28:56,894 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: brokerageID, one-to-many: com.cmm.jft.trading.account.ExchangeTax
  2015-06-09 20:28:56,894 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.Orders.eventsList
  2015-06-09 20:28:56,894 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.trading.Orders.eventsList through a foreign key
  2015-06-09 20:28:56,894 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.trading.Orders.eventsList -> OrderEvent
  2015-06-09 20:28:56,894 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.OrderEvent.orderID
  2015-06-09 20:28:56,894 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: orderID, one-to-many: com.cmm.jft.trading.OrderEvent
  2015-06-09 20:28:56,894 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.Orders.executionsList
  2015-06-09 20:28:56,894 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.trading.Orders.executionsList through a foreign key
  2015-06-09 20:28:56,894 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.trading.Orders.executionsList -> OrderExecution
  2015-06-09 20:28:56,894 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.OrderExecution.orderID
  2015-06-09 20:28:56,894 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: orderID, one-to-many: com.cmm.jft.trading.OrderExecution
  2015-06-09 20:28:56,894 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.marketdata.MarketOrder.buyTradeList
  2015-06-09 20:28:56,894 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.trading.marketdata.MarketOrder.buyTradeList through a foreign key
  2015-06-09 20:28:56,894 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.trading.marketdata.MarketOrder.buyTradeList -> MarketTrade
  2015-06-09 20:28:56,894 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.marketdata.MarketTrade.buyOrderID
  2015-06-09 20:28:56,894 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: buyOrderID, one-to-many: com.cmm.jft.trading.marketdata.MarketTrade
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.marketdata.MarketOrder.eventsList
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.trading.marketdata.MarketOrder.eventsList through a foreign key
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.trading.marketdata.MarketOrder.eventsList -> MarketEvent
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.marketdata.MarketEvent.marketEventID
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: marketEventID, one-to-many: com.cmm.jft.trading.marketdata.MarketEvent
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.marketdata.MarketOrder.sellTradeList
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.trading.marketdata.MarketOrder.sellTradeList through a foreign key
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.trading.marketdata.MarketOrder.sellTradeList -> MarketTrade
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.marketdata.MarketTrade.sellOrderID
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: sellOrderID, one-to-many: com.cmm.jft.trading.marketdata.MarketTrade
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.securities.Country.exchangesList
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.trading.securities.Country.exchangesList through a foreign key
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.trading.securities.Country.exchangesList -> StockExchange
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.securities.StockExchange.countryID
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: countryID, one-to-many: com.cmm.jft.trading.securities.StockExchange
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.securities.StockExchange.companySet
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.trading.securities.StockExchange.companySet through a foreign key
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.trading.securities.StockExchange.companySet -> Company
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.securities.Company.stockExchangeID
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: stockExchangeID, one-to-many: com.cmm.jft.trading.securities.Company
  2015-06-09 20:28:56,895 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.securities.Sector.subsectorSet
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.trading.securities.Sector.subsectorSet through a foreign key
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.trading.securities.Sector.subsectorSet -> Subsector
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.securities.Subsector.sectorID
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: sectorID, one-to-many: com.cmm.jft.trading.securities.Subsector
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.securities.Segment.companySet
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding as ManyToMany: com.cmm.jft.trading.securities.Segment.companySet
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.securities.Company.segmentSet
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: segmentID, element: companyID
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.securities.Subsector.segmentSet
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.trading.securities.Subsector.segmentSet through a foreign key
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.trading.securities.Subsector.segmentSet -> Segment
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.securities.Segment.subsectorID
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: subsectorID, one-to-many: com.cmm.jft.trading.securities.Segment
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.securities.Index.indexCompositionSet
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.trading.securities.Index.indexCompositionSet through a foreign key
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.trading.securities.Index.indexCompositionSet -> IndexComposition
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.securities.IndexComposition.indexID
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: indexID, one-to-many: com.cmm.jft.trading.securities.IndexComposition
  2015-06-09 20:28:56,896 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.securities.Security.historicalQuoteSet
  2015-06-09 20:28:56,897 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.trading.securities.Security.historicalQuoteSet through a foreign key
  2015-06-09 20:28:56,897 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.trading.securities.Security.historicalQuoteSet -> HistoricalQuote
  2015-06-09 20:28:56,897 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.marketdata.HistoricalQuote.securityID
  2015-06-09 20:28:56,897 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: securityID, one-to-many: com.cmm.jft.trading.marketdata.HistoricalQuote
  2015-06-09 20:28:56,897 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.securities.Security.marketOrderSet
  2015-06-09 20:28:56,897 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.trading.securities.Security.marketOrderSet through a foreign key
  2015-06-09 20:28:56,897 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.trading.securities.Security.marketOrderSet -> MarketOrder
  2015-06-09 20:28:56,897 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.marketdata.MarketOrder.securityID
  2015-06-09 20:28:56,897 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: securityID, one-to-many: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:28:56,897 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Second pass for collection: com.cmm.jft.trading.securities.Security.ordersSet
  2015-06-09 20:28:56,898 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Binding a OneToMany: com.cmm.jft.trading.securities.Security.ordersSet through a foreign key
  2015-06-09 20:28:56,898 [main] (DEBUG) org.hibernate.cfg.annotations.CollectionBinder -> Mapping collection: com.cmm.jft.trading.securities.Security.ordersSet -> Orders
  2015-06-09 20:28:56,898 [main] (DEBUG) org.hibernate.cfg.annotations.TableBinder -> Retrieving property com.cmm.jft.trading.Orders.securityID
  2015-06-09 20:28:56,898 [main] (DEBUG) org.hibernate.cfg.CollectionSecondPass -> Mapped collection key: securityID, one-to-many: com.cmm.jft.trading.Orders
  2015-06-09 20:28:56,899 [main] (DEBUG) org.hibernate.cfg.annotations.PropertyBinder -> Building property securityID
  2015-06-09 20:28:56,900 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing native query and ResultSetMapping mappings
  2015-06-09 20:28:56,900 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing association property references
  2015-06-09 20:28:56,900 [main] (DEBUG) org.hibernate.cfg.Configuration -> Creating tables' unique integer identifiers
  2015-06-09 20:28:56,900 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing foreign key constraints
  2015-06-09 20:28:56,900 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:28:56,900 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:56,900 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:28:56,900 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:28:56,900 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.StockExchange
  2015-06-09 20:28:56,900 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Segment
  2015-06-09 20:28:56,900 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Company
  2015-06-09 20:28:56,900 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:28:56,900 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.JournalEntry
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Index
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.DistributionRule
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.RuleFormula
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.TaxSetup
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.SecurityInfo
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Subsector
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Country
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Sector
  2015-06-09 20:28:56,901 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Tax
  2015-06-09 20:28:56,914 [main] (DEBUG) org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator -> No JtaPlatform was specified, checking resolver
  2015-06-09 20:28:56,915 [main] (DEBUG) org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator -> No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
  2015-06-09 20:28:56,922 [main] (DEBUG) org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver -> Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
  2015-06-09 20:28:56,927 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Automatic flush during beforeCompletion(): disabled
  2015-06-09 20:28:56,927 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Automatic session close at end of transaction: disabled
  2015-06-09 20:28:56,927 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> JDBC batch size: 15
  2015-06-09 20:28:56,927 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> JDBC batch updates for versioned data: disabled
  2015-06-09 20:28:56,927 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Scrollable result sets: enabled
  2015-06-09 20:28:56,927 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Wrap result sets: disabled
  2015-06-09 20:28:56,927 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> JDBC3 getGeneratedKeys(): enabled
  2015-06-09 20:28:56,927 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> multi-tenancy strategy : NONE
  2015-06-09 20:28:56,928 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Connection release mode: auto
  2015-06-09 20:28:56,928 [main] (INFO) org.hibernate.engine.transaction.internal.TransactionFactoryInitiator -> HHH000399: Using default transaction strategy (direct JDBC transactions)
  2015-06-09 20:28:56,931 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Using BatchFetchStyle : LEGACY
  2015-06-09 20:28:56,931 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Default batch fetch size: 1
  2015-06-09 20:28:56,931 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Generate SQL with comments: disabled
  2015-06-09 20:28:56,932 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Order SQL updates by primary key: disabled
  2015-06-09 20:28:56,932 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Order SQL inserts for batching: disabled
  2015-06-09 20:28:56,932 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Default null ordering: none
  2015-06-09 20:28:56,932 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
  2015-06-09 20:28:56,938 [main] (INFO) org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory -> HHH000397: Using ASTQueryTranslatorFactory
  2015-06-09 20:28:56,938 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Query language substitutions: {}
  2015-06-09 20:28:56,938 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> JPA-QL strict compliance: disabled
  2015-06-09 20:28:56,938 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Second-level cache: enabled
  2015-06-09 20:28:56,938 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Query cache: enabled
  2015-06-09 20:28:56,939 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory
  2015-06-09 20:28:56,968 [main] (DEBUG) org.hibernate.cache.internal.RegionFactoryInitiator -> Cache region factory : org.hibernate.cache.ehcache.EhCacheRegionFactory
  2015-06-09 20:28:56,969 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Optimize cache for minimal puts: enabled
  2015-06-09 20:28:56,969 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Structured second-level cache entries: disabled
  2015-06-09 20:28:56,969 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Second-level cache direct-reference entries: disabled
  2015-06-09 20:28:56,969 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Automatic eviction of collection cache: disabled
  2015-06-09 20:28:56,969 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Statistics: disabled
  2015-06-09 20:28:56,969 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Deleted entity synthetic identifier rollback: disabled
  2015-06-09 20:28:56,969 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Default entity-mode: pojo
  2015-06-09 20:28:56,969 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Named query checking : enabled
  2015-06-09 20:28:56,969 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  2015-06-09 20:28:56,969 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> Allow initialization of lazy state outside session : : disabled
  2015-06-09 20:28:56,969 [main] (DEBUG) org.hibernate.cfg.SettingsFactory -> JTA Track by Thread: enabled
  2015-06-09 20:28:56,984 [main] (DEBUG) org.hibernate.internal.SessionFactoryImpl -> Building session factory
  2015-06-09 20:28:57,460 [main] (INFO) org.hibernate.cache.spi.UpdateTimestampsCache -> HHH000250: Starting update timestamps cache at region: org.hibernate.cache.spi.UpdateTimestampsCache
  2015-06-09 20:28:57,464 [main] (WARN) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> HHH020003: Could not find a specific ehcache configuration for cache named [org.hibernate.cache.spi.UpdateTimestampsCache]; using defaults.
  2015-06-09 20:28:57,496 [main] (DEBUG) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> started EHCache region: org.hibernate.cache.spi.UpdateTimestampsCache
  2015-06-09 20:28:57,500 [main] (INFO) org.hibernate.cache.internal.StandardQueryCache -> HHH000248: Starting query cache at region: org.hibernate.cache.internal.StandardQueryCache
  2015-06-09 20:28:57,501 [main] (WARN) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> HHH020003: Could not find a specific ehcache configuration for cache named [org.hibernate.cache.internal.StandardQueryCache]; using defaults.
  2015-06-09 20:28:57,502 [main] (DEBUG) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> started EHCache region: org.hibernate.cache.internal.StandardQueryCache
  2015-06-09 20:28:57,505 [main] (DEBUG) org.hibernate.internal.SessionFactoryImpl -> Session factory constructed with filter configurations : {}
  2015-06-09 20:28:57,505 [main] (DEBUG) org.hibernate.internal.SessionFactoryImpl -> Instantiating session factory with properties: {java.vendor=Oracle Corporation, show_sql=false, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:postgresql://localhost:5432/StockData, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 8, hbm2ddl.auto=create-drop, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_40\lib\resources.jar;C:\Program Files\Java\jre1.8.0_40\lib\rt.jar;C:\Program Files\Java\jre1.8.0_40\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_40\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_40\lib\jce.jar;C:\Program Files\Java\jre1.8.0_40\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_40\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_40\classes, user.country.format=BR, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_40-b26, user.name=Cristiano, user.language.format=pt, connection.driver_class=org.postgresql.Driver, current_session_context_class=thread, user.language=en, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_40\bin, dialect=org.hibernate.dialect.PostgreSQLDialect, java.version=1.8.0_40, user.timezone=America/Sao_Paulo, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_40\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=US, connection.url=jdbc:postgresql://localhost:5432/StockData, java.home=C:\Program Files\Java\jre1.8.0_40, java.vm.info=mixed mode, os.version=6.2, path.separator=;, connection.password=287463, java.vm.version=25.40-b25, hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory, hibernate.connection.password=287463, user.variant=, sun.awt.enableExtraMouseButtons=true, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=stockdata, user.script=, user.home=C:\Users\Cristiano, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=create-drop, java.library.path=C:\Program Files\Java\jre1.8.0_40\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_40/bin/server;C:/Program Files/Java/jre1.8.0_40/bin;C:/Program Files/Java/jre1.8.0_40/lib/amd64;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.0\bin;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.0\libnvvp;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Programs\Oracle\orcluser\product\12.1.0\dbhome_3\bin;C:\Programs\Python27\;C:\Programs\Python27\Scripts;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_40\bin;C:\Program Files (x86)\Common Files\Roxio Shared\DLLShared\;C:\Program Files\MiKTeX 2.9\miktex\bin\x64\;C:\Program Files (x86)\MiKTeX 2.9\miktex\bin\;C:\Programs\apache-ant\bin;C:\Program Files (x86)\Git\cmd;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Programs\IDE\eclipse-jee-luna;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=org.postgresql.Driver, connection.username=stockdata, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=com.cmm.jft_ui.Main, java.class.path=C:\Disco\Workspaces\JFT\jft_modules\ui\target\classes;C:\Disco\Workspaces\JFT\jft_modules\lib\searchbox\SearchBox.jar;C:\Disco\Workspaces\JFT\jft_modules\lib\jcalendar\jcalendar-1.4.jar;C:\Disco\Workspaces\JFT\jft_modules\lib\jdbc\postgresql-9.0-801.jdbc4.jar;C:\Users\Cristiano\.m2\repository\com\toedter\jcalendar\1.4\jcalendar-1.4.jar;C:\Users\Cristiano\.m2\repository\unknown\binary\SearchBox\SNAPSHOT\SearchBox-SNAPSHOT.jar;C:\Disco\Workspaces\JFT\jft_modules\db\target\classes;C:\Disco\Workspaces\JFT\jft_modules\logging\target\classes;C:\Users\Cristiano\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Cristiano\.m2\repository\org\hibernate\hibernate-core\4.3.10.Final\hibernate-core-4.3.10.Final.jar;C:\Users\Cristiano\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\Cristiano\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\Cristiano\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\Cristiano\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cristiano\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cristiano\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\Cristiano\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Cristiano\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\Cristiano\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cristiano\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\Cristiano\.m2\repository\org\hibernate\hibernate-ehcache\4.3.10.Final\hibernate-ehcache-4.3.10.Final.jar;C:\Users\Cristiano\.m2\repository\net\sf\ehcache\ehcache-core\2.4.3\ehcache-core-2.4.3.jar;C:\Users\Cristiano\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Disco\Workspaces\JFT\jft_modules\core\target\classes;C:\Users\Cristiano\.m2\repository\bsh\bsh\1.3.0\bsh-1.3.0.jar;C:\Disco\Workspaces\JFT\jft_modules\jft_model\target\classes;C:\Disco\Workspaces\JFT\jft_modules\lib\quickfixj\mina-core-1.1.7.jar;C:\Disco\Workspaces\JFT\jft_modules\lib\quickfixj\quickfixj-all-1.5.3.jar;C:\Disco\Workspaces\JFT\jft_modules\lib\quickfixj\quickfixj-core-1.5.3.jar;C:\Disco\Workspaces\JFT\jft_modules\lib\quickfixj\quickfixj-examples-1.5.3.jar;C:\Disco\Workspaces\JFT\jft_modules\data\target\classes;C:\Disco\Workspaces\JFT\jft_modules\lib\ftp4j\ftp4j-1.7.2.jar;C:\Disco\Workspaces\JFT\jft_modules\lib\jdde\pretty-tools-JDDE-2.0.1.jar;C:\Disco\Workspaces\JFT\jft_modules\lib\jxl\jxl.jar;C:\Disco\Workspaces\JFT\jft_modules\lib\jsoup\jsoup-1.8.1.jar;C:\Users\Cristiano\.m2\repository\org\apache\pdfbox\pdfbox-ant\1.8.9\pdfbox-ant-1.8.9.jar;C:\Users\Cristiano\.m2\repository\org\apache\pdfbox\pdfbox\1.8.9\pdfbox-1.8.9.jar;C:\Users\Cristiano\.m2\repository\org\apache\pdfbox\fontbox\1.8.9\fontbox-1.8.9.jar;C:\Users\Cristiano\.m2\repository\org\apache\pdfbox\jempbox\1.8.9\jempbox-1.8.9.jar;C:\Users\Cristiano\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cristiano\.m2\repository\org\apache\ant\ant\1.8.1\ant-1.8.1.jar;C:\Users\Cristiano\.m2\repository\org\apache\ant\ant-launcher\1.8.1\ant-launcher-1.8.1.jar;C:\Users\Cristiano\.m2\repository\com\sun\mail\javax.mail\1.5.3\javax.mail-1.5.3.jar;C:\Users\Cristiano\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, hibernate.cache.use_query_cache=true, connection.pool_size=1, java.io.tmpdir=C:\Users\CRISTI~1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jre1.8.0_40\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Disco\Workspaces\JFT\jft_modules\ui, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.cache.use_second_level_cache=true, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.pool_size=1, hibernate.show_sql=false}
  2015-06-09 20:28:57,521 [main] (DEBUG) org.hibernate.secure.spi.JaccIntegrator -> Skipping JACC integration as it was not enabled
  2015-06-09 20:28:57,521 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,523 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,524 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,525 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,526 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,526 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,526 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,526 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,526 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,526 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,526 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,526 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,526 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,526 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,527 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,527 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,527 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,527 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,527 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,527 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,527 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:57,689 [main] (WARN) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> HHH020003: Could not find a specific ehcache configuration for cache named [com.cmm.jft.financial.DistributionRule]; using defaults.
  2015-06-09 20:28:57,690 [main] (DEBUG) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> started EHCache region: com.cmm.jft.financial.DistributionRule
  2015-06-09 20:28:57,820 [main] (WARN) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> HHH020003: Could not find a specific ehcache configuration for cache named [com.cmm.jft.financial.Rule]; using defaults.
  2015-06-09 20:28:57,822 [main] (DEBUG) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> started EHCache region: com.cmm.jft.financial.Rule
  2015-06-09 20:28:57,841 [main] (WARN) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> HHH020003: Could not find a specific ehcache configuration for cache named [com.cmm.jft.financial.EntryRegister]; using defaults.
  2015-06-09 20:28:57,842 [main] (DEBUG) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> started EHCache region: com.cmm.jft.financial.EntryRegister
  2015-06-09 20:28:57,875 [main] (ERROR) com.cmm.jft.core.Configuration -> .\jftcfg.properties (The system cannot find the file specified)
  java.io.FileNotFoundException: .\jftcfg.properties (The system cannot find the file specified)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(Unknown Source)
	at java.io.FileInputStream.<init>(Unknown Source)
	at java.io.FileInputStream.<init>(Unknown Source)
	at com.cmm.jft.core.Configuration.<init>(Configuration.java:62)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.hibernate.engine.internal.UnsavedValueFactory.instantiate(UnsavedValueFactory.java:57)
	at org.hibernate.engine.internal.UnsavedValueFactory.getUnsavedIdentifierValue(UnsavedValueFactory.java:85)
	at org.hibernate.tuple.PropertyFactory.buildIdentifierAttribute(PropertyFactory.java:87)
	at org.hibernate.tuple.entity.EntityMetamodel.<init>(EntityMetamodel.java:163)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:520)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:148)
	at sun.reflect.GeneratedConstructorAccessor20.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.hibernate.persister.internal.PersisterFactoryImpl.create(PersisterFactoryImpl.java:163)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:135)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:401)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1859)
	at com.cmm.jft.db.DBFacade.<init>(DBFacade.java:80)
	at com.cmm.jft.db.DBFacade.getInstance(DBFacade.java:99)
	at com.cmm.jft_ui.Main.main(Main.java:28)
2015-06-09 20:28:57,926 [main] (WARN) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> HHH020003: Could not find a specific ehcache configuration for cache named [com.cmm.jft.financial.Deposit]; using defaults.
  2015-06-09 20:28:57,928 [main] (DEBUG) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> started EHCache region: com.cmm.jft.financial.Deposit
  2015-06-09 20:28:57,931 [main] (WARN) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> HHH020003: Could not find a specific ehcache configuration for cache named [com.cmm.jft.financial.TaxSetup]; using defaults.
  2015-06-09 20:28:57,934 [main] (DEBUG) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> started EHCache region: com.cmm.jft.financial.TaxSetup
  2015-06-09 20:28:57,971 [main] (WARN) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> HHH020003: Could not find a specific ehcache configuration for cache named [com.cmm.jft.financial.Tax]; using defaults.
  2015-06-09 20:28:57,974 [main] (DEBUG) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> started EHCache region: com.cmm.jft.financial.Tax
  2015-06-09 20:28:57,977 [main] (WARN) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> HHH020003: Could not find a specific ehcache configuration for cache named [com.cmm.jft.financial.Account]; using defaults.
  2015-06-09 20:28:57,979 [main] (DEBUG) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> started EHCache region: com.cmm.jft.financial.Account
  2015-06-09 20:28:57,992 [main] (WARN) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> HHH020003: Could not find a specific ehcache configuration for cache named [com.cmm.jft.financial.JournalEntry]; using defaults.
  2015-06-09 20:28:57,994 [main] (DEBUG) org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory -> started EHCache region: com.cmm.jft.financial.JournalEntry
  2015-06-09 20:28:58,022 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.Orders.executionsList
  2015-06-09 20:28:58,022 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update OrderExecution set orderID=? where orderExecutionID=?
  2015-06-09 20:28:58,022 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update OrderExecution set  where orderExecutionID=?
  2015-06-09 20:28:58,022 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update OrderExecution set orderID=null where orderID=? and orderExecutionID=?
  2015-06-09 20:28:58,022 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update OrderExecution set orderID=null where orderID=?
  2015-06-09 20:28:58,023 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.financial.TaxSetup.ruleSet
  2015-06-09 20:28:58,023 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update Rule set taxSetupID=? where ruleID=?
  2015-06-09 20:28:58,023 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update Rule set  where ruleID=?
  2015-06-09 20:28:58,023 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update Rule set taxSetupID=null where taxSetupID=? and ruleID=?
  2015-06-09 20:28:58,023 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update Rule set taxSetupID=null where taxSetupID=?
  2015-06-09 20:28:58,023 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.marketdata.MarketOrder.sellTradeList
  2015-06-09 20:28:58,023 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update MarketTrade set sellOrderID=? where marketTradeID=?
  2015-06-09 20:28:58,023 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update MarketTrade set  where marketTradeID=?
  2015-06-09 20:28:58,023 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update MarketTrade set sellOrderID=null where sellOrderID=? and marketTradeID=?
  2015-06-09 20:28:58,023 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update MarketTrade set sellOrderID=null where sellOrderID=?
  2015-06-09 20:28:58,125 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.securities.Company.segmentSet
  2015-06-09 20:28:58,125 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: insert into CompanySegment (companyID, segmentID) values (?, ?)
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update CompanySegment set segmentID=? where companyID=? and segmentID=?
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: delete from CompanySegment where companyID=? and segmentID=?
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: delete from CompanySegment where companyID=?
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.financial.Account.depositSet
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update Deposit set DepositAccount=? where depositID=?
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update Deposit set  where depositID=?
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update Deposit set DepositAccount=null where DepositAccount=? and depositID=?
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update Deposit set DepositAccount=null where DepositAccount=?
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.Orders.eventsList
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update OrderEvent set orderID=? where orderEventID=?
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update OrderEvent set  where orderEventID=?
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update OrderEvent set orderID=null where orderID=? and orderEventID=?
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update OrderEvent set orderID=null where orderID=?
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.securities.Segment.companySet
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: insert into CompanySegment (segmentID, companyID) values (?, ?)
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update CompanySegment set companyID=? where segmentID=? and companyID=?
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: delete from CompanySegment where segmentID=? and companyID=?
  2015-06-09 20:28:58,126 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: delete from CompanySegment where segmentID=?
  2015-06-09 20:28:58,127 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.financial.Currency.accountSet
  2015-06-09 20:28:58,127 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update Account set currencyID=? where accountID=?
  2015-06-09 20:28:58,127 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update Account set  where accountID=?
  2015-06-09 20:28:58,127 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update Account set currencyID=null where currencyID=? and accountID=?
  2015-06-09 20:28:58,127 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update Account set currencyID=null where currencyID=?
  2015-06-09 20:28:58,127 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.financial.Tax.taxSetupSet
  2015-06-09 20:28:58,127 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update TaxSetup set taxID=? where taxSetupID=?
  2015-06-09 20:28:58,127 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update TaxSetup set  where taxSetupID=?
  2015-06-09 20:28:58,127 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update TaxSetup set taxID=null where taxID=? and taxSetupID=?
  2015-06-09 20:28:58,127 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update TaxSetup set taxID=null where taxID=?
  2015-06-09 20:28:58,128 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.financial.Account.entryRegisterDbtSet
  2015-06-09 20:28:58,128 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update EntryRegister set debitAccountID=? where entryRegisterID=?
  2015-06-09 20:28:58,128 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update EntryRegister set  where entryRegisterID=?
  2015-06-09 20:28:58,128 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update EntryRegister set debitAccountID=null where debitAccountID=? and entryRegisterID=?
  2015-06-09 20:28:58,128 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update EntryRegister set debitAccountID=null where debitAccountID=?
  2015-06-09 20:28:58,128 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.financial.Account.entryRegisterCrdtSet
  2015-06-09 20:28:58,128 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update EntryRegister set creditAccountID=? where entryRegisterID=?
  2015-06-09 20:28:58,128 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update EntryRegister set  where entryRegisterID=?
  2015-06-09 20:28:58,128 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update EntryRegister set creditAccountID=null where creditAccountID=? and entryRegisterID=?
  2015-06-09 20:28:58,128 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update EntryRegister set creditAccountID=null where creditAccountID=?
  2015-06-09 20:28:58,129 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.financial.Account.childAccounts
  2015-06-09 20:28:58,129 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update Account set fatherAccountID=? where accountID=?
  2015-06-09 20:28:58,129 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update Account set  where accountID=?
  2015-06-09 20:28:58,129 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update Account set fatherAccountID=null where fatherAccountID=? and accountID=?
  2015-06-09 20:28:58,129 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update Account set fatherAccountID=null where fatherAccountID=?
  2015-06-09 20:28:58,130 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.marketdata.MarketOrder.eventsList
  2015-06-09 20:28:58,130 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update MarketEvent set marketEventID=? where marketEventID=?
  2015-06-09 20:28:58,130 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update MarketEvent set  where marketEventID=?
  2015-06-09 20:28:58,130 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update MarketEvent set marketEventID=null where marketEventID=?
  2015-06-09 20:28:58,130 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update MarketEvent set marketEventID=null where marketEventID=?
  2015-06-09 20:28:58,130 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.financial.Account.ruleCrdtAccSet
  2015-06-09 20:28:58,130 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update Rule set creditAccountID=? where ruleID=?
  2015-06-09 20:28:58,130 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update Rule set  where ruleID=?
  2015-06-09 20:28:58,130 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update Rule set creditAccountID=null where creditAccountID=? and ruleID=?
  2015-06-09 20:28:58,130 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update Rule set creditAccountID=null where creditAccountID=?
  2015-06-09 20:28:58,130 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.financial.Currency.currencyQuoteSet
  2015-06-09 20:28:58,130 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update CurrencyQuote set currencyID=? where currencyQuoteID=?
  2015-06-09 20:28:58,130 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update CurrencyQuote set  where currencyQuoteID=?
  2015-06-09 20:28:58,130 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update CurrencyQuote set currencyID=null where currencyID=? and currencyQuoteID=?
  2015-06-09 20:28:58,130 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update CurrencyQuote set currencyID=null where currencyID=?
  2015-06-09 20:28:58,131 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.financial.JournalEntry.entryRegisterSet
  2015-06-09 20:28:58,131 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update EntryRegister set entryID=? where entryRegisterID=?
  2015-06-09 20:28:58,131 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update EntryRegister set  where entryRegisterID=?
  2015-06-09 20:28:58,131 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update EntryRegister set entryID=null where entryID=? and entryRegisterID=?
  2015-06-09 20:28:58,131 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update EntryRegister set entryID=null where entryID=?
  2015-06-09 20:28:58,131 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.marketdata.MarketOrder.buyTradeList
  2015-06-09 20:28:58,131 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update MarketTrade set buyOrderID=? where marketTradeID=?
  2015-06-09 20:28:58,131 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update MarketTrade set  where marketTradeID=?
  2015-06-09 20:28:58,131 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update MarketTrade set buyOrderID=null where buyOrderID=? and marketTradeID=?
  2015-06-09 20:28:58,131 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update MarketTrade set buyOrderID=null where buyOrderID=?
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.financial.RuleFormula.ruleSet
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update Rule set ruleFormulaID=? where ruleID=?
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update Rule set  where ruleID=?
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update Rule set ruleFormulaID=null where ruleFormulaID=? and ruleID=?
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update Rule set ruleFormulaID=null where ruleFormulaID=?
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.account.Broker.brokerageList
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update Brokerage set brokerID=? where brokerageID=?
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update Brokerage set  where brokerageID=?
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update Brokerage set brokerID=null where brokerID=? and brokerageID=?
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update Brokerage set brokerID=null where brokerID=?
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.account.Brokerage.exchangeTaxList
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update ExchangeTax set brokerageID=? where exchangeTaxID=?
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update ExchangeTax set  where exchangeTaxID=?
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update ExchangeTax set brokerageID=null where brokerageID=? and exchangeTaxID=?
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update ExchangeTax set brokerageID=null where brokerageID=?
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.securities.Country.exchangesList
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update StockExchange set countryID=? where stockExchangeID=?
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update StockExchange set  where stockExchangeID=?
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update StockExchange set countryID=null where countryID=? and stockExchangeID=?
  2015-06-09 20:28:58,132 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update StockExchange set countryID=null where countryID=?
  2015-06-09 20:28:58,134 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.securities.StockExchange.companySet
  2015-06-09 20:28:58,134 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update Company set stockExchangeID=? where companyID=?
  2015-06-09 20:28:58,134 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update Company set  where companyID=?
  2015-06-09 20:28:58,134 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update Company set stockExchangeID=null where stockExchangeID=? and companyID=?
  2015-06-09 20:28:58,134 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update Company set stockExchangeID=null where stockExchangeID=?
  2015-06-09 20:28:58,134 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.securities.Security.historicalQuoteSet
  2015-06-09 20:28:58,134 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update HistoricalQuote set securityID=? where historicalQuoteID=?
  2015-06-09 20:28:58,134 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update HistoricalQuote set  where historicalQuoteID=?
  2015-06-09 20:28:58,134 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update HistoricalQuote set securityID=null where securityID=? and historicalQuoteID=?
  2015-06-09 20:28:58,134 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update HistoricalQuote set securityID=null where securityID=?
  2015-06-09 20:28:58,198 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.securities.Security.marketOrderSet
  2015-06-09 20:28:58,198 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update MarketOrder set securityID=? where marketOrderID=?
  2015-06-09 20:28:58,198 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update MarketOrder set  where marketOrderID=?
  2015-06-09 20:28:58,198 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update MarketOrder set securityID=null where securityID=? and marketOrderID=?
  2015-06-09 20:28:58,198 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update MarketOrder set securityID=null where securityID=?
  2015-06-09 20:28:58,198 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.securities.Index.indexCompositionSet
  2015-06-09 20:28:58,198 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update IndexComposition set indexID=? where indexCompID=?
  2015-06-09 20:28:58,198 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update IndexComposition set  where indexCompID=?
  2015-06-09 20:28:58,198 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update IndexComposition set indexID=null where indexID=? and indexCompID=?
  2015-06-09 20:28:58,198 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update IndexComposition set indexID=null where indexID=?
  2015-06-09 20:28:58,198 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.financial.Currency.entryRegisterSet
  2015-06-09 20:28:58,198 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update EntryRegister set currencyID=? where entryRegisterID=?
  2015-06-09 20:28:58,199 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update EntryRegister set  where entryRegisterID=?
  2015-06-09 20:28:58,199 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update EntryRegister set currencyID=null where currencyID=? and entryRegisterID=?
  2015-06-09 20:28:58,199 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update EntryRegister set currencyID=null where currencyID=?
  2015-06-09 20:28:58,199 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.securities.Security.ordersSet
  2015-06-09 20:28:58,199 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update Orders set securityID=? where orderID=?
  2015-06-09 20:28:58,199 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update Orders set  where orderID=?
  2015-06-09 20:28:58,199 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update Orders set securityID=null where securityID=? and orderID=?
  2015-06-09 20:28:58,199 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update Orders set securityID=null where securityID=?
  2015-06-09 20:28:58,199 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.account.Brokerage.commissionList
  2015-06-09 20:28:58,199 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update Commission set brokerageID=? where commissionID=?
  2015-06-09 20:28:58,200 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update Commission set  where commissionID=?
  2015-06-09 20:28:58,200 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update Commission set brokerageID=null where brokerageID=? and commissionID=?
  2015-06-09 20:28:58,200 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update Commission set brokerageID=null where brokerageID=?
  2015-06-09 20:28:58,200 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.account.Broker.marketOrderSet
  2015-06-09 20:28:58,200 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update MarketOrder set brokerID=? where marketOrderID=?
  2015-06-09 20:28:58,200 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update MarketOrder set  where marketOrderID=?
  2015-06-09 20:28:58,200 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update MarketOrder set brokerID=null where brokerID=? and marketOrderID=?
  2015-06-09 20:28:58,200 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update MarketOrder set brokerID=null where brokerID=?
  2015-06-09 20:28:58,200 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.financial.Account.ruleDbtAccSet
  2015-06-09 20:28:58,200 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update Rule set debitAccountID=? where ruleID=?
  2015-06-09 20:28:58,200 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update Rule set  where ruleID=?
  2015-06-09 20:28:58,200 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update Rule set debitAccountID=null where debitAccountID=? and ruleID=?
  2015-06-09 20:28:58,200 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update Rule set debitAccountID=null where debitAccountID=?
  2015-06-09 20:28:58,201 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.securities.Subsector.segmentSet
  2015-06-09 20:28:58,201 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update Segment set subsectorID=? where segmentID=?
  2015-06-09 20:28:58,201 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update Segment set  where segmentID=?
  2015-06-09 20:28:58,201 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update Segment set subsectorID=null where subsectorID=? and segmentID=?
  2015-06-09 20:28:58,201 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update Segment set subsectorID=null where subsectorID=?
  2015-06-09 20:28:58,201 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.financial.Currency.securityInfoList
  2015-06-09 20:28:58,201 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update SecurityInfo set currencyID=? where securityInfoID=?
  2015-06-09 20:28:58,201 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update SecurityInfo set  where securityInfoID=?
  2015-06-09 20:28:58,201 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update SecurityInfo set currencyID=null where currencyID=? and securityInfoID=?
  2015-06-09 20:28:58,201 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update SecurityInfo set currencyID=null where currencyID=?
  2015-06-09 20:28:58,201 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.financial.DistributionRule.ruleSet
  2015-06-09 20:28:58,201 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update Rule set distributionRuleID=? where ruleID=?
  2015-06-09 20:28:58,201 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update Rule set  where ruleID=?
  2015-06-09 20:28:58,201 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update Rule set distributionRuleID=null where distributionRuleID=? and ruleID=?
  2015-06-09 20:28:58,201 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update Rule set distributionRuleID=null where distributionRuleID=?
  2015-06-09 20:28:58,202 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister -> Static SQL for collection: com.cmm.jft.trading.securities.Sector.subsectorSet
  2015-06-09 20:28:58,202 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row insert: update Subsector set sectorID=? where subsectorID=?
  2015-06-09 20:28:58,202 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row update: update Subsector set  where subsectorID=?
  2015-06-09 20:28:58,202 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  Row delete: update Subsector set sectorID=null where sectorID=? and subsectorID=?
  2015-06-09 20:28:58,202 [main] (DEBUG) org.hibernate.persister.collection.AbstractCollectionPersister ->  One-shot delete: update Subsector set sectorID=null where sectorID=?
  2015-06-09 20:28:58,208 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.securities.Index
  2015-06-09 20:28:58,208 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select indexID from Index where indexID =?
  2015-06-09 20:28:58,208 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select index_.indexID, index_.Index as Index2_17_, index_.IndexName as IndexNam3_17_ from Index index_ where index_.indexID=?
  2015-06-09 20:28:58,208 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Index (Index, IndexName, indexID) values (?, ?, ?)
  2015-06-09 20:28:58,208 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Index set Index=?, IndexName=? where indexID=?
  2015-06-09 20:28:58,209 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Index where indexID=?
  2015-06-09 20:28:58,250 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8c11eee]
  2015-06-09 20:28:58,252 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : index
  2015-06-09 20:28:58,252 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexCompositionSet
  2015-06-09 20:28:58,256 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexName
  2015-06-09 20:28:58,257 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,282 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,292 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Index)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Index, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Index)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Index)
          - SQL table alias mapping - index0_
          - alias suffix - 0_
          - suffixed key columns - {indexID1_17_0_}

  2015-06-09 20:28:58,295 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Index [NONE]: select index0_.indexID as indexID1_17_0_, index0_.Index as Index2_17_0_, index0_.IndexName as IndexNam3_17_0_ from Index index0_ where index0_.indexID=?
  2015-06-09 20:28:58,295 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2371aaca]
  2015-06-09 20:28:58,296 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : index
  2015-06-09 20:28:58,296 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexCompositionSet
  2015-06-09 20:28:58,296 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexName
  2015-06-09 20:28:58,297 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,297 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,297 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Index)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Index, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Index)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Index)
          - SQL table alias mapping - index0_
          - alias suffix - 0_
          - suffixed key columns - {indexID1_17_0_}

  2015-06-09 20:28:58,297 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Index [READ]: select index0_.indexID as indexID1_17_0_, index0_.Index as Index2_17_0_, index0_.IndexName as IndexNam3_17_0_ from Index index0_ where index0_.indexID=?
  2015-06-09 20:28:58,297 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63fdab07]
  2015-06-09 20:28:58,297 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : index
  2015-06-09 20:28:58,297 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexCompositionSet
  2015-06-09 20:28:58,298 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexName
  2015-06-09 20:28:58,298 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,298 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,298 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Index)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Index, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Index)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Index)
          - SQL table alias mapping - index0_
          - alias suffix - 0_
          - suffixed key columns - {indexID1_17_0_}

  2015-06-09 20:28:58,298 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Index [UPGRADE]: select index0_.indexID as indexID1_17_0_, index0_.Index as Index2_17_0_, index0_.IndexName as IndexNam3_17_0_ from Index index0_ where index0_.indexID=? for update
  2015-06-09 20:28:58,298 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5553d0f5]
  2015-06-09 20:28:58,298 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : index
  2015-06-09 20:28:58,298 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexCompositionSet
  2015-06-09 20:28:58,298 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexName
  2015-06-09 20:28:58,298 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,299 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,299 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Index)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Index, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Index)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Index)
          - SQL table alias mapping - index0_
          - alias suffix - 0_
          - suffixed key columns - {indexID1_17_0_}

  2015-06-09 20:28:58,299 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Index [UPGRADE_NOWAIT]: select index0_.indexID as indexID1_17_0_, index0_.Index as Index2_17_0_, index0_.IndexName as IndexNam3_17_0_ from Index index0_ where index0_.indexID=? for update nowait 
  2015-06-09 20:28:58,299 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14dda234]
  2015-06-09 20:28:58,299 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : index
  2015-06-09 20:28:58,299 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexCompositionSet
  2015-06-09 20:28:58,299 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexName
  2015-06-09 20:28:58,300 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,300 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,300 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Index)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Index, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Index)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Index)
          - SQL table alias mapping - index0_
          - alias suffix - 0_
          - suffixed key columns - {indexID1_17_0_}

  2015-06-09 20:28:58,300 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Index [UPGRADE_SKIPLOCKED]: select index0_.indexID as indexID1_17_0_, index0_.Index as Index2_17_0_, index0_.IndexName as IndexNam3_17_0_ from Index index0_ where index0_.indexID=? for update
  2015-06-09 20:28:58,300 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74a6a609]
  2015-06-09 20:28:58,300 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : index
  2015-06-09 20:28:58,300 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexCompositionSet
  2015-06-09 20:28:58,300 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexName
  2015-06-09 20:28:58,300 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,300 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,300 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Index)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Index, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Index)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Index)
          - SQL table alias mapping - index0_
          - alias suffix - 0_
          - suffixed key columns - {indexID1_17_0_}

  2015-06-09 20:28:58,300 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Index [FORCE]: select index0_.indexID as indexID1_17_0_, index0_.Index as Index2_17_0_, index0_.IndexName as IndexNam3_17_0_ from Index index0_ where index0_.indexID=? for update nowait 
  2015-06-09 20:28:58,300 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2374d36a]
  2015-06-09 20:28:58,301 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : index
  2015-06-09 20:28:58,301 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexCompositionSet
  2015-06-09 20:28:58,301 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexName
  2015-06-09 20:28:58,301 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,301 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,303 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Index)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Index, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Index)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Index)
          - SQL table alias mapping - index0_
          - alias suffix - 0_
          - suffixed key columns - {indexID1_17_0_}

  2015-06-09 20:28:58,303 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Index [PESSIMISTIC_READ]: select index0_.indexID as indexID1_17_0_, index0_.Index as Index2_17_0_, index0_.IndexName as IndexNam3_17_0_ from Index index0_ where index0_.indexID=? for share
  2015-06-09 20:28:58,303 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1506f20f]
  2015-06-09 20:28:58,303 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : index
  2015-06-09 20:28:58,303 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexCompositionSet
  2015-06-09 20:28:58,303 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexName
  2015-06-09 20:28:58,303 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,303 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,303 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Index)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Index, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Index)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Index)
          - SQL table alias mapping - index0_
          - alias suffix - 0_
          - suffixed key columns - {indexID1_17_0_}

  2015-06-09 20:28:58,303 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Index [PESSIMISTIC_WRITE]: select index0_.indexID as indexID1_17_0_, index0_.Index as Index2_17_0_, index0_.IndexName as IndexNam3_17_0_ from Index index0_ where index0_.indexID=? for update
  2015-06-09 20:28:58,303 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@424fd310]
  2015-06-09 20:28:58,304 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : index
  2015-06-09 20:28:58,304 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexCompositionSet
  2015-06-09 20:28:58,304 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexName
  2015-06-09 20:28:58,304 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,304 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,304 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Index)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Index, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Index)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Index)
          - SQL table alias mapping - index0_
          - alias suffix - 0_
          - suffixed key columns - {indexID1_17_0_}

  2015-06-09 20:28:58,304 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Index [PESSIMISTIC_FORCE_INCREMENT]: select index0_.indexID as indexID1_17_0_, index0_.Index as Index2_17_0_, index0_.IndexName as IndexNam3_17_0_ from Index index0_ where index0_.indexID=? for update nowait 
  2015-06-09 20:28:58,304 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38f116f6]
  2015-06-09 20:28:58,304 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : index
  2015-06-09 20:28:58,304 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexCompositionSet
  2015-06-09 20:28:58,304 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexName
  2015-06-09 20:28:58,304 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,304 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,307 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Index)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Index, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Index)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Index)
          - SQL table alias mapping - index0_
          - alias suffix - 0_
          - suffixed key columns - {indexID1_17_0_}

  2015-06-09 20:28:58,307 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Index [OPTIMISTIC]: select index0_.indexID as indexID1_17_0_, index0_.Index as Index2_17_0_, index0_.IndexName as IndexNam3_17_0_ from Index index0_ where index0_.indexID=?
  2015-06-09 20:28:58,307 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e6d5d29]
  2015-06-09 20:28:58,307 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : index
  2015-06-09 20:28:58,307 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexCompositionSet
  2015-06-09 20:28:58,307 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexName
  2015-06-09 20:28:58,307 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,307 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,308 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Index)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Index, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Index)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Index)
          - SQL table alias mapping - index0_
          - alias suffix - 0_
          - suffixed key columns - {indexID1_17_0_}

  2015-06-09 20:28:58,308 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Index [OPTIMISTIC_FORCE_INCREMENT]: select index0_.indexID as indexID1_17_0_, index0_.Index as Index2_17_0_, index0_.IndexName as IndexNam3_17_0_ from Index index0_ where index0_.indexID=?
  2015-06-09 20:28:58,337 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.securities.Index: select index0_.indexID as indexID1_17_1_, index0_.Index as Index2_17_1_, index0_.IndexName as IndexNam3_17_1_, indexcompo1_.indexID as indexID3_17_3_, indexcompo1_.indexCompID as indexCom1_18_3_, indexcompo1_.indexCompID as indexCom1_18_0_, indexcompo1_.IndexDate as IndexDat2_18_0_, indexcompo1_.indexID as indexID3_18_0_, indexcompo1_.securityID as security4_18_0_ from Index index0_ left outer join IndexComposition indexcompo1_ on index0_.indexID=indexcompo1_.indexID where index0_.indexID=?
  2015-06-09 20:28:58,337 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.securities.Index: select index0_.indexID as indexID1_17_1_, index0_.Index as Index2_17_1_, index0_.IndexName as IndexNam3_17_1_, indexcompo1_.indexID as indexID3_17_3_, indexcompo1_.indexCompID as indexCom1_18_3_, indexcompo1_.indexCompID as indexCom1_18_0_, indexcompo1_.IndexDate as IndexDat2_18_0_, indexcompo1_.indexID as indexID3_18_0_, indexcompo1_.securityID as security4_18_0_ from Index index0_ left outer join IndexComposition indexcompo1_ on index0_.indexID=indexcompo1_.indexID where index0_.indexID=?
  2015-06-09 20:28:58,337 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.DistributionRule
  2015-06-09 20:28:58,337 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select distributionRuleID from DistributionRule where distributionRuleID =?
  2015-06-09 20:28:58,337 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select distributi_.distributionRuleID, distributi_.ObjectRule as ObjectRu2_12_, distributi_.RuleName as RuleName3_12_ from DistributionRule distributi_ where distributi_.distributionRuleID=?
  2015-06-09 20:28:58,337 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into DistributionRule (ObjectRule, RuleName, distributionRuleID) values (?, ?, ?)
  2015-06-09 20:28:58,338 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update DistributionRule set ObjectRule=?, RuleName=? where distributionRuleID=?
  2015-06-09 20:28:58,338 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from DistributionRule where distributionRuleID=?
  2015-06-09 20:28:58,338 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13f17eb4]
  2015-06-09 20:28:58,338 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectRule
  2015-06-09 20:28:58,338 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleName
  2015-06-09 20:28:58,338 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,342 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@246f8b8b]
  2015-06-09 20:28:58,346 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31aa3ca5]
  2015-06-09 20:28:58,348 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.applyTax
  2015-06-09 20:28:58,349 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.applyValue
  2015-06-09 20:28:58,349 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.creditAccountID
  2015-06-09 20:28:58,349 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.debitAccountID
  2015-06-09 20:28:58,349 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.distributionRuleID
  2015-06-09 20:28:58,349 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : ruleSet.distributionRuleID
  2015-06-09 20:28:58,349 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.object
  2015-06-09 20:28:58,349 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.ruleFormulaID
  2015-06-09 20:28:58,349 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.taxSetupID
  2015-06-09 20:28:58,350 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,350 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,354 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.DistributionRule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.DistributionRule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.DistributionRule)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.DistributionRule.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.DistributionRule.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.DistributionRule.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.DistributionRule)
          - SQL table alias mapping - distributi0_
          - alias suffix - 0_
          - suffixed key columns - {distribu1_12_0_}
          - JOIN (JoinDefinedByMetadata(ruleSet)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.cmm.jft.financial.DistributionRule.ruleSet)
                - SQL table alias mapping - ruleset1_
                - alias suffix - 1_
                - suffixed key columns - {distribu7_12_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - ruleID1_27_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.cmm.jft.financial.Rule)
                      - SQL table alias mapping - ruleset1_
                      - alias suffix - 2_
                      - suffixed key columns - {ruleID1_27_2_}

  2015-06-09 20:28:58,354 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.DistributionRule [NONE]: select distributi0_.distributionRuleID as distribu1_12_0_, distributi0_.ObjectRule as ObjectRu2_12_0_, distributi0_.RuleName as RuleName3_12_0_, ruleset1_.distributionRuleID as distribu7_12_1_, ruleset1_.ruleID as ruleID1_27_1_, ruleset1_.ruleID as ruleID1_27_2_, ruleset1_.ApplyTax as ApplyTax2_27_2_, ruleset1_.ApplyValue as ApplyVal3_27_2_, ruleset1_.creditAccountID as creditAc5_27_2_, ruleset1_.debitAccountID as debitAcc6_27_2_, ruleset1_.distributionRuleID as distribu7_27_2_, ruleset1_.Object as Object4_27_2_, ruleset1_.ruleFormulaID as ruleForm8_27_2_, ruleset1_.taxSetupID as taxSetup9_27_2_ from DistributionRule distributi0_ left outer join Rule ruleset1_ on distributi0_.distributionRuleID=ruleset1_.distributionRuleID where distributi0_.distributionRuleID=?
  2015-06-09 20:28:58,354 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b2c0e88]
  2015-06-09 20:28:58,354 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectRule
  2015-06-09 20:28:58,354 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleName
  2015-06-09 20:28:58,354 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,354 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c1bd0be]
  2015-06-09 20:28:58,354 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@476b0ae6]
  2015-06-09 20:28:58,354 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.applyTax
  2015-06-09 20:28:58,354 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.applyValue
  2015-06-09 20:28:58,354 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.creditAccountID
  2015-06-09 20:28:58,354 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.debitAccountID
  2015-06-09 20:28:58,354 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.distributionRuleID
  2015-06-09 20:28:58,354 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : ruleSet.distributionRuleID
  2015-06-09 20:28:58,354 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.object
  2015-06-09 20:28:58,354 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.ruleFormulaID
  2015-06-09 20:28:58,354 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.taxSetupID
  2015-06-09 20:28:58,357 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,357 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,360 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.DistributionRule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.DistributionRule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.DistributionRule)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.DistributionRule.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.DistributionRule.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.DistributionRule.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.DistributionRule)
          - SQL table alias mapping - distributi0_
          - alias suffix - 0_
          - suffixed key columns - {distribu1_12_0_}
          - JOIN (JoinDefinedByMetadata(ruleSet)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.cmm.jft.financial.DistributionRule.ruleSet)
                - SQL table alias mapping - ruleset1_
                - alias suffix - 1_
                - suffixed key columns - {distribu7_12_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - ruleID1_27_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.cmm.jft.financial.Rule)
                      - SQL table alias mapping - ruleset1_
                      - alias suffix - 2_
                      - suffixed key columns - {ruleID1_27_2_}

  2015-06-09 20:28:58,360 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.DistributionRule [READ]: select distributi0_.distributionRuleID as distribu1_12_0_, distributi0_.ObjectRule as ObjectRu2_12_0_, distributi0_.RuleName as RuleName3_12_0_, ruleset1_.distributionRuleID as distribu7_12_1_, ruleset1_.ruleID as ruleID1_27_1_, ruleset1_.ruleID as ruleID1_27_2_, ruleset1_.ApplyTax as ApplyTax2_27_2_, ruleset1_.ApplyValue as ApplyVal3_27_2_, ruleset1_.creditAccountID as creditAc5_27_2_, ruleset1_.debitAccountID as debitAcc6_27_2_, ruleset1_.distributionRuleID as distribu7_27_2_, ruleset1_.Object as Object4_27_2_, ruleset1_.ruleFormulaID as ruleForm8_27_2_, ruleset1_.taxSetupID as taxSetup9_27_2_ from DistributionRule distributi0_ left outer join Rule ruleset1_ on distributi0_.distributionRuleID=ruleset1_.distributionRuleID where distributi0_.distributionRuleID=?
  2015-06-09 20:28:58,360 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@549949be]
  2015-06-09 20:28:58,360 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectRule
  2015-06-09 20:28:58,360 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleName
  2015-06-09 20:28:58,360 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,360 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17a87e37]
  2015-06-09 20:28:58,360 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eeb318f]
  2015-06-09 20:28:58,360 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,360 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,361 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.DistributionRule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.DistributionRule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.DistributionRule)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.DistributionRule.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.DistributionRule.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.DistributionRule.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.DistributionRule)
          - SQL table alias mapping - distributi0_
          - alias suffix - 0_
          - suffixed key columns - {distribu1_12_0_}

  2015-06-09 20:28:58,361 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.DistributionRule [UPGRADE]: select distributi0_.distributionRuleID as distribu1_12_0_, distributi0_.ObjectRule as ObjectRu2_12_0_, distributi0_.RuleName as RuleName3_12_0_ from DistributionRule distributi0_ where distributi0_.distributionRuleID=? for update
  2015-06-09 20:28:58,361 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20a14b55]
  2015-06-09 20:28:58,361 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectRule
  2015-06-09 20:28:58,361 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleName
  2015-06-09 20:28:58,361 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,361 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6da00fb9]
  2015-06-09 20:28:58,361 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a202ccb]
  2015-06-09 20:28:58,361 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,362 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,363 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.DistributionRule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.DistributionRule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.DistributionRule)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.DistributionRule.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.DistributionRule.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.DistributionRule.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.DistributionRule)
          - SQL table alias mapping - distributi0_
          - alias suffix - 0_
          - suffixed key columns - {distribu1_12_0_}

  2015-06-09 20:28:58,363 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.DistributionRule [UPGRADE_NOWAIT]: select distributi0_.distributionRuleID as distribu1_12_0_, distributi0_.ObjectRule as ObjectRu2_12_0_, distributi0_.RuleName as RuleName3_12_0_ from DistributionRule distributi0_ where distributi0_.distributionRuleID=? for update nowait 
  2015-06-09 20:28:58,363 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20f12539]
  2015-06-09 20:28:58,363 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectRule
  2015-06-09 20:28:58,363 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleName
  2015-06-09 20:28:58,363 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,363 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18025ced]
  2015-06-09 20:28:58,363 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13cf7d52]
  2015-06-09 20:28:58,363 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,363 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,364 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.DistributionRule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.DistributionRule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.DistributionRule)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.DistributionRule.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.DistributionRule.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.DistributionRule.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.DistributionRule)
          - SQL table alias mapping - distributi0_
          - alias suffix - 0_
          - suffixed key columns - {distribu1_12_0_}

  2015-06-09 20:28:58,364 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.DistributionRule [UPGRADE_SKIPLOCKED]: select distributi0_.distributionRuleID as distribu1_12_0_, distributi0_.ObjectRule as ObjectRu2_12_0_, distributi0_.RuleName as RuleName3_12_0_ from DistributionRule distributi0_ where distributi0_.distributionRuleID=? for update
  2015-06-09 20:28:58,364 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3e4aff]
  2015-06-09 20:28:58,364 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectRule
  2015-06-09 20:28:58,364 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleName
  2015-06-09 20:28:58,364 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,364 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57459491]
  2015-06-09 20:28:58,364 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f0846c6]
  2015-06-09 20:28:58,364 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,364 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,365 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.DistributionRule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.DistributionRule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.DistributionRule)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.DistributionRule.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.DistributionRule.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.DistributionRule.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.DistributionRule)
          - SQL table alias mapping - distributi0_
          - alias suffix - 0_
          - suffixed key columns - {distribu1_12_0_}

  2015-06-09 20:28:58,366 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.DistributionRule [FORCE]: select distributi0_.distributionRuleID as distribu1_12_0_, distributi0_.ObjectRule as ObjectRu2_12_0_, distributi0_.RuleName as RuleName3_12_0_ from DistributionRule distributi0_ where distributi0_.distributionRuleID=? for update nowait 
  2015-06-09 20:28:58,366 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77a98a6a]
  2015-06-09 20:28:58,366 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectRule
  2015-06-09 20:28:58,366 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleName
  2015-06-09 20:28:58,366 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,366 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e10dc6]
  2015-06-09 20:28:58,366 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e22550a]
  2015-06-09 20:28:58,366 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,366 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,366 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.DistributionRule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.DistributionRule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.DistributionRule)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.DistributionRule.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.DistributionRule.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.DistributionRule.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.DistributionRule)
          - SQL table alias mapping - distributi0_
          - alias suffix - 0_
          - suffixed key columns - {distribu1_12_0_}

  2015-06-09 20:28:58,367 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.DistributionRule [PESSIMISTIC_READ]: select distributi0_.distributionRuleID as distribu1_12_0_, distributi0_.ObjectRule as ObjectRu2_12_0_, distributi0_.RuleName as RuleName3_12_0_ from DistributionRule distributi0_ where distributi0_.distributionRuleID=? for share
  2015-06-09 20:28:58,367 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45e37a7e]
  2015-06-09 20:28:58,367 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectRule
  2015-06-09 20:28:58,367 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleName
  2015-06-09 20:28:58,367 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,367 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6941827a]
  2015-06-09 20:28:58,367 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a7005d]
  2015-06-09 20:28:58,367 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,367 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,367 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.DistributionRule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.DistributionRule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.DistributionRule)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.DistributionRule.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.DistributionRule.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.DistributionRule.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.DistributionRule)
          - SQL table alias mapping - distributi0_
          - alias suffix - 0_
          - suffixed key columns - {distribu1_12_0_}

  2015-06-09 20:28:58,367 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.DistributionRule [PESSIMISTIC_WRITE]: select distributi0_.distributionRuleID as distribu1_12_0_, distributi0_.ObjectRule as ObjectRu2_12_0_, distributi0_.RuleName as RuleName3_12_0_ from DistributionRule distributi0_ where distributi0_.distributionRuleID=? for update
  2015-06-09 20:28:58,367 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bc9ba1d]
  2015-06-09 20:28:58,367 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectRule
  2015-06-09 20:28:58,367 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleName
  2015-06-09 20:28:58,367 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,372 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7516e4e5]
  2015-06-09 20:28:58,372 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@488eb7f2]
  2015-06-09 20:28:58,372 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,373 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,373 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.DistributionRule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.DistributionRule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.DistributionRule)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.DistributionRule.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.DistributionRule.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.DistributionRule.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.DistributionRule)
          - SQL table alias mapping - distributi0_
          - alias suffix - 0_
          - suffixed key columns - {distribu1_12_0_}

  2015-06-09 20:28:58,374 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.DistributionRule [PESSIMISTIC_FORCE_INCREMENT]: select distributi0_.distributionRuleID as distribu1_12_0_, distributi0_.ObjectRule as ObjectRu2_12_0_, distributi0_.RuleName as RuleName3_12_0_ from DistributionRule distributi0_ where distributi0_.distributionRuleID=? for update nowait 
  2015-06-09 20:28:58,374 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e81e5ac]
  2015-06-09 20:28:58,374 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectRule
  2015-06-09 20:28:58,374 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleName
  2015-06-09 20:28:58,374 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,375 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3fa2213]
  2015-06-09 20:28:58,375 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e7634b9]
  2015-06-09 20:28:58,375 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,376 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,376 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.DistributionRule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.DistributionRule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.DistributionRule)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.DistributionRule.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.DistributionRule.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.DistributionRule.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.DistributionRule)
          - SQL table alias mapping - distributi0_
          - alias suffix - 0_
          - suffixed key columns - {distribu1_12_0_}

  2015-06-09 20:28:58,377 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.DistributionRule [OPTIMISTIC]: select distributi0_.distributionRuleID as distribu1_12_0_, distributi0_.ObjectRule as ObjectRu2_12_0_, distributi0_.RuleName as RuleName3_12_0_ from DistributionRule distributi0_ where distributi0_.distributionRuleID=?
  2015-06-09 20:28:58,377 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f0b0a5e]
  2015-06-09 20:28:58,377 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectRule
  2015-06-09 20:28:58,377 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleName
  2015-06-09 20:28:58,377 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,377 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@320de594]
  2015-06-09 20:28:58,377 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dd1dc90]
  2015-06-09 20:28:58,378 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,378 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,378 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.DistributionRule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.DistributionRule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.DistributionRule)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.DistributionRule.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.DistributionRule.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.DistributionRule.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.DistributionRule)
          - SQL table alias mapping - distributi0_
          - alias suffix - 0_
          - suffixed key columns - {distribu1_12_0_}

  2015-06-09 20:28:58,379 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.DistributionRule [OPTIMISTIC_FORCE_INCREMENT]: select distributi0_.distributionRuleID as distribu1_12_0_, distributi0_.ObjectRule as ObjectRu2_12_0_, distributi0_.RuleName as RuleName3_12_0_ from DistributionRule distributi0_ where distributi0_.distributionRuleID=?
  2015-06-09 20:28:58,380 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.DistributionRule: select distributi0_.distributionRuleID as distribu1_12_1_, distributi0_.ObjectRule as ObjectRu2_12_1_, distributi0_.RuleName as RuleName3_12_1_, ruleset1_.distributionRuleID as distribu7_12_3_, ruleset1_.ruleID as ruleID1_27_3_, ruleset1_.ruleID as ruleID1_27_0_, ruleset1_.ApplyTax as ApplyTax2_27_0_, ruleset1_.ApplyValue as ApplyVal3_27_0_, ruleset1_.creditAccountID as creditAc5_27_0_, ruleset1_.debitAccountID as debitAcc6_27_0_, ruleset1_.distributionRuleID as distribu7_27_0_, ruleset1_.Object as Object4_27_0_, ruleset1_.ruleFormulaID as ruleForm8_27_0_, ruleset1_.taxSetupID as taxSetup9_27_0_ from DistributionRule distributi0_ left outer join Rule ruleset1_ on distributi0_.distributionRuleID=ruleset1_.distributionRuleID where distributi0_.distributionRuleID=?
  2015-06-09 20:28:58,381 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.DistributionRule: select distributi0_.distributionRuleID as distribu1_12_1_, distributi0_.ObjectRule as ObjectRu2_12_1_, distributi0_.RuleName as RuleName3_12_1_, ruleset1_.distributionRuleID as distribu7_12_3_, ruleset1_.ruleID as ruleID1_27_3_, ruleset1_.ruleID as ruleID1_27_0_, ruleset1_.ApplyTax as ApplyTax2_27_0_, ruleset1_.ApplyValue as ApplyVal3_27_0_, ruleset1_.creditAccountID as creditAc5_27_0_, ruleset1_.debitAccountID as debitAcc6_27_0_, ruleset1_.distributionRuleID as distribu7_27_0_, ruleset1_.Object as Object4_27_0_, ruleset1_.ruleFormulaID as ruleForm8_27_0_, ruleset1_.taxSetupID as taxSetup9_27_0_ from DistributionRule distributi0_ left outer join Rule ruleset1_ on distributi0_.distributionRuleID=ruleset1_.distributionRuleID where distributi0_.distributionRuleID=?
  2015-06-09 20:28:58,381 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.marketdata.MarketEvent
  2015-06-09 20:28:58,381 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select marketEventID from MarketEvent where marketEventID =?
  2015-06-09 20:28:58,382 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select marketeven_.marketEventID, marketeven_.EventDateTime as EventDat2_21_, marketeven_.EventType as EventTyp3_21_, marketeven_.marketOrderID as marketOr5_21_, marketeven_.Message as Message4_21_ from MarketEvent marketeven_ where marketeven_.marketEventID=?
  2015-06-09 20:28:58,382 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into MarketEvent (EventDateTime, EventType, marketOrderID, Message, marketEventID) values (?, ?, ?, ?, ?)
  2015-06-09 20:28:58,382 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update MarketEvent set EventDateTime=?, EventType=?, marketOrderID=?, Message=? where marketEventID=?
  2015-06-09 20:28:58,382 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from MarketEvent where marketEventID=?
  2015-06-09 20:28:58,382 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@abf688e]
  2015-06-09 20:28:58,382 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,382 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,382 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderID
  2015-06-09 20:28:58,382 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,382 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,382 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,383 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketEvent)
          - SQL table alias mapping - marketeven0_
          - alias suffix - 0_
          - suffixed key columns - {marketEv1_21_0_}

  2015-06-09 20:28:58,383 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketEvent [NONE]: select marketeven0_.marketEventID as marketEv1_21_0_, marketeven0_.EventDateTime as EventDat2_21_0_, marketeven0_.EventType as EventTyp3_21_0_, marketeven0_.marketOrderID as marketOr5_21_0_, marketeven0_.Message as Message4_21_0_ from MarketEvent marketeven0_ where marketeven0_.marketEventID=?
  2015-06-09 20:28:58,383 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7288a3]
  2015-06-09 20:28:58,383 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,383 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,383 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderID
  2015-06-09 20:28:58,383 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,383 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,383 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,384 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketEvent)
          - SQL table alias mapping - marketeven0_
          - alias suffix - 0_
          - suffixed key columns - {marketEv1_21_0_}

  2015-06-09 20:28:58,384 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketEvent [READ]: select marketeven0_.marketEventID as marketEv1_21_0_, marketeven0_.EventDateTime as EventDat2_21_0_, marketeven0_.EventType as EventTyp3_21_0_, marketeven0_.marketOrderID as marketOr5_21_0_, marketeven0_.Message as Message4_21_0_ from MarketEvent marketeven0_ where marketeven0_.marketEventID=?
  2015-06-09 20:28:58,384 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58fe0499]
  2015-06-09 20:28:58,384 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,384 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,384 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderID
  2015-06-09 20:28:58,384 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,384 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,384 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,385 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketEvent)
          - SQL table alias mapping - marketeven0_
          - alias suffix - 0_
          - suffixed key columns - {marketEv1_21_0_}

  2015-06-09 20:28:58,385 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketEvent [UPGRADE]: select marketeven0_.marketEventID as marketEv1_21_0_, marketeven0_.EventDateTime as EventDat2_21_0_, marketeven0_.EventType as EventTyp3_21_0_, marketeven0_.marketOrderID as marketOr5_21_0_, marketeven0_.Message as Message4_21_0_ from MarketEvent marketeven0_ where marketeven0_.marketEventID=? for update
  2015-06-09 20:28:58,385 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@665df3c6]
  2015-06-09 20:28:58,385 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,385 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,385 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderID
  2015-06-09 20:28:58,385 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,385 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,385 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,386 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketEvent)
          - SQL table alias mapping - marketeven0_
          - alias suffix - 0_
          - suffixed key columns - {marketEv1_21_0_}

  2015-06-09 20:28:58,386 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketEvent [UPGRADE_NOWAIT]: select marketeven0_.marketEventID as marketEv1_21_0_, marketeven0_.EventDateTime as EventDat2_21_0_, marketeven0_.EventType as EventTyp3_21_0_, marketeven0_.marketOrderID as marketOr5_21_0_, marketeven0_.Message as Message4_21_0_ from MarketEvent marketeven0_ where marketeven0_.marketEventID=? for update nowait 
  2015-06-09 20:28:58,386 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4044fb95]
  2015-06-09 20:28:58,386 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,386 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,386 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderID
  2015-06-09 20:28:58,386 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,386 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,386 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,387 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketEvent)
          - SQL table alias mapping - marketeven0_
          - alias suffix - 0_
          - suffixed key columns - {marketEv1_21_0_}

  2015-06-09 20:28:58,387 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketEvent [UPGRADE_SKIPLOCKED]: select marketeven0_.marketEventID as marketEv1_21_0_, marketeven0_.EventDateTime as EventDat2_21_0_, marketeven0_.EventType as EventTyp3_21_0_, marketeven0_.marketOrderID as marketOr5_21_0_, marketeven0_.Message as Message4_21_0_ from MarketEvent marketeven0_ where marketeven0_.marketEventID=? for update
  2015-06-09 20:28:58,387 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36f48b4]
  2015-06-09 20:28:58,387 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,387 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,387 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderID
  2015-06-09 20:28:58,388 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,388 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,388 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,389 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketEvent)
          - SQL table alias mapping - marketeven0_
          - alias suffix - 0_
          - suffixed key columns - {marketEv1_21_0_}

  2015-06-09 20:28:58,389 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketEvent [FORCE]: select marketeven0_.marketEventID as marketEv1_21_0_, marketeven0_.EventDateTime as EventDat2_21_0_, marketeven0_.EventType as EventTyp3_21_0_, marketeven0_.marketOrderID as marketOr5_21_0_, marketeven0_.Message as Message4_21_0_ from MarketEvent marketeven0_ where marketeven0_.marketEventID=? for update nowait 
  2015-06-09 20:28:58,389 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b7ff809]
  2015-06-09 20:28:58,389 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,389 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,389 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderID
  2015-06-09 20:28:58,389 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,389 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,390 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,391 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketEvent)
          - SQL table alias mapping - marketeven0_
          - alias suffix - 0_
          - suffixed key columns - {marketEv1_21_0_}

  2015-06-09 20:28:58,391 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketEvent [PESSIMISTIC_READ]: select marketeven0_.marketEventID as marketEv1_21_0_, marketeven0_.EventDateTime as EventDat2_21_0_, marketeven0_.EventType as EventTyp3_21_0_, marketeven0_.marketOrderID as marketOr5_21_0_, marketeven0_.Message as Message4_21_0_ from MarketEvent marketeven0_ where marketeven0_.marketEventID=? for share
  2015-06-09 20:28:58,391 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62e6b5c8]
  2015-06-09 20:28:58,391 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,391 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,391 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderID
  2015-06-09 20:28:58,391 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,391 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,392 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,393 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketEvent)
          - SQL table alias mapping - marketeven0_
          - alias suffix - 0_
          - suffixed key columns - {marketEv1_21_0_}

  2015-06-09 20:28:58,393 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketEvent [PESSIMISTIC_WRITE]: select marketeven0_.marketEventID as marketEv1_21_0_, marketeven0_.EventDateTime as EventDat2_21_0_, marketeven0_.EventType as EventTyp3_21_0_, marketeven0_.marketOrderID as marketOr5_21_0_, marketeven0_.Message as Message4_21_0_ from MarketEvent marketeven0_ where marketeven0_.marketEventID=? for update
  2015-06-09 20:28:58,393 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b8233cd]
  2015-06-09 20:28:58,393 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,393 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,393 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderID
  2015-06-09 20:28:58,393 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,393 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,394 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,394 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketEvent)
          - SQL table alias mapping - marketeven0_
          - alias suffix - 0_
          - suffixed key columns - {marketEv1_21_0_}

  2015-06-09 20:28:58,394 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketEvent [PESSIMISTIC_FORCE_INCREMENT]: select marketeven0_.marketEventID as marketEv1_21_0_, marketeven0_.EventDateTime as EventDat2_21_0_, marketeven0_.EventType as EventTyp3_21_0_, marketeven0_.marketOrderID as marketOr5_21_0_, marketeven0_.Message as Message4_21_0_ from MarketEvent marketeven0_ where marketeven0_.marketEventID=? for update nowait 
  2015-06-09 20:28:58,394 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cbf6e72]
  2015-06-09 20:28:58,394 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,394 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,394 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderID
  2015-06-09 20:28:58,394 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,394 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,395 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,395 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketEvent)
          - SQL table alias mapping - marketeven0_
          - alias suffix - 0_
          - suffixed key columns - {marketEv1_21_0_}

  2015-06-09 20:28:58,395 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketEvent [OPTIMISTIC]: select marketeven0_.marketEventID as marketEv1_21_0_, marketeven0_.EventDateTime as EventDat2_21_0_, marketeven0_.EventType as EventTyp3_21_0_, marketeven0_.marketOrderID as marketOr5_21_0_, marketeven0_.Message as Message4_21_0_ from MarketEvent marketeven0_ where marketeven0_.marketEventID=?
  2015-06-09 20:28:58,395 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1af146]
  2015-06-09 20:28:58,395 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,395 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,395 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderID
  2015-06-09 20:28:58,395 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,395 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,395 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,396 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketEvent)
          - SQL table alias mapping - marketeven0_
          - alias suffix - 0_
          - suffixed key columns - {marketEv1_21_0_}

  2015-06-09 20:28:58,396 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketEvent [OPTIMISTIC_FORCE_INCREMENT]: select marketeven0_.marketEventID as marketEv1_21_0_, marketeven0_.EventDateTime as EventDat2_21_0_, marketeven0_.EventType as EventTyp3_21_0_, marketeven0_.marketOrderID as marketOr5_21_0_, marketeven0_.Message as Message4_21_0_ from MarketEvent marketeven0_ where marketeven0_.marketEventID=?
  2015-06-09 20:28:58,398 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.marketdata.MarketEvent: select marketeven0_.marketEventID as marketEv1_21_2_, marketeven0_.EventDateTime as EventDat2_21_2_, marketeven0_.EventType as EventTyp3_21_2_, marketeven0_.marketOrderID as marketOr5_21_2_, marketeven0_.Message as Message4_21_2_, marketorde1_.marketOrderID as marketOr1_22_0_, marketorde1_.brokerID as brokerID9_22_0_, marketorde1_.ExpirationDate as Expirati2_22_0_, marketorde1_.ExternalID as External3_22_0_, marketorde1_.OrderDateTime as OrderDat4_22_0_, marketorde1_.OrderStatus as OrderSta5_22_0_, marketorde1_.Price as Price6_22_0_, marketorde1_.securityID as securit10_22_0_, marketorde1_.Side as Side7_22_0_, marketorde1_.Volume as Volume8_22_0_, buytradeli2_.buyOrderID as buyOrder5_22_4_, buytradeli2_.marketTradeID as marketTr1_23_4_, buytradeli2_.marketTradeID as marketTr1_23_1_, buytradeli2_.buyOrderID as buyOrder5_23_1_, buytradeli2_.Price as Price2_23_1_, buytradeli2_.sellOrderID as sellOrde6_23_1_, buytradeli2_.TradeDateTime as TradeDat3_23_1_, buytradeli2_.Volume as Volume4_23_1_ from MarketEvent marketeven0_ left outer join MarketOrder marketorde1_ on marketeven0_.marketOrderID=marketorde1_.marketOrderID left outer join MarketTrade buytradeli2_ on marketorde1_.marketOrderID=buytradeli2_.buyOrderID where marketeven0_.marketEventID=?
  2015-06-09 20:28:58,399 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.marketdata.MarketEvent: select marketeven0_.marketEventID as marketEv1_21_2_, marketeven0_.EventDateTime as EventDat2_21_2_, marketeven0_.EventType as EventTyp3_21_2_, marketeven0_.marketOrderID as marketOr5_21_2_, marketeven0_.Message as Message4_21_2_, marketorde1_.marketOrderID as marketOr1_22_0_, marketorde1_.brokerID as brokerID9_22_0_, marketorde1_.ExpirationDate as Expirati2_22_0_, marketorde1_.ExternalID as External3_22_0_, marketorde1_.OrderDateTime as OrderDat4_22_0_, marketorde1_.OrderStatus as OrderSta5_22_0_, marketorde1_.Price as Price6_22_0_, marketorde1_.securityID as securit10_22_0_, marketorde1_.Side as Side7_22_0_, marketorde1_.Volume as Volume8_22_0_, buytradeli2_.buyOrderID as buyOrder5_22_4_, buytradeli2_.marketTradeID as marketTr1_23_4_, buytradeli2_.marketTradeID as marketTr1_23_1_, buytradeli2_.buyOrderID as buyOrder5_23_1_, buytradeli2_.Price as Price2_23_1_, buytradeli2_.sellOrderID as sellOrde6_23_1_, buytradeli2_.TradeDateTime as TradeDat3_23_1_, buytradeli2_.Volume as Volume4_23_1_ from MarketEvent marketeven0_ left outer join MarketOrder marketorde1_ on marketeven0_.marketOrderID=marketorde1_.marketOrderID left outer join MarketTrade buytradeli2_ on marketorde1_.marketOrderID=buytradeli2_.buyOrderID where marketeven0_.marketEventID=?
  2015-06-09 20:28:58,400 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.securities.Company
  2015-06-09 20:28:58,400 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select companyID from Company where companyID =?
  2015-06-09 20:28:58,400 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select company_.companyID, company_.CNPJ as CNPJ2_4_, company_.CompanyDate as CompanyD3_4_, company_.CompanyName as CompanyN4_4_, company_.MarketName as MarketNa5_4_, company_.OnShares as OnShares6_4_, company_.PnShares as PnShares7_4_, company_.Status as Status8_4_, company_.stockExchangeID as stockExc9_4_ from Company company_ where company_.companyID=?
  2015-06-09 20:28:58,400 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Company (CNPJ, CompanyDate, CompanyName, MarketName, OnShares, PnShares, Status, stockExchangeID, companyID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
  2015-06-09 20:28:58,400 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Company set CNPJ=?, CompanyDate=?, CompanyName=?, MarketName=?, OnShares=?, PnShares=?, Status=?, stockExchangeID=? where companyID=?
  2015-06-09 20:28:58,400 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Company where companyID=?
  2015-06-09 20:28:58,400 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a8d39c4]
  2015-06-09 20:28:58,400 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : cnpj
  2015-06-09 20:28:58,400 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyDate
  2015-06-09 20:28:58,400 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyName
  2015-06-09 20:28:58,400 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketName
  2015-06-09 20:28:58,400 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : onShares
  2015-06-09 20:28:58,400 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : pnShares
  2015-06-09 20:28:58,400 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,400 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,400 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stockExchangeID
  2015-06-09 20:28:58,400 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,401 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,402 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Company)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Company, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {companyI1_4_0_}

  2015-06-09 20:28:58,402 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Company [NONE]: select company0_.companyID as companyI1_4_0_, company0_.CNPJ as CNPJ2_4_0_, company0_.CompanyDate as CompanyD3_4_0_, company0_.CompanyName as CompanyN4_4_0_, company0_.MarketName as MarketNa5_4_0_, company0_.OnShares as OnShares6_4_0_, company0_.PnShares as PnShares7_4_0_, company0_.Status as Status8_4_0_, company0_.stockExchangeID as stockExc9_4_0_ from Company company0_ where company0_.companyID=?
  2015-06-09 20:28:58,402 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72758afa]
  2015-06-09 20:28:58,402 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : cnpj
  2015-06-09 20:28:58,402 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyDate
  2015-06-09 20:28:58,402 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyName
  2015-06-09 20:28:58,402 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketName
  2015-06-09 20:28:58,402 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : onShares
  2015-06-09 20:28:58,402 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : pnShares
  2015-06-09 20:28:58,402 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,402 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,402 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stockExchangeID
  2015-06-09 20:28:58,402 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,402 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,403 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Company)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Company, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {companyI1_4_0_}

  2015-06-09 20:28:58,403 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Company [READ]: select company0_.companyID as companyI1_4_0_, company0_.CNPJ as CNPJ2_4_0_, company0_.CompanyDate as CompanyD3_4_0_, company0_.CompanyName as CompanyN4_4_0_, company0_.MarketName as MarketNa5_4_0_, company0_.OnShares as OnShares6_4_0_, company0_.PnShares as PnShares7_4_0_, company0_.Status as Status8_4_0_, company0_.stockExchangeID as stockExc9_4_0_ from Company company0_ where company0_.companyID=?
  2015-06-09 20:28:58,403 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c398c80]
  2015-06-09 20:28:58,403 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : cnpj
  2015-06-09 20:28:58,403 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyDate
  2015-06-09 20:28:58,403 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyName
  2015-06-09 20:28:58,403 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketName
  2015-06-09 20:28:58,403 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : onShares
  2015-06-09 20:28:58,403 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : pnShares
  2015-06-09 20:28:58,403 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,403 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,403 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stockExchangeID
  2015-06-09 20:28:58,403 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,403 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,403 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Company)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Company, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {companyI1_4_0_}

  2015-06-09 20:28:58,404 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Company [UPGRADE]: select company0_.companyID as companyI1_4_0_, company0_.CNPJ as CNPJ2_4_0_, company0_.CompanyDate as CompanyD3_4_0_, company0_.CompanyName as CompanyN4_4_0_, company0_.MarketName as MarketNa5_4_0_, company0_.OnShares as OnShares6_4_0_, company0_.PnShares as PnShares7_4_0_, company0_.Status as Status8_4_0_, company0_.stockExchangeID as stockExc9_4_0_ from Company company0_ where company0_.companyID=? for update
  2015-06-09 20:28:58,404 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21baa903]
  2015-06-09 20:28:58,404 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : cnpj
  2015-06-09 20:28:58,404 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyDate
  2015-06-09 20:28:58,404 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyName
  2015-06-09 20:28:58,404 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketName
  2015-06-09 20:28:58,404 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : onShares
  2015-06-09 20:28:58,404 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : pnShares
  2015-06-09 20:28:58,404 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,404 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,404 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stockExchangeID
  2015-06-09 20:28:58,404 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,404 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,405 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Company)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Company, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {companyI1_4_0_}

  2015-06-09 20:28:58,405 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Company [UPGRADE_NOWAIT]: select company0_.companyID as companyI1_4_0_, company0_.CNPJ as CNPJ2_4_0_, company0_.CompanyDate as CompanyD3_4_0_, company0_.CompanyName as CompanyN4_4_0_, company0_.MarketName as MarketNa5_4_0_, company0_.OnShares as OnShares6_4_0_, company0_.PnShares as PnShares7_4_0_, company0_.Status as Status8_4_0_, company0_.stockExchangeID as stockExc9_4_0_ from Company company0_ where company0_.companyID=? for update nowait 
  2015-06-09 20:28:58,405 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60a2630a]
  2015-06-09 20:28:58,406 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : cnpj
  2015-06-09 20:28:58,406 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyDate
  2015-06-09 20:28:58,406 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyName
  2015-06-09 20:28:58,406 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketName
  2015-06-09 20:28:58,406 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : onShares
  2015-06-09 20:28:58,406 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : pnShares
  2015-06-09 20:28:58,406 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,406 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,406 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stockExchangeID
  2015-06-09 20:28:58,406 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,406 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,407 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Company)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Company, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {companyI1_4_0_}

  2015-06-09 20:28:58,407 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Company [UPGRADE_SKIPLOCKED]: select company0_.companyID as companyI1_4_0_, company0_.CNPJ as CNPJ2_4_0_, company0_.CompanyDate as CompanyD3_4_0_, company0_.CompanyName as CompanyN4_4_0_, company0_.MarketName as MarketNa5_4_0_, company0_.OnShares as OnShares6_4_0_, company0_.PnShares as PnShares7_4_0_, company0_.Status as Status8_4_0_, company0_.stockExchangeID as stockExc9_4_0_ from Company company0_ where company0_.companyID=? for update
  2015-06-09 20:28:58,407 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dd91bca]
  2015-06-09 20:28:58,407 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : cnpj
  2015-06-09 20:28:58,407 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyDate
  2015-06-09 20:28:58,407 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyName
  2015-06-09 20:28:58,407 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketName
  2015-06-09 20:28:58,407 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : onShares
  2015-06-09 20:28:58,407 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : pnShares
  2015-06-09 20:28:58,407 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,407 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,407 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stockExchangeID
  2015-06-09 20:28:58,411 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,411 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,412 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Company)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Company, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {companyI1_4_0_}

  2015-06-09 20:28:58,412 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Company [FORCE]: select company0_.companyID as companyI1_4_0_, company0_.CNPJ as CNPJ2_4_0_, company0_.CompanyDate as CompanyD3_4_0_, company0_.CompanyName as CompanyN4_4_0_, company0_.MarketName as MarketNa5_4_0_, company0_.OnShares as OnShares6_4_0_, company0_.PnShares as PnShares7_4_0_, company0_.Status as Status8_4_0_, company0_.stockExchangeID as stockExc9_4_0_ from Company company0_ where company0_.companyID=? for update nowait 
  2015-06-09 20:28:58,412 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3382f8ae]
  2015-06-09 20:28:58,412 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : cnpj
  2015-06-09 20:28:58,412 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyDate
  2015-06-09 20:28:58,412 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyName
  2015-06-09 20:28:58,412 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketName
  2015-06-09 20:28:58,412 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : onShares
  2015-06-09 20:28:58,412 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : pnShares
  2015-06-09 20:28:58,412 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,412 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,412 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stockExchangeID
  2015-06-09 20:28:58,412 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,412 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,412 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Company)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Company, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {companyI1_4_0_}

  2015-06-09 20:28:58,413 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Company [PESSIMISTIC_READ]: select company0_.companyID as companyI1_4_0_, company0_.CNPJ as CNPJ2_4_0_, company0_.CompanyDate as CompanyD3_4_0_, company0_.CompanyName as CompanyN4_4_0_, company0_.MarketName as MarketNa5_4_0_, company0_.OnShares as OnShares6_4_0_, company0_.PnShares as PnShares7_4_0_, company0_.Status as Status8_4_0_, company0_.stockExchangeID as stockExc9_4_0_ from Company company0_ where company0_.companyID=? for share
  2015-06-09 20:28:58,414 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75f65e45]
  2015-06-09 20:28:58,414 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : cnpj
  2015-06-09 20:28:58,414 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyDate
  2015-06-09 20:28:58,414 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyName
  2015-06-09 20:28:58,414 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketName
  2015-06-09 20:28:58,414 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : onShares
  2015-06-09 20:28:58,414 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : pnShares
  2015-06-09 20:28:58,414 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,414 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,414 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stockExchangeID
  2015-06-09 20:28:58,414 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,414 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,415 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Company)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Company, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {companyI1_4_0_}

  2015-06-09 20:28:58,415 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Company [PESSIMISTIC_WRITE]: select company0_.companyID as companyI1_4_0_, company0_.CNPJ as CNPJ2_4_0_, company0_.CompanyDate as CompanyD3_4_0_, company0_.CompanyName as CompanyN4_4_0_, company0_.MarketName as MarketNa5_4_0_, company0_.OnShares as OnShares6_4_0_, company0_.PnShares as PnShares7_4_0_, company0_.Status as Status8_4_0_, company0_.stockExchangeID as stockExc9_4_0_ from Company company0_ where company0_.companyID=? for update
  2015-06-09 20:28:58,415 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a891c97]
  2015-06-09 20:28:58,415 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : cnpj
  2015-06-09 20:28:58,415 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyDate
  2015-06-09 20:28:58,415 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyName
  2015-06-09 20:28:58,415 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketName
  2015-06-09 20:28:58,415 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : onShares
  2015-06-09 20:28:58,415 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : pnShares
  2015-06-09 20:28:58,415 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,415 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,417 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stockExchangeID
  2015-06-09 20:28:58,417 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,417 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,418 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Company)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Company, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {companyI1_4_0_}

  2015-06-09 20:28:58,418 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Company [PESSIMISTIC_FORCE_INCREMENT]: select company0_.companyID as companyI1_4_0_, company0_.CNPJ as CNPJ2_4_0_, company0_.CompanyDate as CompanyD3_4_0_, company0_.CompanyName as CompanyN4_4_0_, company0_.MarketName as MarketNa5_4_0_, company0_.OnShares as OnShares6_4_0_, company0_.PnShares as PnShares7_4_0_, company0_.Status as Status8_4_0_, company0_.stockExchangeID as stockExc9_4_0_ from Company company0_ where company0_.companyID=? for update nowait 
  2015-06-09 20:28:58,418 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d18aa28]
  2015-06-09 20:28:58,418 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : cnpj
  2015-06-09 20:28:58,418 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyDate
  2015-06-09 20:28:58,418 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyName
  2015-06-09 20:28:58,418 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketName
  2015-06-09 20:28:58,418 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : onShares
  2015-06-09 20:28:58,418 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : pnShares
  2015-06-09 20:28:58,418 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,418 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,418 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stockExchangeID
  2015-06-09 20:28:58,418 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,418 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,420 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Company)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Company, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {companyI1_4_0_}

  2015-06-09 20:28:58,420 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Company [OPTIMISTIC]: select company0_.companyID as companyI1_4_0_, company0_.CNPJ as CNPJ2_4_0_, company0_.CompanyDate as CompanyD3_4_0_, company0_.CompanyName as CompanyN4_4_0_, company0_.MarketName as MarketNa5_4_0_, company0_.OnShares as OnShares6_4_0_, company0_.PnShares as PnShares7_4_0_, company0_.Status as Status8_4_0_, company0_.stockExchangeID as stockExc9_4_0_ from Company company0_ where company0_.companyID=?
  2015-06-09 20:28:58,420 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7756c3cd]
  2015-06-09 20:28:58,420 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : cnpj
  2015-06-09 20:28:58,420 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyDate
  2015-06-09 20:28:58,420 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyName
  2015-06-09 20:28:58,420 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketName
  2015-06-09 20:28:58,420 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : onShares
  2015-06-09 20:28:58,420 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : pnShares
  2015-06-09 20:28:58,420 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,420 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,420 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stockExchangeID
  2015-06-09 20:28:58,420 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,420 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,421 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Company)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Company, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Company)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Company)
          - SQL table alias mapping - company0_
          - alias suffix - 0_
          - suffixed key columns - {companyI1_4_0_}

  2015-06-09 20:28:58,421 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Company [OPTIMISTIC_FORCE_INCREMENT]: select company0_.companyID as companyI1_4_0_, company0_.CNPJ as CNPJ2_4_0_, company0_.CompanyDate as CompanyD3_4_0_, company0_.CompanyName as CompanyN4_4_0_, company0_.MarketName as MarketNa5_4_0_, company0_.OnShares as OnShares6_4_0_, company0_.PnShares as PnShares7_4_0_, company0_.Status as Status8_4_0_, company0_.stockExchangeID as stockExc9_4_0_ from Company company0_ where company0_.companyID=?
  2015-06-09 20:28:58,422 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.securities.Company: select company0_.companyID as companyI1_4_0_, company0_.CNPJ as CNPJ2_4_0_, company0_.CompanyDate as CompanyD3_4_0_, company0_.CompanyName as CompanyN4_4_0_, company0_.MarketName as MarketNa5_4_0_, company0_.OnShares as OnShares6_4_0_, company0_.PnShares as PnShares7_4_0_, company0_.Status as Status8_4_0_, company0_.stockExchangeID as stockExc9_4_0_ from Company company0_ where company0_.companyID=?
  2015-06-09 20:28:58,423 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.securities.Company: select company0_.companyID as companyI1_4_0_, company0_.CNPJ as CNPJ2_4_0_, company0_.CompanyDate as CompanyD3_4_0_, company0_.CompanyName as CompanyN4_4_0_, company0_.MarketName as MarketNa5_4_0_, company0_.OnShares as OnShares6_4_0_, company0_.PnShares as PnShares7_4_0_, company0_.Status as Status8_4_0_, company0_.stockExchangeID as stockExc9_4_0_ from Company company0_ where company0_.companyID=?
  2015-06-09 20:28:58,423 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.securities.Isin
  2015-06-09 20:28:58,423 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select isinID from Isin where isinID =?
  2015-06-09 20:28:58,423 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select isin_.isinID, isin_.Description as Descript2_19_, isin_.ISIN as ISIN3_19_, isin_.Status as Status4_19_ from Isin isin_ where isin_.isinID=?
  2015-06-09 20:28:58,423 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Isin (Description, ISIN, Status, isinID) values (?, ?, ?, ?)
  2015-06-09 20:28:58,423 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Isin set Description=?, ISIN=?, Status=? where isinID=?
  2015-06-09 20:28:58,423 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Isin where isinID=?
  2015-06-09 20:28:58,423 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd2b28e]
  2015-06-09 20:28:58,423 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,423 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : isin
  2015-06-09 20:28:58,423 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,423 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,424 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,424 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Isin)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Isin, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Isin)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Isin)
          - SQL table alias mapping - isin0_
          - alias suffix - 0_
          - suffixed key columns - {isinID1_19_0_}

  2015-06-09 20:28:58,424 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Isin [NONE]: select isin0_.isinID as isinID1_19_0_, isin0_.Description as Descript2_19_0_, isin0_.ISIN as ISIN3_19_0_, isin0_.Status as Status4_19_0_ from Isin isin0_ where isin0_.isinID=?
  2015-06-09 20:28:58,424 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57fd91c9]
  2015-06-09 20:28:58,424 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,424 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : isin
  2015-06-09 20:28:58,424 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,424 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,424 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,425 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Isin)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Isin, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Isin)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Isin)
          - SQL table alias mapping - isin0_
          - alias suffix - 0_
          - suffixed key columns - {isinID1_19_0_}

  2015-06-09 20:28:58,425 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Isin [READ]: select isin0_.isinID as isinID1_19_0_, isin0_.Description as Descript2_19_0_, isin0_.ISIN as ISIN3_19_0_, isin0_.Status as Status4_19_0_ from Isin isin0_ where isin0_.isinID=?
  2015-06-09 20:28:58,425 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52045dbe]
  2015-06-09 20:28:58,425 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,425 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : isin
  2015-06-09 20:28:58,425 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,425 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,425 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,425 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Isin)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Isin, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Isin)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Isin)
          - SQL table alias mapping - isin0_
          - alias suffix - 0_
          - suffixed key columns - {isinID1_19_0_}

  2015-06-09 20:28:58,425 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Isin [UPGRADE]: select isin0_.isinID as isinID1_19_0_, isin0_.Description as Descript2_19_0_, isin0_.ISIN as ISIN3_19_0_, isin0_.Status as Status4_19_0_ from Isin isin0_ where isin0_.isinID=? for update
  2015-06-09 20:28:58,425 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c8eee0f]
  2015-06-09 20:28:58,425 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,425 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : isin
  2015-06-09 20:28:58,425 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,425 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,426 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,426 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Isin)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Isin, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Isin)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Isin)
          - SQL table alias mapping - isin0_
          - alias suffix - 0_
          - suffixed key columns - {isinID1_19_0_}

  2015-06-09 20:28:58,426 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Isin [UPGRADE_NOWAIT]: select isin0_.isinID as isinID1_19_0_, isin0_.Description as Descript2_19_0_, isin0_.ISIN as ISIN3_19_0_, isin0_.Status as Status4_19_0_ from Isin isin0_ where isin0_.isinID=? for update nowait 
  2015-06-09 20:28:58,426 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26425897]
  2015-06-09 20:28:58,426 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,426 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : isin
  2015-06-09 20:28:58,426 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,426 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,426 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,426 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Isin)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Isin, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Isin)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Isin)
          - SQL table alias mapping - isin0_
          - alias suffix - 0_
          - suffixed key columns - {isinID1_19_0_}

  2015-06-09 20:28:58,426 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Isin [UPGRADE_SKIPLOCKED]: select isin0_.isinID as isinID1_19_0_, isin0_.Description as Descript2_19_0_, isin0_.ISIN as ISIN3_19_0_, isin0_.Status as Status4_19_0_ from Isin isin0_ where isin0_.isinID=? for update
  2015-06-09 20:28:58,426 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58c34bb3]
  2015-06-09 20:28:58,426 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,426 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : isin
  2015-06-09 20:28:58,426 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,426 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,427 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,427 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Isin)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Isin, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Isin)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Isin)
          - SQL table alias mapping - isin0_
          - alias suffix - 0_
          - suffixed key columns - {isinID1_19_0_}

  2015-06-09 20:28:58,427 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Isin [FORCE]: select isin0_.isinID as isinID1_19_0_, isin0_.Description as Descript2_19_0_, isin0_.ISIN as ISIN3_19_0_, isin0_.Status as Status4_19_0_ from Isin isin0_ where isin0_.isinID=? for update nowait 
  2015-06-09 20:28:58,427 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62163b39]
  2015-06-09 20:28:58,427 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,427 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : isin
  2015-06-09 20:28:58,427 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,427 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,427 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,428 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Isin)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Isin, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Isin)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Isin)
          - SQL table alias mapping - isin0_
          - alias suffix - 0_
          - suffixed key columns - {isinID1_19_0_}

  2015-06-09 20:28:58,428 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Isin [PESSIMISTIC_READ]: select isin0_.isinID as isinID1_19_0_, isin0_.Description as Descript2_19_0_, isin0_.ISIN as ISIN3_19_0_, isin0_.Status as Status4_19_0_ from Isin isin0_ where isin0_.isinID=? for share
  2015-06-09 20:28:58,428 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62f4ff3b]
  2015-06-09 20:28:58,428 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,428 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : isin
  2015-06-09 20:28:58,428 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,428 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,429 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,429 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Isin)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Isin, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Isin)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Isin)
          - SQL table alias mapping - isin0_
          - alias suffix - 0_
          - suffixed key columns - {isinID1_19_0_}

  2015-06-09 20:28:58,430 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Isin [PESSIMISTIC_WRITE]: select isin0_.isinID as isinID1_19_0_, isin0_.Description as Descript2_19_0_, isin0_.ISIN as ISIN3_19_0_, isin0_.Status as Status4_19_0_ from Isin isin0_ where isin0_.isinID=? for update
  2015-06-09 20:28:58,430 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4504d271]
  2015-06-09 20:28:58,430 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,430 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : isin
  2015-06-09 20:28:58,430 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,430 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,430 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,430 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Isin)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Isin, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Isin)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Isin)
          - SQL table alias mapping - isin0_
          - alias suffix - 0_
          - suffixed key columns - {isinID1_19_0_}

  2015-06-09 20:28:58,430 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Isin [PESSIMISTIC_FORCE_INCREMENT]: select isin0_.isinID as isinID1_19_0_, isin0_.Description as Descript2_19_0_, isin0_.ISIN as ISIN3_19_0_, isin0_.Status as Status4_19_0_ from Isin isin0_ where isin0_.isinID=? for update nowait 
  2015-06-09 20:28:58,430 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65b3a85a]
  2015-06-09 20:28:58,430 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,430 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : isin
  2015-06-09 20:28:58,430 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,430 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,430 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,431 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Isin)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Isin, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Isin)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Isin)
          - SQL table alias mapping - isin0_
          - alias suffix - 0_
          - suffixed key columns - {isinID1_19_0_}

  2015-06-09 20:28:58,431 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Isin [OPTIMISTIC]: select isin0_.isinID as isinID1_19_0_, isin0_.Description as Descript2_19_0_, isin0_.ISIN as ISIN3_19_0_, isin0_.Status as Status4_19_0_ from Isin isin0_ where isin0_.isinID=?
  2015-06-09 20:28:58,431 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57eda880]
  2015-06-09 20:28:58,433 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,433 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : isin
  2015-06-09 20:28:58,433 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,434 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,434 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,434 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Isin)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Isin, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Isin)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Isin)
          - SQL table alias mapping - isin0_
          - alias suffix - 0_
          - suffixed key columns - {isinID1_19_0_}

  2015-06-09 20:28:58,434 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Isin [OPTIMISTIC_FORCE_INCREMENT]: select isin0_.isinID as isinID1_19_0_, isin0_.Description as Descript2_19_0_, isin0_.ISIN as ISIN3_19_0_, isin0_.Status as Status4_19_0_ from Isin isin0_ where isin0_.isinID=?
  2015-06-09 20:28:58,435 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.securities.Isin: select isin0_.isinID as isinID1_19_0_, isin0_.Description as Descript2_19_0_, isin0_.ISIN as ISIN3_19_0_, isin0_.Status as Status4_19_0_ from Isin isin0_ where isin0_.isinID=?
  2015-06-09 20:28:58,435 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.securities.Isin: select isin0_.isinID as isinID1_19_0_, isin0_.Description as Descript2_19_0_, isin0_.ISIN as ISIN3_19_0_, isin0_.Status as Status4_19_0_ from Isin isin0_ where isin0_.isinID=?
  2015-06-09 20:28:58,435 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.Orders
  2015-06-09 20:28:58,435 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select orderID from Orders where orderID =?
  2015-06-09 20:28:58,435 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select orders_.orderID, orders_.AveragePrice as AverageP2_26_, orders_.Comment as Comment3_26_, orders_.Duration as Duration4_26_, orders_.ExecutedVolume as Executed5_26_, orders_.OrderDateTime as OrderDat6_26_, orders_.OrderStatus as OrderSta8_26_, orders_.Price as Price10_26_, orders_.securityID as securit15_26_, orders_.StopPrice as StopPri12_26_, orders_.Volume as Volume14_26_ from Orders orders_ where orders_.orderID=?
  2015-06-09 20:28:58,435 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Orders (AveragePrice, Comment, Duration, ExecutedVolume, OrderDateTime, OrderSerial, OrderStatus, OrderType, Price, securityID, Side, StopPrice, TradeType, Volume, orderID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
  2015-06-09 20:28:58,435 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Orders set AveragePrice=?, Comment=?, Duration=?, ExecutedVolume=?, OrderDateTime=?, OrderStatus=?, Price=?, securityID=?, StopPrice=?, Volume=? where orderID=?
  2015-06-09 20:28:58,435 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Orders where orderID=?
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53d1b9b3]
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : averagePrice
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : comment
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : duration
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executedVolume
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionsList
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderSerial
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderType
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stopPrice
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,436 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,437 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,437 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.Orders)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.Orders, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {orderID1_26_0_}

  2015-06-09 20:28:58,437 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.Orders [NONE]: select orders0_.orderID as orderID1_26_0_, orders0_.AveragePrice as AverageP2_26_0_, orders0_.Comment as Comment3_26_0_, orders0_.Duration as Duration4_26_0_, orders0_.ExecutedVolume as Executed5_26_0_, orders0_.OrderDateTime as OrderDat6_26_0_, orders0_.OrderSerial as OrderSer7_26_0_, orders0_.OrderStatus as OrderSta8_26_0_, orders0_.OrderType as OrderTyp9_26_0_, orders0_.Price as Price10_26_0_, orders0_.securityID as securit15_26_0_, orders0_.Side as Side11_26_0_, orders0_.StopPrice as StopPri12_26_0_, orders0_.TradeType as TradeTy13_26_0_, orders0_.Volume as Volume14_26_0_ from Orders orders0_ where orders0_.orderID=?
  2015-06-09 20:28:58,437 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@163d04ff]
  2015-06-09 20:28:58,437 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : averagePrice
  2015-06-09 20:28:58,437 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : comment
  2015-06-09 20:28:58,437 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : duration
  2015-06-09 20:28:58,437 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,437 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executedVolume
  2015-06-09 20:28:58,438 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionsList
  2015-06-09 20:28:58,438 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,438 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderSerial
  2015-06-09 20:28:58,438 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,438 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderType
  2015-06-09 20:28:58,438 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,438 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,438 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,438 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stopPrice
  2015-06-09 20:28:58,438 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,438 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,438 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,438 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,438 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.Orders)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.Orders, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {orderID1_26_0_}

  2015-06-09 20:28:58,438 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.Orders [READ]: select orders0_.orderID as orderID1_26_0_, orders0_.AveragePrice as AverageP2_26_0_, orders0_.Comment as Comment3_26_0_, orders0_.Duration as Duration4_26_0_, orders0_.ExecutedVolume as Executed5_26_0_, orders0_.OrderDateTime as OrderDat6_26_0_, orders0_.OrderSerial as OrderSer7_26_0_, orders0_.OrderStatus as OrderSta8_26_0_, orders0_.OrderType as OrderTyp9_26_0_, orders0_.Price as Price10_26_0_, orders0_.securityID as securit15_26_0_, orders0_.Side as Side11_26_0_, orders0_.StopPrice as StopPri12_26_0_, orders0_.TradeType as TradeTy13_26_0_, orders0_.Volume as Volume14_26_0_ from Orders orders0_ where orders0_.orderID=?
  2015-06-09 20:28:58,438 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2262b621]
  2015-06-09 20:28:58,439 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : averagePrice
  2015-06-09 20:28:58,439 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : comment
  2015-06-09 20:28:58,439 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : duration
  2015-06-09 20:28:58,439 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,439 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executedVolume
  2015-06-09 20:28:58,439 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionsList
  2015-06-09 20:28:58,439 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,439 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderSerial
  2015-06-09 20:28:58,439 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,439 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderType
  2015-06-09 20:28:58,439 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,439 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,439 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,439 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stopPrice
  2015-06-09 20:28:58,439 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,439 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,439 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,441 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,442 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.Orders)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.Orders, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {orderID1_26_0_}

  2015-06-09 20:28:58,442 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.Orders [UPGRADE]: select orders0_.orderID as orderID1_26_0_, orders0_.AveragePrice as AverageP2_26_0_, orders0_.Comment as Comment3_26_0_, orders0_.Duration as Duration4_26_0_, orders0_.ExecutedVolume as Executed5_26_0_, orders0_.OrderDateTime as OrderDat6_26_0_, orders0_.OrderSerial as OrderSer7_26_0_, orders0_.OrderStatus as OrderSta8_26_0_, orders0_.OrderType as OrderTyp9_26_0_, orders0_.Price as Price10_26_0_, orders0_.securityID as securit15_26_0_, orders0_.Side as Side11_26_0_, orders0_.StopPrice as StopPri12_26_0_, orders0_.TradeType as TradeTy13_26_0_, orders0_.Volume as Volume14_26_0_ from Orders orders0_ where orders0_.orderID=? for update
  2015-06-09 20:28:58,442 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f667fe]
  2015-06-09 20:28:58,442 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : averagePrice
  2015-06-09 20:28:58,442 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : comment
  2015-06-09 20:28:58,442 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : duration
  2015-06-09 20:28:58,442 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,442 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executedVolume
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionsList
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderSerial
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderType
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stopPrice
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.Orders)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.Orders, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {orderID1_26_0_}

  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.Orders [UPGRADE_NOWAIT]: select orders0_.orderID as orderID1_26_0_, orders0_.AveragePrice as AverageP2_26_0_, orders0_.Comment as Comment3_26_0_, orders0_.Duration as Duration4_26_0_, orders0_.ExecutedVolume as Executed5_26_0_, orders0_.OrderDateTime as OrderDat6_26_0_, orders0_.OrderSerial as OrderSer7_26_0_, orders0_.OrderStatus as OrderSta8_26_0_, orders0_.OrderType as OrderTyp9_26_0_, orders0_.Price as Price10_26_0_, orders0_.securityID as securit15_26_0_, orders0_.Side as Side11_26_0_, orders0_.StopPrice as StopPri12_26_0_, orders0_.TradeType as TradeTy13_26_0_, orders0_.Volume as Volume14_26_0_ from Orders orders0_ where orders0_.orderID=? for update nowait 
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4febb875]
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : averagePrice
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : comment
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : duration
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executedVolume
  2015-06-09 20:28:58,443 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionsList
  2015-06-09 20:28:58,444 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,444 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderSerial
  2015-06-09 20:28:58,444 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,444 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderType
  2015-06-09 20:28:58,444 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,444 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,444 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,444 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stopPrice
  2015-06-09 20:28:58,444 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,444 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,444 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,444 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,444 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.Orders)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.Orders, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {orderID1_26_0_}

  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.Orders [UPGRADE_SKIPLOCKED]: select orders0_.orderID as orderID1_26_0_, orders0_.AveragePrice as AverageP2_26_0_, orders0_.Comment as Comment3_26_0_, orders0_.Duration as Duration4_26_0_, orders0_.ExecutedVolume as Executed5_26_0_, orders0_.OrderDateTime as OrderDat6_26_0_, orders0_.OrderSerial as OrderSer7_26_0_, orders0_.OrderStatus as OrderSta8_26_0_, orders0_.OrderType as OrderTyp9_26_0_, orders0_.Price as Price10_26_0_, orders0_.securityID as securit15_26_0_, orders0_.Side as Side11_26_0_, orders0_.StopPrice as StopPri12_26_0_, orders0_.TradeType as TradeTy13_26_0_, orders0_.Volume as Volume14_26_0_ from Orders orders0_ where orders0_.orderID=? for update
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1698ee84]
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : averagePrice
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : comment
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : duration
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executedVolume
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionsList
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderSerial
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderType
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stopPrice
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,445 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,446 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.Orders)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.Orders, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {orderID1_26_0_}

  2015-06-09 20:28:58,447 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.Orders [FORCE]: select orders0_.orderID as orderID1_26_0_, orders0_.AveragePrice as AverageP2_26_0_, orders0_.Comment as Comment3_26_0_, orders0_.Duration as Duration4_26_0_, orders0_.ExecutedVolume as Executed5_26_0_, orders0_.OrderDateTime as OrderDat6_26_0_, orders0_.OrderSerial as OrderSer7_26_0_, orders0_.OrderStatus as OrderSta8_26_0_, orders0_.OrderType as OrderTyp9_26_0_, orders0_.Price as Price10_26_0_, orders0_.securityID as securit15_26_0_, orders0_.Side as Side11_26_0_, orders0_.StopPrice as StopPri12_26_0_, orders0_.TradeType as TradeTy13_26_0_, orders0_.Volume as Volume14_26_0_ from Orders orders0_ where orders0_.orderID=? for update nowait 
  2015-06-09 20:28:58,447 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fc0cc3]
  2015-06-09 20:28:58,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : averagePrice
  2015-06-09 20:28:58,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : comment
  2015-06-09 20:28:58,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : duration
  2015-06-09 20:28:58,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executedVolume
  2015-06-09 20:28:58,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionsList
  2015-06-09 20:28:58,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderSerial
  2015-06-09 20:28:58,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderType
  2015-06-09 20:28:58,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,447 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stopPrice
  2015-06-09 20:28:58,448 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,448 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,448 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,449 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,449 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.Orders)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.Orders, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {orderID1_26_0_}

  2015-06-09 20:28:58,449 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.Orders [PESSIMISTIC_READ]: select orders0_.orderID as orderID1_26_0_, orders0_.AveragePrice as AverageP2_26_0_, orders0_.Comment as Comment3_26_0_, orders0_.Duration as Duration4_26_0_, orders0_.ExecutedVolume as Executed5_26_0_, orders0_.OrderDateTime as OrderDat6_26_0_, orders0_.OrderSerial as OrderSer7_26_0_, orders0_.OrderStatus as OrderSta8_26_0_, orders0_.OrderType as OrderTyp9_26_0_, orders0_.Price as Price10_26_0_, orders0_.securityID as securit15_26_0_, orders0_.Side as Side11_26_0_, orders0_.StopPrice as StopPri12_26_0_, orders0_.TradeType as TradeTy13_26_0_, orders0_.Volume as Volume14_26_0_ from Orders orders0_ where orders0_.orderID=? for share
  2015-06-09 20:28:58,449 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63b1d4fa]
  2015-06-09 20:28:58,449 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : averagePrice
  2015-06-09 20:28:58,449 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : comment
  2015-06-09 20:28:58,449 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : duration
  2015-06-09 20:28:58,449 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,449 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executedVolume
  2015-06-09 20:28:58,449 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionsList
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderSerial
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderType
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stopPrice
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.Orders)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.Orders, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {orderID1_26_0_}

  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.Orders [PESSIMISTIC_WRITE]: select orders0_.orderID as orderID1_26_0_, orders0_.AveragePrice as AverageP2_26_0_, orders0_.Comment as Comment3_26_0_, orders0_.Duration as Duration4_26_0_, orders0_.ExecutedVolume as Executed5_26_0_, orders0_.OrderDateTime as OrderDat6_26_0_, orders0_.OrderSerial as OrderSer7_26_0_, orders0_.OrderStatus as OrderSta8_26_0_, orders0_.OrderType as OrderTyp9_26_0_, orders0_.Price as Price10_26_0_, orders0_.securityID as securit15_26_0_, orders0_.Side as Side11_26_0_, orders0_.StopPrice as StopPri12_26_0_, orders0_.TradeType as TradeTy13_26_0_, orders0_.Volume as Volume14_26_0_ from Orders orders0_ where orders0_.orderID=? for update
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@201b6b6f]
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : averagePrice
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : comment
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : duration
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executedVolume
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionsList
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderSerial
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderType
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stopPrice
  2015-06-09 20:28:58,450 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,451 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,455 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,456 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,456 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.Orders)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.Orders, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {orderID1_26_0_}

  2015-06-09 20:28:58,456 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.Orders [PESSIMISTIC_FORCE_INCREMENT]: select orders0_.orderID as orderID1_26_0_, orders0_.AveragePrice as AverageP2_26_0_, orders0_.Comment as Comment3_26_0_, orders0_.Duration as Duration4_26_0_, orders0_.ExecutedVolume as Executed5_26_0_, orders0_.OrderDateTime as OrderDat6_26_0_, orders0_.OrderSerial as OrderSer7_26_0_, orders0_.OrderStatus as OrderSta8_26_0_, orders0_.OrderType as OrderTyp9_26_0_, orders0_.Price as Price10_26_0_, orders0_.securityID as securit15_26_0_, orders0_.Side as Side11_26_0_, orders0_.StopPrice as StopPri12_26_0_, orders0_.TradeType as TradeTy13_26_0_, orders0_.Volume as Volume14_26_0_ from Orders orders0_ where orders0_.orderID=? for update nowait 
  2015-06-09 20:28:58,457 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@183e8023]
  2015-06-09 20:28:58,458 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : averagePrice
  2015-06-09 20:28:58,458 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : comment
  2015-06-09 20:28:58,458 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : duration
  2015-06-09 20:28:58,458 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,458 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executedVolume
  2015-06-09 20:28:58,458 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionsList
  2015-06-09 20:28:58,458 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,458 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderSerial
  2015-06-09 20:28:58,458 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,458 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderType
  2015-06-09 20:28:58,458 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,458 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,458 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,458 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stopPrice
  2015-06-09 20:28:58,458 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,458 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,458 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,459 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,459 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.Orders)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.Orders, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {orderID1_26_0_}

  2015-06-09 20:28:58,459 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.Orders [OPTIMISTIC]: select orders0_.orderID as orderID1_26_0_, orders0_.AveragePrice as AverageP2_26_0_, orders0_.Comment as Comment3_26_0_, orders0_.Duration as Duration4_26_0_, orders0_.ExecutedVolume as Executed5_26_0_, orders0_.OrderDateTime as OrderDat6_26_0_, orders0_.OrderSerial as OrderSer7_26_0_, orders0_.OrderStatus as OrderSta8_26_0_, orders0_.OrderType as OrderTyp9_26_0_, orders0_.Price as Price10_26_0_, orders0_.securityID as securit15_26_0_, orders0_.Side as Side11_26_0_, orders0_.StopPrice as StopPri12_26_0_, orders0_.TradeType as TradeTy13_26_0_, orders0_.Volume as Volume14_26_0_ from Orders orders0_ where orders0_.orderID=?
  2015-06-09 20:28:58,459 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e5499cc]
  2015-06-09 20:28:58,459 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : averagePrice
  2015-06-09 20:28:58,459 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : comment
  2015-06-09 20:28:58,459 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : duration
  2015-06-09 20:28:58,459 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,459 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executedVolume
  2015-06-09 20:28:58,460 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionsList
  2015-06-09 20:28:58,460 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,460 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderSerial
  2015-06-09 20:28:58,460 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,460 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderType
  2015-06-09 20:28:58,460 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,460 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,460 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,460 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stopPrice
  2015-06-09 20:28:58,460 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,460 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,460 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,460 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,460 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.Orders)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.Orders, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {orderID1_26_0_}

  2015-06-09 20:28:58,460 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.Orders [OPTIMISTIC_FORCE_INCREMENT]: select orders0_.orderID as orderID1_26_0_, orders0_.AveragePrice as AverageP2_26_0_, orders0_.Comment as Comment3_26_0_, orders0_.Duration as Duration4_26_0_, orders0_.ExecutedVolume as Executed5_26_0_, orders0_.OrderDateTime as OrderDat6_26_0_, orders0_.OrderSerial as OrderSer7_26_0_, orders0_.OrderStatus as OrderSta8_26_0_, orders0_.OrderType as OrderTyp9_26_0_, orders0_.Price as Price10_26_0_, orders0_.securityID as securit15_26_0_, orders0_.Side as Side11_26_0_, orders0_.StopPrice as StopPri12_26_0_, orders0_.TradeType as TradeTy13_26_0_, orders0_.Volume as Volume14_26_0_ from Orders orders0_ where orders0_.orderID=?
  2015-06-09 20:28:58,461 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.Orders: select orders0_.orderID as orderID1_26_1_, orders0_.AveragePrice as AverageP2_26_1_, orders0_.Comment as Comment3_26_1_, orders0_.Duration as Duration4_26_1_, orders0_.ExecutedVolume as Executed5_26_1_, orders0_.OrderDateTime as OrderDat6_26_1_, orders0_.OrderSerial as OrderSer7_26_1_, orders0_.OrderStatus as OrderSta8_26_1_, orders0_.OrderType as OrderTyp9_26_1_, orders0_.Price as Price10_26_1_, orders0_.securityID as securit15_26_1_, orders0_.Side as Side11_26_1_, orders0_.StopPrice as StopPri12_26_1_, orders0_.TradeType as TradeTy13_26_1_, orders0_.Volume as Volume14_26_1_, eventslist1_.orderID as orderID5_26_3_, eventslist1_.orderEventID as orderEve1_24_3_, eventslist1_.orderEventID as orderEve1_24_0_, eventslist1_.EventDateTime as EventDat2_24_0_, eventslist1_.EventType as EventTyp3_24_0_, eventslist1_.Message as Message4_24_0_, eventslist1_.orderID as orderID5_24_0_ from Orders orders0_ left outer join OrderEvent eventslist1_ on orders0_.orderID=eventslist1_.orderID where orders0_.orderID=?
  2015-06-09 20:28:58,461 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.Orders: select orders0_.orderID as orderID1_26_1_, orders0_.AveragePrice as AverageP2_26_1_, orders0_.Comment as Comment3_26_1_, orders0_.Duration as Duration4_26_1_, orders0_.ExecutedVolume as Executed5_26_1_, orders0_.OrderDateTime as OrderDat6_26_1_, orders0_.OrderSerial as OrderSer7_26_1_, orders0_.OrderStatus as OrderSta8_26_1_, orders0_.OrderType as OrderTyp9_26_1_, orders0_.Price as Price10_26_1_, orders0_.securityID as securit15_26_1_, orders0_.Side as Side11_26_1_, orders0_.StopPrice as StopPri12_26_1_, orders0_.TradeType as TradeTy13_26_1_, orders0_.Volume as Volume14_26_1_, eventslist1_.orderID as orderID5_26_3_, eventslist1_.orderEventID as orderEve1_24_3_, eventslist1_.orderEventID as orderEve1_24_0_, eventslist1_.EventDateTime as EventDat2_24_0_, eventslist1_.EventType as EventTyp3_24_0_, eventslist1_.Message as Message4_24_0_, eventslist1_.orderID as orderID5_24_0_ from Orders orders0_ left outer join OrderEvent eventslist1_ on orders0_.orderID=eventslist1_.orderID where orders0_.orderID=?
  2015-06-09 20:28:58,461 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.account.ExchangeTax
  2015-06-09 20:28:58,461 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select exchangeTaxID from ExchangeTax where exchangeTaxID =?
  2015-06-09 20:28:58,462 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select exchangeta_.exchangeTaxID, exchangeta_.brokerageID as brokerag5_15_, exchangeta_.CalcType as CalcType2_15_, exchangeta_.Tax as Tax3_15_, exchangeta_.TaxName as TaxName4_15_ from ExchangeTax exchangeta_ where exchangeta_.exchangeTaxID=?
  2015-06-09 20:28:58,464 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into ExchangeTax (brokerageID, CalcType, Tax, TaxName, exchangeTaxID) values (?, ?, ?, ?, ?)
  2015-06-09 20:28:58,464 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update ExchangeTax set brokerageID=?, CalcType=?, Tax=?, TaxName=? where exchangeTaxID=?
  2015-06-09 20:28:58,464 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from ExchangeTax where exchangeTaxID=?
  2015-06-09 20:28:58,464 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b78a709]
  2015-06-09 20:28:58,464 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,465 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,465 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tax
  2015-06-09 20:28:58,465 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,465 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,465 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,465 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.ExchangeTax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.ExchangeTax, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.ExchangeTax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.ExchangeTax)
          - SQL table alias mapping - exchangeta0_
          - alias suffix - 0_
          - suffixed key columns - {exchange1_15_0_}

  2015-06-09 20:28:58,465 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.ExchangeTax [NONE]: select exchangeta0_.exchangeTaxID as exchange1_15_0_, exchangeta0_.brokerageID as brokerag5_15_0_, exchangeta0_.CalcType as CalcType2_15_0_, exchangeta0_.Tax as Tax3_15_0_, exchangeta0_.TaxName as TaxName4_15_0_ from ExchangeTax exchangeta0_ where exchangeta0_.exchangeTaxID=?
  2015-06-09 20:28:58,465 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a3c96e3]
  2015-06-09 20:28:58,465 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,465 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,465 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tax
  2015-06-09 20:28:58,465 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,465 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,465 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,466 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.ExchangeTax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.ExchangeTax, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.ExchangeTax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.ExchangeTax)
          - SQL table alias mapping - exchangeta0_
          - alias suffix - 0_
          - suffixed key columns - {exchange1_15_0_}

  2015-06-09 20:28:58,466 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.ExchangeTax [READ]: select exchangeta0_.exchangeTaxID as exchange1_15_0_, exchangeta0_.brokerageID as brokerag5_15_0_, exchangeta0_.CalcType as CalcType2_15_0_, exchangeta0_.Tax as Tax3_15_0_, exchangeta0_.TaxName as TaxName4_15_0_ from ExchangeTax exchangeta0_ where exchangeta0_.exchangeTaxID=?
  2015-06-09 20:28:58,467 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b444398]
  2015-06-09 20:28:58,467 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,467 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,467 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tax
  2015-06-09 20:28:58,467 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,467 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,467 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,468 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.ExchangeTax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.ExchangeTax, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.ExchangeTax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.ExchangeTax)
          - SQL table alias mapping - exchangeta0_
          - alias suffix - 0_
          - suffixed key columns - {exchange1_15_0_}

  2015-06-09 20:28:58,468 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.ExchangeTax [UPGRADE]: select exchangeta0_.exchangeTaxID as exchange1_15_0_, exchangeta0_.brokerageID as brokerag5_15_0_, exchangeta0_.CalcType as CalcType2_15_0_, exchangeta0_.Tax as Tax3_15_0_, exchangeta0_.TaxName as TaxName4_15_0_ from ExchangeTax exchangeta0_ where exchangeta0_.exchangeTaxID=? for update
  2015-06-09 20:28:58,468 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f48531]
  2015-06-09 20:28:58,468 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,468 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,468 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tax
  2015-06-09 20:28:58,468 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,468 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,468 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.ExchangeTax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.ExchangeTax, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.ExchangeTax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.ExchangeTax)
          - SQL table alias mapping - exchangeta0_
          - alias suffix - 0_
          - suffixed key columns - {exchange1_15_0_}

  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.ExchangeTax [UPGRADE_NOWAIT]: select exchangeta0_.exchangeTaxID as exchange1_15_0_, exchangeta0_.brokerageID as brokerag5_15_0_, exchangeta0_.CalcType as CalcType2_15_0_, exchangeta0_.Tax as Tax3_15_0_, exchangeta0_.TaxName as TaxName4_15_0_ from ExchangeTax exchangeta0_ where exchangeta0_.exchangeTaxID=? for update nowait 
  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@792bbc74]
  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tax
  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.ExchangeTax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.ExchangeTax, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.ExchangeTax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.ExchangeTax)
          - SQL table alias mapping - exchangeta0_
          - alias suffix - 0_
          - suffixed key columns - {exchange1_15_0_}

  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.ExchangeTax [UPGRADE_SKIPLOCKED]: select exchangeta0_.exchangeTaxID as exchange1_15_0_, exchangeta0_.brokerageID as brokerag5_15_0_, exchangeta0_.CalcType as CalcType2_15_0_, exchangeta0_.Tax as Tax3_15_0_, exchangeta0_.TaxName as TaxName4_15_0_ from ExchangeTax exchangeta0_ where exchangeta0_.exchangeTaxID=? for update
  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f2f9244]
  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tax
  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,469 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.ExchangeTax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.ExchangeTax, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.ExchangeTax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.ExchangeTax)
          - SQL table alias mapping - exchangeta0_
          - alias suffix - 0_
          - suffixed key columns - {exchange1_15_0_}

  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.ExchangeTax [FORCE]: select exchangeta0_.exchangeTaxID as exchange1_15_0_, exchangeta0_.brokerageID as brokerag5_15_0_, exchangeta0_.CalcType as CalcType2_15_0_, exchangeta0_.Tax as Tax3_15_0_, exchangeta0_.TaxName as TaxName4_15_0_ from ExchangeTax exchangeta0_ where exchangeta0_.exchangeTaxID=? for update nowait 
  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6821ea29]
  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tax
  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.ExchangeTax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.ExchangeTax, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.ExchangeTax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.ExchangeTax)
          - SQL table alias mapping - exchangeta0_
          - alias suffix - 0_
          - suffixed key columns - {exchange1_15_0_}

  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.ExchangeTax [PESSIMISTIC_READ]: select exchangeta0_.exchangeTaxID as exchange1_15_0_, exchangeta0_.brokerageID as brokerag5_15_0_, exchangeta0_.CalcType as CalcType2_15_0_, exchangeta0_.Tax as Tax3_15_0_, exchangeta0_.TaxName as TaxName4_15_0_ from ExchangeTax exchangeta0_ where exchangeta0_.exchangeTaxID=? for share
  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@505a9d7c]
  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tax
  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,470 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,480 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.ExchangeTax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.ExchangeTax, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.ExchangeTax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.ExchangeTax)
          - SQL table alias mapping - exchangeta0_
          - alias suffix - 0_
          - suffixed key columns - {exchange1_15_0_}

  2015-06-09 20:28:58,481 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.ExchangeTax [PESSIMISTIC_WRITE]: select exchangeta0_.exchangeTaxID as exchange1_15_0_, exchangeta0_.brokerageID as brokerag5_15_0_, exchangeta0_.CalcType as CalcType2_15_0_, exchangeta0_.Tax as Tax3_15_0_, exchangeta0_.TaxName as TaxName4_15_0_ from ExchangeTax exchangeta0_ where exchangeta0_.exchangeTaxID=? for update
  2015-06-09 20:28:58,481 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@129b4fe2]
  2015-06-09 20:28:58,481 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,481 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,481 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tax
  2015-06-09 20:28:58,481 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,481 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,482 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,482 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.ExchangeTax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.ExchangeTax, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.ExchangeTax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.ExchangeTax)
          - SQL table alias mapping - exchangeta0_
          - alias suffix - 0_
          - suffixed key columns - {exchange1_15_0_}

  2015-06-09 20:28:58,482 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.ExchangeTax [PESSIMISTIC_FORCE_INCREMENT]: select exchangeta0_.exchangeTaxID as exchange1_15_0_, exchangeta0_.brokerageID as brokerag5_15_0_, exchangeta0_.CalcType as CalcType2_15_0_, exchangeta0_.Tax as Tax3_15_0_, exchangeta0_.TaxName as TaxName4_15_0_ from ExchangeTax exchangeta0_ where exchangeta0_.exchangeTaxID=? for update nowait 
  2015-06-09 20:28:58,482 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19ae6bb]
  2015-06-09 20:28:58,482 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,482 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,482 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tax
  2015-06-09 20:28:58,482 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,482 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,482 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,482 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.ExchangeTax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.ExchangeTax, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.ExchangeTax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.ExchangeTax)
          - SQL table alias mapping - exchangeta0_
          - alias suffix - 0_
          - suffixed key columns - {exchange1_15_0_}

  2015-06-09 20:28:58,483 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.ExchangeTax [OPTIMISTIC]: select exchangeta0_.exchangeTaxID as exchange1_15_0_, exchangeta0_.brokerageID as brokerag5_15_0_, exchangeta0_.CalcType as CalcType2_15_0_, exchangeta0_.Tax as Tax3_15_0_, exchangeta0_.TaxName as TaxName4_15_0_ from ExchangeTax exchangeta0_ where exchangeta0_.exchangeTaxID=?
  2015-06-09 20:28:58,483 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58359ebd]
  2015-06-09 20:28:58,483 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,483 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,483 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tax
  2015-06-09 20:28:58,483 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,483 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,483 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,483 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.ExchangeTax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.ExchangeTax, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.ExchangeTax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.ExchangeTax)
          - SQL table alias mapping - exchangeta0_
          - alias suffix - 0_
          - suffixed key columns - {exchange1_15_0_}

  2015-06-09 20:28:58,483 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.ExchangeTax [OPTIMISTIC_FORCE_INCREMENT]: select exchangeta0_.exchangeTaxID as exchange1_15_0_, exchangeta0_.brokerageID as brokerag5_15_0_, exchangeta0_.CalcType as CalcType2_15_0_, exchangeta0_.Tax as Tax3_15_0_, exchangeta0_.TaxName as TaxName4_15_0_ from ExchangeTax exchangeta0_ where exchangeta0_.exchangeTaxID=?
  2015-06-09 20:28:58,484 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.account.ExchangeTax: select exchangeta0_.exchangeTaxID as exchange1_15_3_, exchangeta0_.brokerageID as brokerag5_15_3_, exchangeta0_.CalcType as CalcType2_15_3_, exchangeta0_.Tax as Tax3_15_3_, exchangeta0_.TaxName as TaxName4_15_3_, brokerage1_.brokerageID as brokerag1_2_0_, brokerage1_.brokerID as brokerID4_2_0_, brokerage1_.Category as Category2_2_0_, brokerage1_.TradeType as TradeTyp3_2_0_, broker2_.brokerID as brokerID1_1_1_, broker2_.BrokerCode as BrokerCo2_1_1_, broker2_.BrokerName as BrokerNa3_1_1_, marketorde3_.brokerID as brokerID9_1_5_, marketorde3_.marketOrderID as marketOr1_22_5_, marketorde3_.marketOrderID as marketOr1_22_2_, marketorde3_.brokerID as brokerID9_22_2_, marketorde3_.ExpirationDate as Expirati2_22_2_, marketorde3_.ExternalID as External3_22_2_, marketorde3_.OrderDateTime as OrderDat4_22_2_, marketorde3_.OrderStatus as OrderSta5_22_2_, marketorde3_.Price as Price6_22_2_, marketorde3_.securityID as securit10_22_2_, marketorde3_.Side as Side7_22_2_, marketorde3_.Volume as Volume8_22_2_ from ExchangeTax exchangeta0_ inner join Brokerage brokerage1_ on exchangeta0_.brokerageID=brokerage1_.brokerageID left outer join Broker broker2_ on brokerage1_.brokerID=broker2_.brokerID left outer join MarketOrder marketorde3_ on broker2_.brokerID=marketorde3_.brokerID where exchangeta0_.exchangeTaxID=?
  2015-06-09 20:28:58,484 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.account.ExchangeTax: select exchangeta0_.exchangeTaxID as exchange1_15_3_, exchangeta0_.brokerageID as brokerag5_15_3_, exchangeta0_.CalcType as CalcType2_15_3_, exchangeta0_.Tax as Tax3_15_3_, exchangeta0_.TaxName as TaxName4_15_3_, brokerage1_.brokerageID as brokerag1_2_0_, brokerage1_.brokerID as brokerID4_2_0_, brokerage1_.Category as Category2_2_0_, brokerage1_.TradeType as TradeTyp3_2_0_, broker2_.brokerID as brokerID1_1_1_, broker2_.BrokerCode as BrokerCo2_1_1_, broker2_.BrokerName as BrokerNa3_1_1_, marketorde3_.brokerID as brokerID9_1_5_, marketorde3_.marketOrderID as marketOr1_22_5_, marketorde3_.marketOrderID as marketOr1_22_2_, marketorde3_.brokerID as brokerID9_22_2_, marketorde3_.ExpirationDate as Expirati2_22_2_, marketorde3_.ExternalID as External3_22_2_, marketorde3_.OrderDateTime as OrderDat4_22_2_, marketorde3_.OrderStatus as OrderSta5_22_2_, marketorde3_.Price as Price6_22_2_, marketorde3_.securityID as securit10_22_2_, marketorde3_.Side as Side7_22_2_, marketorde3_.Volume as Volume8_22_2_ from ExchangeTax exchangeta0_ inner join Brokerage brokerage1_ on exchangeta0_.brokerageID=brokerage1_.brokerageID left outer join Broker broker2_ on brokerage1_.brokerID=broker2_.brokerID left outer join MarketOrder marketorde3_ on broker2_.brokerID=marketorde3_.brokerID where exchangeta0_.exchangeTaxID=?
  2015-06-09 20:28:58,485 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.securities.SecurityInfo
  2015-06-09 20:28:58,485 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select securityInfoID from SecurityInfo where securityInfoID =?
  2015-06-09 20:28:58,485 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select securityin_.securityInfoID, securityin_.Category as Category2_31_, securityin_.currencyID as currenc13_31_, securityin_.EmissionDate as Emission3_31_, securityin_.ExcercisePrice as Excercis4_31_, securityin_.ExpirationDate as Expirati5_31_, securityin_.FutureSerie as FutureSe6_31_, securityin_.MinimalVolume as MinimalV7_31_, securityin_.ObjectAsset as ObjectAs8_31_, securityin_.OptionSerie as OptionSe9_31_, securityin_.OptionStyle as OptionS10_31_, securityin_.QuoteFactor as QuoteFa11_31_, securityin_.SymbolDate as SymbolD12_31_ from SecurityInfo securityin_ where securityin_.securityInfoID=?
  2015-06-09 20:28:58,485 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into SecurityInfo (Category, currencyID, EmissionDate, ExcercisePrice, ExpirationDate, FutureSerie, MinimalVolume, ObjectAsset, OptionSerie, OptionStyle, QuoteFactor, SymbolDate, securityInfoID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
  2015-06-09 20:28:58,485 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update SecurityInfo set Category=?, currencyID=?, EmissionDate=?, ExcercisePrice=?, ExpirationDate=?, FutureSerie=?, MinimalVolume=?, ObjectAsset=?, OptionSerie=?, OptionStyle=?, QuoteFactor=?, SymbolDate=? where securityInfoID=?
  2015-06-09 20:28:58,485 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from SecurityInfo where securityInfoID=?
  2015-06-09 20:28:58,485 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72cf2de5]
  2015-06-09 20:28:58,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : emissionDate
  2015-06-09 20:28:58,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exercisePrice
  2015-06-09 20:28:58,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : futureSerie
  2015-06-09 20:28:58,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : minimalVolume
  2015-06-09 20:28:58,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectAsset
  2015-06-09 20:28:58,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionSerie
  2015-06-09 20:28:58,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionStyle
  2015-06-09 20:28:58,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbolDate
  2015-06-09 20:28:58,486 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,486 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f031ebd]
  2015-06-09 20:28:58,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.description
  2015-06-09 20:28:58,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.historicalQuoteSet
  2015-06-09 20:28:58,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.marketOrderSet
  2015-06-09 20:28:58,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.ordersSet
  2015-06-09 20:28:58,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.securityInfoID
  2015-06-09 20:28:58,488 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : securityID.securityInfoID
  2015-06-09 20:28:58,489 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.symbol
  2015-06-09 20:28:58,490 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,490 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,490 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.SecurityInfo)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.SecurityInfo)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.SecurityInfo.securityID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.SecurityInfo)
          - SQL table alias mapping - securityin0_
          - alias suffix - 0_
          - suffixed key columns - {security1_31_0_}
          - JOIN (JoinDefinedByMetadata(securityID)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.Security)
                - SQL table alias mapping - security1_
                - alias suffix - 1_
                - suffixed key columns - {security1_30_1_}

  2015-06-09 20:28:58,490 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.SecurityInfo [NONE]: select securityin0_.securityInfoID as security1_31_0_, securityin0_.Category as Category2_31_0_, securityin0_.currencyID as currenc13_31_0_, securityin0_.EmissionDate as Emission3_31_0_, securityin0_.ExcercisePrice as Excercis4_31_0_, securityin0_.ExpirationDate as Expirati5_31_0_, securityin0_.FutureSerie as FutureSe6_31_0_, securityin0_.MinimalVolume as MinimalV7_31_0_, securityin0_.ObjectAsset as ObjectAs8_31_0_, securityin0_.OptionSerie as OptionSe9_31_0_, securityin0_.OptionStyle as OptionS10_31_0_, securityin0_.QuoteFactor as QuoteFa11_31_0_, securityin0_.SymbolDate as SymbolD12_31_0_, security1_.securityID as security1_30_1_, security1_.Description as Descript2_30_1_, security1_.securityInfoID_securityInfoID as security4_30_1_, security1_.Symbol as Symbol3_30_1_ from SecurityInfo securityin0_ left outer join Security security1_ on securityin0_.securityInfoID=security1_.securityInfoID_securityInfoID where securityin0_.securityInfoID=?
  2015-06-09 20:28:58,490 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@422c3c7a]
  2015-06-09 20:28:58,490 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,490 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,490 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : emissionDate
  2015-06-09 20:28:58,490 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exercisePrice
  2015-06-09 20:28:58,490 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : futureSerie
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : minimalVolume
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectAsset
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionSerie
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionStyle
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbolDate
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d8305c2]
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.description
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.historicalQuoteSet
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.marketOrderSet
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.ordersSet
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.securityInfoID
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : securityID.securityInfoID
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.symbol
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,491 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,496 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.SecurityInfo)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.SecurityInfo)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.SecurityInfo.securityID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.SecurityInfo)
          - SQL table alias mapping - securityin0_
          - alias suffix - 0_
          - suffixed key columns - {security1_31_0_}
          - JOIN (JoinDefinedByMetadata(securityID)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.Security)
                - SQL table alias mapping - security1_
                - alias suffix - 1_
                - suffixed key columns - {security1_30_1_}

  2015-06-09 20:28:58,496 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.SecurityInfo [READ]: select securityin0_.securityInfoID as security1_31_0_, securityin0_.Category as Category2_31_0_, securityin0_.currencyID as currenc13_31_0_, securityin0_.EmissionDate as Emission3_31_0_, securityin0_.ExcercisePrice as Excercis4_31_0_, securityin0_.ExpirationDate as Expirati5_31_0_, securityin0_.FutureSerie as FutureSe6_31_0_, securityin0_.MinimalVolume as MinimalV7_31_0_, securityin0_.ObjectAsset as ObjectAs8_31_0_, securityin0_.OptionSerie as OptionSe9_31_0_, securityin0_.OptionStyle as OptionS10_31_0_, securityin0_.QuoteFactor as QuoteFa11_31_0_, securityin0_.SymbolDate as SymbolD12_31_0_, security1_.securityID as security1_30_1_, security1_.Description as Descript2_30_1_, security1_.securityInfoID_securityInfoID as security4_30_1_, security1_.Symbol as Symbol3_30_1_ from SecurityInfo securityin0_ left outer join Security security1_ on securityin0_.securityInfoID=security1_.securityInfoID_securityInfoID where securityin0_.securityInfoID=?
  2015-06-09 20:28:58,497 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75d0911a]
  2015-06-09 20:28:58,497 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,497 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,497 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : emissionDate
  2015-06-09 20:28:58,497 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exercisePrice
  2015-06-09 20:28:58,497 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,497 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : futureSerie
  2015-06-09 20:28:58,497 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : minimalVolume
  2015-06-09 20:28:58,497 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectAsset
  2015-06-09 20:28:58,497 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionSerie
  2015-06-09 20:28:58,497 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionStyle
  2015-06-09 20:28:58,497 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,497 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbolDate
  2015-06-09 20:28:58,497 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,497 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60d1a32f]
  2015-06-09 20:28:58,497 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,497 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,498 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.SecurityInfo)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.SecurityInfo)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.SecurityInfo.securityID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.SecurityInfo)
          - SQL table alias mapping - securityin0_
          - alias suffix - 0_
          - suffixed key columns - {security1_31_0_}

  2015-06-09 20:28:58,498 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.SecurityInfo [UPGRADE]: select securityin0_.securityInfoID as security1_31_0_, securityin0_.Category as Category2_31_0_, securityin0_.currencyID as currenc13_31_0_, securityin0_.EmissionDate as Emission3_31_0_, securityin0_.ExcercisePrice as Excercis4_31_0_, securityin0_.ExpirationDate as Expirati5_31_0_, securityin0_.FutureSerie as FutureSe6_31_0_, securityin0_.MinimalVolume as MinimalV7_31_0_, securityin0_.ObjectAsset as ObjectAs8_31_0_, securityin0_.OptionSerie as OptionSe9_31_0_, securityin0_.OptionStyle as OptionS10_31_0_, securityin0_.QuoteFactor as QuoteFa11_31_0_, securityin0_.SymbolDate as SymbolD12_31_0_ from SecurityInfo securityin0_ where securityin0_.securityInfoID=? for update
  2015-06-09 20:28:58,498 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@531c311e]
  2015-06-09 20:28:58,498 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,498 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,498 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : emissionDate
  2015-06-09 20:28:58,498 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exercisePrice
  2015-06-09 20:28:58,498 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,499 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : futureSerie
  2015-06-09 20:28:58,499 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : minimalVolume
  2015-06-09 20:28:58,499 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectAsset
  2015-06-09 20:28:58,499 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionSerie
  2015-06-09 20:28:58,499 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionStyle
  2015-06-09 20:28:58,499 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,499 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbolDate
  2015-06-09 20:28:58,499 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,499 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fcb4808]
  2015-06-09 20:28:58,499 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,499 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,499 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.SecurityInfo)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.SecurityInfo)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.SecurityInfo.securityID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.SecurityInfo)
          - SQL table alias mapping - securityin0_
          - alias suffix - 0_
          - suffixed key columns - {security1_31_0_}

  2015-06-09 20:28:58,499 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.SecurityInfo [UPGRADE_NOWAIT]: select securityin0_.securityInfoID as security1_31_0_, securityin0_.Category as Category2_31_0_, securityin0_.currencyID as currenc13_31_0_, securityin0_.EmissionDate as Emission3_31_0_, securityin0_.ExcercisePrice as Excercis4_31_0_, securityin0_.ExpirationDate as Expirati5_31_0_, securityin0_.FutureSerie as FutureSe6_31_0_, securityin0_.MinimalVolume as MinimalV7_31_0_, securityin0_.ObjectAsset as ObjectAs8_31_0_, securityin0_.OptionSerie as OptionSe9_31_0_, securityin0_.OptionStyle as OptionS10_31_0_, securityin0_.QuoteFactor as QuoteFa11_31_0_, securityin0_.SymbolDate as SymbolD12_31_0_ from SecurityInfo securityin0_ where securityin0_.securityInfoID=? for update nowait 
  2015-06-09 20:28:58,500 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@726e5805]
  2015-06-09 20:28:58,500 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,500 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,500 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : emissionDate
  2015-06-09 20:28:58,500 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exercisePrice
  2015-06-09 20:28:58,500 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,500 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : futureSerie
  2015-06-09 20:28:58,500 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : minimalVolume
  2015-06-09 20:28:58,500 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectAsset
  2015-06-09 20:28:58,500 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionSerie
  2015-06-09 20:28:58,500 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionStyle
  2015-06-09 20:28:58,500 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,500 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbolDate
  2015-06-09 20:28:58,500 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,500 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b672daa]
  2015-06-09 20:28:58,501 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,501 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,501 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.SecurityInfo)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.SecurityInfo)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.SecurityInfo.securityID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.SecurityInfo)
          - SQL table alias mapping - securityin0_
          - alias suffix - 0_
          - suffixed key columns - {security1_31_0_}

  2015-06-09 20:28:58,501 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.SecurityInfo [UPGRADE_SKIPLOCKED]: select securityin0_.securityInfoID as security1_31_0_, securityin0_.Category as Category2_31_0_, securityin0_.currencyID as currenc13_31_0_, securityin0_.EmissionDate as Emission3_31_0_, securityin0_.ExcercisePrice as Excercis4_31_0_, securityin0_.ExpirationDate as Expirati5_31_0_, securityin0_.FutureSerie as FutureSe6_31_0_, securityin0_.MinimalVolume as MinimalV7_31_0_, securityin0_.ObjectAsset as ObjectAs8_31_0_, securityin0_.OptionSerie as OptionSe9_31_0_, securityin0_.OptionStyle as OptionS10_31_0_, securityin0_.QuoteFactor as QuoteFa11_31_0_, securityin0_.SymbolDate as SymbolD12_31_0_ from SecurityInfo securityin0_ where securityin0_.securityInfoID=? for update
  2015-06-09 20:28:58,501 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ea9b7c6]
  2015-06-09 20:28:58,501 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,502 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,502 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : emissionDate
  2015-06-09 20:28:58,502 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exercisePrice
  2015-06-09 20:28:58,502 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,502 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : futureSerie
  2015-06-09 20:28:58,502 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : minimalVolume
  2015-06-09 20:28:58,502 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectAsset
  2015-06-09 20:28:58,502 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionSerie
  2015-06-09 20:28:58,502 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionStyle
  2015-06-09 20:28:58,502 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,502 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbolDate
  2015-06-09 20:28:58,502 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,502 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ed3068a]
  2015-06-09 20:28:58,502 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,502 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,502 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.SecurityInfo)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.SecurityInfo)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.SecurityInfo.securityID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.SecurityInfo)
          - SQL table alias mapping - securityin0_
          - alias suffix - 0_
          - suffixed key columns - {security1_31_0_}

  2015-06-09 20:28:58,503 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.SecurityInfo [FORCE]: select securityin0_.securityInfoID as security1_31_0_, securityin0_.Category as Category2_31_0_, securityin0_.currencyID as currenc13_31_0_, securityin0_.EmissionDate as Emission3_31_0_, securityin0_.ExcercisePrice as Excercis4_31_0_, securityin0_.ExpirationDate as Expirati5_31_0_, securityin0_.FutureSerie as FutureSe6_31_0_, securityin0_.MinimalVolume as MinimalV7_31_0_, securityin0_.ObjectAsset as ObjectAs8_31_0_, securityin0_.OptionSerie as OptionSe9_31_0_, securityin0_.OptionStyle as OptionS10_31_0_, securityin0_.QuoteFactor as QuoteFa11_31_0_, securityin0_.SymbolDate as SymbolD12_31_0_ from SecurityInfo securityin0_ where securityin0_.securityInfoID=? for update nowait 
  2015-06-09 20:28:58,503 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2b6087]
  2015-06-09 20:28:58,503 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,503 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,503 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : emissionDate
  2015-06-09 20:28:58,503 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exercisePrice
  2015-06-09 20:28:58,503 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,503 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : futureSerie
  2015-06-09 20:28:58,503 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : minimalVolume
  2015-06-09 20:28:58,503 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectAsset
  2015-06-09 20:28:58,503 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionSerie
  2015-06-09 20:28:58,503 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionStyle
  2015-06-09 20:28:58,503 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,503 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbolDate
  2015-06-09 20:28:58,503 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,503 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a8e6492]
  2015-06-09 20:28:58,503 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,506 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.SecurityInfo)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.SecurityInfo)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.SecurityInfo.securityID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.SecurityInfo)
          - SQL table alias mapping - securityin0_
          - alias suffix - 0_
          - suffixed key columns - {security1_31_0_}

  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.SecurityInfo [PESSIMISTIC_READ]: select securityin0_.securityInfoID as security1_31_0_, securityin0_.Category as Category2_31_0_, securityin0_.currencyID as currenc13_31_0_, securityin0_.EmissionDate as Emission3_31_0_, securityin0_.ExcercisePrice as Excercis4_31_0_, securityin0_.ExpirationDate as Expirati5_31_0_, securityin0_.FutureSerie as FutureSe6_31_0_, securityin0_.MinimalVolume as MinimalV7_31_0_, securityin0_.ObjectAsset as ObjectAs8_31_0_, securityin0_.OptionSerie as OptionSe9_31_0_, securityin0_.OptionStyle as OptionS10_31_0_, securityin0_.QuoteFactor as QuoteFa11_31_0_, securityin0_.SymbolDate as SymbolD12_31_0_ from SecurityInfo securityin0_ where securityin0_.securityInfoID=? for share
  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c7fd41f]
  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : emissionDate
  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exercisePrice
  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : futureSerie
  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : minimalVolume
  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectAsset
  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionSerie
  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionStyle
  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbolDate
  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b324585]
  2015-06-09 20:28:58,507 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.SecurityInfo)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.SecurityInfo)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.SecurityInfo.securityID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.SecurityInfo)
          - SQL table alias mapping - securityin0_
          - alias suffix - 0_
          - suffixed key columns - {security1_31_0_}

  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.SecurityInfo [PESSIMISTIC_WRITE]: select securityin0_.securityInfoID as security1_31_0_, securityin0_.Category as Category2_31_0_, securityin0_.currencyID as currenc13_31_0_, securityin0_.EmissionDate as Emission3_31_0_, securityin0_.ExcercisePrice as Excercis4_31_0_, securityin0_.ExpirationDate as Expirati5_31_0_, securityin0_.FutureSerie as FutureSe6_31_0_, securityin0_.MinimalVolume as MinimalV7_31_0_, securityin0_.ObjectAsset as ObjectAs8_31_0_, securityin0_.OptionSerie as OptionSe9_31_0_, securityin0_.OptionStyle as OptionS10_31_0_, securityin0_.QuoteFactor as QuoteFa11_31_0_, securityin0_.SymbolDate as SymbolD12_31_0_ from SecurityInfo securityin0_ where securityin0_.securityInfoID=? for update
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e11485]
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : emissionDate
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exercisePrice
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : futureSerie
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : minimalVolume
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectAsset
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionSerie
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionStyle
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbolDate
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@662f5666]
  2015-06-09 20:28:58,508 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.SecurityInfo)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.SecurityInfo)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.SecurityInfo.securityID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.SecurityInfo)
          - SQL table alias mapping - securityin0_
          - alias suffix - 0_
          - suffixed key columns - {security1_31_0_}

  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.SecurityInfo [PESSIMISTIC_FORCE_INCREMENT]: select securityin0_.securityInfoID as security1_31_0_, securityin0_.Category as Category2_31_0_, securityin0_.currencyID as currenc13_31_0_, securityin0_.EmissionDate as Emission3_31_0_, securityin0_.ExcercisePrice as Excercis4_31_0_, securityin0_.ExpirationDate as Expirati5_31_0_, securityin0_.FutureSerie as FutureSe6_31_0_, securityin0_.MinimalVolume as MinimalV7_31_0_, securityin0_.ObjectAsset as ObjectAs8_31_0_, securityin0_.OptionSerie as OptionSe9_31_0_, securityin0_.OptionStyle as OptionS10_31_0_, securityin0_.QuoteFactor as QuoteFa11_31_0_, securityin0_.SymbolDate as SymbolD12_31_0_ from SecurityInfo securityin0_ where securityin0_.securityInfoID=? for update nowait 
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fd8294b]
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : emissionDate
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exercisePrice
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : futureSerie
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : minimalVolume
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectAsset
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionSerie
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionStyle
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbolDate
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27305e6]
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,509 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.SecurityInfo)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.SecurityInfo)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.SecurityInfo.securityID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.SecurityInfo)
          - SQL table alias mapping - securityin0_
          - alias suffix - 0_
          - suffixed key columns - {security1_31_0_}

  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.SecurityInfo [OPTIMISTIC]: select securityin0_.securityInfoID as security1_31_0_, securityin0_.Category as Category2_31_0_, securityin0_.currencyID as currenc13_31_0_, securityin0_.EmissionDate as Emission3_31_0_, securityin0_.ExcercisePrice as Excercis4_31_0_, securityin0_.ExpirationDate as Expirati5_31_0_, securityin0_.FutureSerie as FutureSe6_31_0_, securityin0_.MinimalVolume as MinimalV7_31_0_, securityin0_.ObjectAsset as ObjectAs8_31_0_, securityin0_.OptionSerie as OptionSe9_31_0_, securityin0_.OptionStyle as OptionS10_31_0_, securityin0_.QuoteFactor as QuoteFa11_31_0_, securityin0_.SymbolDate as SymbolD12_31_0_ from SecurityInfo securityin0_ where securityin0_.securityInfoID=?
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ef3efa8]
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : emissionDate
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exercisePrice
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : futureSerie
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : minimalVolume
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectAsset
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionSerie
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionStyle
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbolDate
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8f9349]
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,510 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,511 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.SecurityInfo)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.SecurityInfo)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.SecurityInfo.securityID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.SecurityInfo)
          - SQL table alias mapping - securityin0_
          - alias suffix - 0_
          - suffixed key columns - {security1_31_0_}

  2015-06-09 20:28:58,511 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.SecurityInfo [OPTIMISTIC_FORCE_INCREMENT]: select securityin0_.securityInfoID as security1_31_0_, securityin0_.Category as Category2_31_0_, securityin0_.currencyID as currenc13_31_0_, securityin0_.EmissionDate as Emission3_31_0_, securityin0_.ExcercisePrice as Excercis4_31_0_, securityin0_.ExpirationDate as Expirati5_31_0_, securityin0_.FutureSerie as FutureSe6_31_0_, securityin0_.MinimalVolume as MinimalV7_31_0_, securityin0_.ObjectAsset as ObjectAs8_31_0_, securityin0_.OptionSerie as OptionSe9_31_0_, securityin0_.OptionStyle as OptionS10_31_0_, securityin0_.QuoteFactor as QuoteFa11_31_0_, securityin0_.SymbolDate as SymbolD12_31_0_ from SecurityInfo securityin0_ where securityin0_.securityInfoID=?
  2015-06-09 20:28:58,511 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.securities.SecurityInfo: select securityin0_.securityInfoID as security1_31_2_, securityin0_.Category as Category2_31_2_, securityin0_.currencyID as currenc13_31_2_, securityin0_.EmissionDate as Emission3_31_2_, securityin0_.ExcercisePrice as Excercis4_31_2_, securityin0_.ExpirationDate as Expirati5_31_2_, securityin0_.FutureSerie as FutureSe6_31_2_, securityin0_.MinimalVolume as MinimalV7_31_2_, securityin0_.ObjectAsset as ObjectAs8_31_2_, securityin0_.OptionSerie as OptionSe9_31_2_, securityin0_.OptionStyle as OptionS10_31_2_, securityin0_.QuoteFactor as QuoteFa11_31_2_, securityin0_.SymbolDate as SymbolD12_31_2_, currency1_.currencyID as currency1_9_0_, currency1_.CurrSymbol as CurrSymb2_9_0_, currency1_.Description as Descript3_9_0_, currency1_.FractionalUnit as Fraction4_9_0_, currency1_.Sign as Sign5_9_0_, accountset2_.currencyID as currency9_9_4_, accountset2_.accountID as accountI1_0_4_, accountset2_.accountID as accountI1_0_1_, accountset2_.AccName as AccName2_0_1_, accountset2_.AccountCategory as AccountC3_0_1_, accountset2_.AccountType as AccountT4_0_1_, accountset2_.Balance as Balance5_0_1_, accountset2_.CreditLimit as CreditLi6_0_1_, accountset2_.currencyID as currency9_0_1_, accountset2_.Description as Descript7_0_1_, accountset2_.fatherAccountID as fatherA10_0_1_, accountset2_.Open as Open8_0_1_ from SecurityInfo securityin0_ left outer join Currency currency1_ on securityin0_.currencyID=currency1_.currencyID left outer join Account accountset2_ on currency1_.currencyID=accountset2_.currencyID where securityin0_.securityInfoID=?
  2015-06-09 20:28:58,512 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.securities.SecurityInfo: select securityin0_.securityInfoID as security1_31_2_, securityin0_.Category as Category2_31_2_, securityin0_.currencyID as currenc13_31_2_, securityin0_.EmissionDate as Emission3_31_2_, securityin0_.ExcercisePrice as Excercis4_31_2_, securityin0_.ExpirationDate as Expirati5_31_2_, securityin0_.FutureSerie as FutureSe6_31_2_, securityin0_.MinimalVolume as MinimalV7_31_2_, securityin0_.ObjectAsset as ObjectAs8_31_2_, securityin0_.OptionSerie as OptionSe9_31_2_, securityin0_.OptionStyle as OptionS10_31_2_, securityin0_.QuoteFactor as QuoteFa11_31_2_, securityin0_.SymbolDate as SymbolD12_31_2_, currency1_.currencyID as currency1_9_0_, currency1_.CurrSymbol as CurrSymb2_9_0_, currency1_.Description as Descript3_9_0_, currency1_.FractionalUnit as Fraction4_9_0_, currency1_.Sign as Sign5_9_0_, accountset2_.currencyID as currency9_9_4_, accountset2_.accountID as accountI1_0_4_, accountset2_.accountID as accountI1_0_1_, accountset2_.AccName as AccName2_0_1_, accountset2_.AccountCategory as AccountC3_0_1_, accountset2_.AccountType as AccountT4_0_1_, accountset2_.Balance as Balance5_0_1_, accountset2_.CreditLimit as CreditLi6_0_1_, accountset2_.currencyID as currency9_0_1_, accountset2_.Description as Descript7_0_1_, accountset2_.fatherAccountID as fatherA10_0_1_, accountset2_.Open as Open8_0_1_ from SecurityInfo securityin0_ left outer join Currency currency1_ on securityin0_.currencyID=currency1_.currencyID left outer join Account accountset2_ on currency1_.currencyID=accountset2_.currencyID where securityin0_.securityInfoID=?
  2015-06-09 20:28:58,512 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.securities.StockExchange
  2015-06-09 20:28:58,512 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select stockExchangeID from StockExchange where stockExchangeID =?
  2015-06-09 20:28:58,512 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select stockexcha_.stockExchangeID, stockexcha_.countryID as countryI3_33_, stockexcha_.ExchangeName as Exchange2_33_ from StockExchange stockexcha_ where stockexcha_.stockExchangeID=?
  2015-06-09 20:28:58,512 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into StockExchange (countryID, ExchangeName, stockExchangeID) values (?, ?, ?)
  2015-06-09 20:28:58,512 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update StockExchange set countryID=?, ExchangeName=? where stockExchangeID=?
  2015-06-09 20:28:58,512 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from StockExchange where stockExchangeID=?
  2015-06-09 20:28:58,512 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75c9e76b]
  2015-06-09 20:28:58,512 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,512 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryID
  2015-06-09 20:28:58,512 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeName
  2015-06-09 20:28:58,512 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,512 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,513 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.StockExchange)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.StockExchange, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.StockExchange)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.StockExchange)
          - SQL table alias mapping - stockexcha0_
          - alias suffix - 0_
          - suffixed key columns - {stockExc1_33_0_}

  2015-06-09 20:28:58,513 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.StockExchange [NONE]: select stockexcha0_.stockExchangeID as stockExc1_33_0_, stockexcha0_.countryID as countryI3_33_0_, stockexcha0_.ExchangeName as Exchange2_33_0_ from StockExchange stockexcha0_ where stockexcha0_.stockExchangeID=?
  2015-06-09 20:28:58,513 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c3b6c6e]
  2015-06-09 20:28:58,513 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,513 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryID
  2015-06-09 20:28:58,513 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeName
  2015-06-09 20:28:58,513 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,513 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,513 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.StockExchange)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.StockExchange, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.StockExchange)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.StockExchange)
          - SQL table alias mapping - stockexcha0_
          - alias suffix - 0_
          - suffixed key columns - {stockExc1_33_0_}

  2015-06-09 20:28:58,513 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.StockExchange [READ]: select stockexcha0_.stockExchangeID as stockExc1_33_0_, stockexcha0_.countryID as countryI3_33_0_, stockexcha0_.ExchangeName as Exchange2_33_0_ from StockExchange stockexcha0_ where stockexcha0_.stockExchangeID=?
  2015-06-09 20:28:58,513 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75f5fd58]
  2015-06-09 20:28:58,513 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,513 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryID
  2015-06-09 20:28:58,514 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeName
  2015-06-09 20:28:58,514 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,514 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,514 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.StockExchange)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.StockExchange, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.StockExchange)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.StockExchange)
          - SQL table alias mapping - stockexcha0_
          - alias suffix - 0_
          - suffixed key columns - {stockExc1_33_0_}

  2015-06-09 20:28:58,514 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.StockExchange [UPGRADE]: select stockexcha0_.stockExchangeID as stockExc1_33_0_, stockexcha0_.countryID as countryI3_33_0_, stockexcha0_.ExchangeName as Exchange2_33_0_ from StockExchange stockexcha0_ where stockexcha0_.stockExchangeID=? for update
  2015-06-09 20:28:58,514 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@306851c7]
  2015-06-09 20:28:58,514 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,514 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryID
  2015-06-09 20:28:58,514 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeName
  2015-06-09 20:28:58,514 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,514 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,514 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.StockExchange)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.StockExchange, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.StockExchange)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.StockExchange)
          - SQL table alias mapping - stockexcha0_
          - alias suffix - 0_
          - suffixed key columns - {stockExc1_33_0_}

  2015-06-09 20:28:58,514 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.StockExchange [UPGRADE_NOWAIT]: select stockexcha0_.stockExchangeID as stockExc1_33_0_, stockexcha0_.countryID as countryI3_33_0_, stockexcha0_.ExchangeName as Exchange2_33_0_ from StockExchange stockexcha0_ where stockexcha0_.stockExchangeID=? for update nowait 
  2015-06-09 20:28:58,514 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4879f0f2]
  2015-06-09 20:28:58,514 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,514 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryID
  2015-06-09 20:28:58,515 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeName
  2015-06-09 20:28:58,516 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,516 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,516 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.StockExchange)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.StockExchange, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.StockExchange)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.StockExchange)
          - SQL table alias mapping - stockexcha0_
          - alias suffix - 0_
          - suffixed key columns - {stockExc1_33_0_}

  2015-06-09 20:28:58,516 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.StockExchange [UPGRADE_SKIPLOCKED]: select stockexcha0_.stockExchangeID as stockExc1_33_0_, stockexcha0_.countryID as countryI3_33_0_, stockexcha0_.ExchangeName as Exchange2_33_0_ from StockExchange stockexcha0_ where stockexcha0_.stockExchangeID=? for update
  2015-06-09 20:28:58,516 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@354fc8f0]
  2015-06-09 20:28:58,516 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,516 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryID
  2015-06-09 20:28:58,516 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeName
  2015-06-09 20:28:58,516 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,517 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,517 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.StockExchange)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.StockExchange, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.StockExchange)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.StockExchange)
          - SQL table alias mapping - stockexcha0_
          - alias suffix - 0_
          - suffixed key columns - {stockExc1_33_0_}

  2015-06-09 20:28:58,517 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.StockExchange [FORCE]: select stockexcha0_.stockExchangeID as stockExc1_33_0_, stockexcha0_.countryID as countryI3_33_0_, stockexcha0_.ExchangeName as Exchange2_33_0_ from StockExchange stockexcha0_ where stockexcha0_.stockExchangeID=? for update nowait 
  2015-06-09 20:28:58,517 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4678a2eb]
  2015-06-09 20:28:58,517 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,517 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryID
  2015-06-09 20:28:58,517 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeName
  2015-06-09 20:28:58,517 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,517 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,517 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.StockExchange)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.StockExchange, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.StockExchange)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.StockExchange)
          - SQL table alias mapping - stockexcha0_
          - alias suffix - 0_
          - suffixed key columns - {stockExc1_33_0_}

  2015-06-09 20:28:58,517 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.StockExchange [PESSIMISTIC_READ]: select stockexcha0_.stockExchangeID as stockExc1_33_0_, stockexcha0_.countryID as countryI3_33_0_, stockexcha0_.ExchangeName as Exchange2_33_0_ from StockExchange stockexcha0_ where stockexcha0_.stockExchangeID=? for share
  2015-06-09 20:28:58,517 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1080b026]
  2015-06-09 20:28:58,518 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,518 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryID
  2015-06-09 20:28:58,518 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeName
  2015-06-09 20:28:58,518 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,518 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,518 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.StockExchange)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.StockExchange, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.StockExchange)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.StockExchange)
          - SQL table alias mapping - stockexcha0_
          - alias suffix - 0_
          - suffixed key columns - {stockExc1_33_0_}

  2015-06-09 20:28:58,518 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.StockExchange [PESSIMISTIC_WRITE]: select stockexcha0_.stockExchangeID as stockExc1_33_0_, stockexcha0_.countryID as countryI3_33_0_, stockexcha0_.ExchangeName as Exchange2_33_0_ from StockExchange stockexcha0_ where stockexcha0_.stockExchangeID=? for update
  2015-06-09 20:28:58,518 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b07730f]
  2015-06-09 20:28:58,518 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,518 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryID
  2015-06-09 20:28:58,518 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeName
  2015-06-09 20:28:58,518 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,518 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,519 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.StockExchange)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.StockExchange, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.StockExchange)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.StockExchange)
          - SQL table alias mapping - stockexcha0_
          - alias suffix - 0_
          - suffixed key columns - {stockExc1_33_0_}

  2015-06-09 20:28:58,519 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.StockExchange [PESSIMISTIC_FORCE_INCREMENT]: select stockexcha0_.stockExchangeID as stockExc1_33_0_, stockexcha0_.countryID as countryI3_33_0_, stockexcha0_.ExchangeName as Exchange2_33_0_ from StockExchange stockexcha0_ where stockexcha0_.stockExchangeID=? for update nowait 
  2015-06-09 20:28:58,519 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a4b2d8f]
  2015-06-09 20:28:58,519 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,519 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryID
  2015-06-09 20:28:58,519 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeName
  2015-06-09 20:28:58,519 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,519 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,519 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.StockExchange)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.StockExchange, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.StockExchange)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.StockExchange)
          - SQL table alias mapping - stockexcha0_
          - alias suffix - 0_
          - suffixed key columns - {stockExc1_33_0_}

  2015-06-09 20:28:58,519 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.StockExchange [OPTIMISTIC]: select stockexcha0_.stockExchangeID as stockExc1_33_0_, stockexcha0_.countryID as countryI3_33_0_, stockexcha0_.ExchangeName as Exchange2_33_0_ from StockExchange stockexcha0_ where stockexcha0_.stockExchangeID=?
  2015-06-09 20:28:58,519 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d304f9d]
  2015-06-09 20:28:58,519 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,519 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryID
  2015-06-09 20:28:58,520 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeName
  2015-06-09 20:28:58,520 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,520 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,525 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.StockExchange)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.StockExchange, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.StockExchange)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.StockExchange)
          - SQL table alias mapping - stockexcha0_
          - alias suffix - 0_
          - suffixed key columns - {stockExc1_33_0_}

  2015-06-09 20:28:58,525 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.StockExchange [OPTIMISTIC_FORCE_INCREMENT]: select stockexcha0_.stockExchangeID as stockExc1_33_0_, stockexcha0_.countryID as countryI3_33_0_, stockexcha0_.ExchangeName as Exchange2_33_0_ from StockExchange stockexcha0_ where stockexcha0_.stockExchangeID=?
  2015-06-09 20:28:58,526 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.securities.StockExchange: select stockexcha0_.stockExchangeID as stockExc1_33_1_, stockexcha0_.countryID as countryI3_33_1_, stockexcha0_.ExchangeName as Exchange2_33_1_, companyset1_.stockExchangeID as stockExc9_33_3_, companyset1_.companyID as companyI1_4_3_, companyset1_.companyID as companyI1_4_0_, companyset1_.CNPJ as CNPJ2_4_0_, companyset1_.CompanyDate as CompanyD3_4_0_, companyset1_.CompanyName as CompanyN4_4_0_, companyset1_.MarketName as MarketNa5_4_0_, companyset1_.OnShares as OnShares6_4_0_, companyset1_.PnShares as PnShares7_4_0_, companyset1_.Status as Status8_4_0_, companyset1_.stockExchangeID as stockExc9_4_0_ from StockExchange stockexcha0_ left outer join Company companyset1_ on stockexcha0_.stockExchangeID=companyset1_.stockExchangeID where stockexcha0_.stockExchangeID=?
  2015-06-09 20:28:58,526 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.securities.StockExchange: select stockexcha0_.stockExchangeID as stockExc1_33_1_, stockexcha0_.countryID as countryI3_33_1_, stockexcha0_.ExchangeName as Exchange2_33_1_, companyset1_.stockExchangeID as stockExc9_33_3_, companyset1_.companyID as companyI1_4_3_, companyset1_.companyID as companyI1_4_0_, companyset1_.CNPJ as CNPJ2_4_0_, companyset1_.CompanyDate as CompanyD3_4_0_, companyset1_.CompanyName as CompanyN4_4_0_, companyset1_.MarketName as MarketNa5_4_0_, companyset1_.OnShares as OnShares6_4_0_, companyset1_.PnShares as PnShares7_4_0_, companyset1_.Status as Status8_4_0_, companyset1_.stockExchangeID as stockExc9_4_0_ from StockExchange stockexcha0_ left outer join Company companyset1_ on stockexcha0_.stockExchangeID=companyset1_.stockExchangeID where stockexcha0_.stockExchangeID=?
  2015-06-09 20:28:58,526 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.securities.IndexComposition
  2015-06-09 20:28:58,526 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select indexCompID from IndexComposition where indexCompID =?
  2015-06-09 20:28:58,526 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select indexcompo_.indexCompID, indexcompo_.IndexDate as IndexDat2_18_, indexcompo_.indexID as indexID3_18_, indexcompo_.securityID as security4_18_ from IndexComposition indexcompo_ where indexcompo_.indexCompID=?
  2015-06-09 20:28:58,526 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into IndexComposition (IndexDate, indexID, securityID, indexCompID) values (?, ?, ?, ?)
  2015-06-09 20:28:58,526 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update IndexComposition set IndexDate=?, indexID=?, securityID=? where indexCompID=?
  2015-06-09 20:28:58,526 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from IndexComposition where indexCompID=?
  2015-06-09 20:28:58,526 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c87bfe2]
  2015-06-09 20:28:58,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexDate
  2015-06-09 20:28:58,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexID
  2015-06-09 20:28:58,527 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,527 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,527 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,528 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.IndexComposition)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.IndexComposition, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.IndexComposition)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.IndexComposition)
          - SQL table alias mapping - indexcompo0_
          - alias suffix - 0_
          - suffixed key columns - {indexCom1_18_0_}

  2015-06-09 20:28:58,528 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.IndexComposition [NONE]: select indexcompo0_.indexCompID as indexCom1_18_0_, indexcompo0_.IndexDate as IndexDat2_18_0_, indexcompo0_.indexID as indexID3_18_0_, indexcompo0_.securityID as security4_18_0_ from IndexComposition indexcompo0_ where indexcompo0_.indexCompID=?
  2015-06-09 20:28:58,529 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40499e4f]
  2015-06-09 20:28:58,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexDate
  2015-06-09 20:28:58,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexID
  2015-06-09 20:28:58,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,529 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,529 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,529 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.IndexComposition)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.IndexComposition, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.IndexComposition)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.IndexComposition)
          - SQL table alias mapping - indexcompo0_
          - alias suffix - 0_
          - suffixed key columns - {indexCom1_18_0_}

  2015-06-09 20:28:58,529 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.IndexComposition [READ]: select indexcompo0_.indexCompID as indexCom1_18_0_, indexcompo0_.IndexDate as IndexDat2_18_0_, indexcompo0_.indexID as indexID3_18_0_, indexcompo0_.securityID as security4_18_0_ from IndexComposition indexcompo0_ where indexcompo0_.indexCompID=?
  2015-06-09 20:28:58,529 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30d4b288]
  2015-06-09 20:28:58,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexDate
  2015-06-09 20:28:58,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexID
  2015-06-09 20:28:58,529 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,529 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,529 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,530 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.IndexComposition)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.IndexComposition, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.IndexComposition)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.IndexComposition)
          - SQL table alias mapping - indexcompo0_
          - alias suffix - 0_
          - suffixed key columns - {indexCom1_18_0_}

  2015-06-09 20:28:58,530 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.IndexComposition [UPGRADE]: select indexcompo0_.indexCompID as indexCom1_18_0_, indexcompo0_.IndexDate as IndexDat2_18_0_, indexcompo0_.indexID as indexID3_18_0_, indexcompo0_.securityID as security4_18_0_ from IndexComposition indexcompo0_ where indexcompo0_.indexCompID=? for update
  2015-06-09 20:28:58,530 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40f1be1b]
  2015-06-09 20:28:58,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexDate
  2015-06-09 20:28:58,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexID
  2015-06-09 20:28:58,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,530 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,530 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,530 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.IndexComposition)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.IndexComposition, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.IndexComposition)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.IndexComposition)
          - SQL table alias mapping - indexcompo0_
          - alias suffix - 0_
          - suffixed key columns - {indexCom1_18_0_}

  2015-06-09 20:28:58,530 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.IndexComposition [UPGRADE_NOWAIT]: select indexcompo0_.indexCompID as indexCom1_18_0_, indexcompo0_.IndexDate as IndexDat2_18_0_, indexcompo0_.indexID as indexID3_18_0_, indexcompo0_.securityID as security4_18_0_ from IndexComposition indexcompo0_ where indexcompo0_.indexCompID=? for update nowait 
  2015-06-09 20:28:58,530 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f2cb653]
  2015-06-09 20:28:58,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexDate
  2015-06-09 20:28:58,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexID
  2015-06-09 20:28:58,530 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,530 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,531 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,531 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.IndexComposition)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.IndexComposition, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.IndexComposition)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.IndexComposition)
          - SQL table alias mapping - indexcompo0_
          - alias suffix - 0_
          - suffixed key columns - {indexCom1_18_0_}

  2015-06-09 20:28:58,531 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.IndexComposition [UPGRADE_SKIPLOCKED]: select indexcompo0_.indexCompID as indexCom1_18_0_, indexcompo0_.IndexDate as IndexDat2_18_0_, indexcompo0_.indexID as indexID3_18_0_, indexcompo0_.securityID as security4_18_0_ from IndexComposition indexcompo0_ where indexcompo0_.indexCompID=? for update
  2015-06-09 20:28:58,531 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@590c73d3]
  2015-06-09 20:28:58,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexDate
  2015-06-09 20:28:58,531 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexID
  2015-06-09 20:28:58,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,532 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,532 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,532 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.IndexComposition)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.IndexComposition, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.IndexComposition)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.IndexComposition)
          - SQL table alias mapping - indexcompo0_
          - alias suffix - 0_
          - suffixed key columns - {indexCom1_18_0_}

  2015-06-09 20:28:58,532 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.IndexComposition [FORCE]: select indexcompo0_.indexCompID as indexCom1_18_0_, indexcompo0_.IndexDate as IndexDat2_18_0_, indexcompo0_.indexID as indexID3_18_0_, indexcompo0_.securityID as security4_18_0_ from IndexComposition indexcompo0_ where indexcompo0_.indexCompID=? for update nowait 
  2015-06-09 20:28:58,532 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61884cb1]
  2015-06-09 20:28:58,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexDate
  2015-06-09 20:28:58,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexID
  2015-06-09 20:28:58,532 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,532 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,532 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,532 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.IndexComposition)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.IndexComposition, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.IndexComposition)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.IndexComposition)
          - SQL table alias mapping - indexcompo0_
          - alias suffix - 0_
          - suffixed key columns - {indexCom1_18_0_}

  2015-06-09 20:28:58,532 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.IndexComposition [PESSIMISTIC_READ]: select indexcompo0_.indexCompID as indexCom1_18_0_, indexcompo0_.IndexDate as IndexDat2_18_0_, indexcompo0_.indexID as indexID3_18_0_, indexcompo0_.securityID as security4_18_0_ from IndexComposition indexcompo0_ where indexcompo0_.indexCompID=? for share
  2015-06-09 20:28:58,532 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fc5e095]
  2015-06-09 20:28:58,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexDate
  2015-06-09 20:28:58,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexID
  2015-06-09 20:28:58,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,533 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,533 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,533 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.IndexComposition)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.IndexComposition, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.IndexComposition)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.IndexComposition)
          - SQL table alias mapping - indexcompo0_
          - alias suffix - 0_
          - suffixed key columns - {indexCom1_18_0_}

  2015-06-09 20:28:58,533 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.IndexComposition [PESSIMISTIC_WRITE]: select indexcompo0_.indexCompID as indexCom1_18_0_, indexcompo0_.IndexDate as IndexDat2_18_0_, indexcompo0_.indexID as indexID3_18_0_, indexcompo0_.securityID as security4_18_0_ from IndexComposition indexcompo0_ where indexcompo0_.indexCompID=? for update
  2015-06-09 20:28:58,533 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@609640d5]
  2015-06-09 20:28:58,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexDate
  2015-06-09 20:28:58,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexID
  2015-06-09 20:28:58,533 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,534 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,534 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,534 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.IndexComposition)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.IndexComposition, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.IndexComposition)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.IndexComposition)
          - SQL table alias mapping - indexcompo0_
          - alias suffix - 0_
          - suffixed key columns - {indexCom1_18_0_}

  2015-06-09 20:28:58,534 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.IndexComposition [PESSIMISTIC_FORCE_INCREMENT]: select indexcompo0_.indexCompID as indexCom1_18_0_, indexcompo0_.IndexDate as IndexDat2_18_0_, indexcompo0_.indexID as indexID3_18_0_, indexcompo0_.securityID as security4_18_0_ from IndexComposition indexcompo0_ where indexcompo0_.indexCompID=? for update nowait 
  2015-06-09 20:28:58,534 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19fb8826]
  2015-06-09 20:28:58,534 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexDate
  2015-06-09 20:28:58,534 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexID
  2015-06-09 20:28:58,534 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,534 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,534 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,534 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.IndexComposition)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.IndexComposition, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.IndexComposition)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.IndexComposition)
          - SQL table alias mapping - indexcompo0_
          - alias suffix - 0_
          - suffixed key columns - {indexCom1_18_0_}

  2015-06-09 20:28:58,534 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.IndexComposition [OPTIMISTIC]: select indexcompo0_.indexCompID as indexCom1_18_0_, indexcompo0_.IndexDate as IndexDat2_18_0_, indexcompo0_.indexID as indexID3_18_0_, indexcompo0_.securityID as security4_18_0_ from IndexComposition indexcompo0_ where indexcompo0_.indexCompID=?
  2015-06-09 20:28:58,534 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bef0fe3]
  2015-06-09 20:28:58,534 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexDate
  2015-06-09 20:28:58,534 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexID
  2015-06-09 20:28:58,535 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,535 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,535 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,535 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.IndexComposition)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.IndexComposition, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.IndexComposition)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.IndexComposition)
          - SQL table alias mapping - indexcompo0_
          - alias suffix - 0_
          - suffixed key columns - {indexCom1_18_0_}

  2015-06-09 20:28:58,535 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.IndexComposition [OPTIMISTIC_FORCE_INCREMENT]: select indexcompo0_.indexCompID as indexCom1_18_0_, indexcompo0_.IndexDate as IndexDat2_18_0_, indexcompo0_.indexID as indexID3_18_0_, indexcompo0_.securityID as security4_18_0_ from IndexComposition indexcompo0_ where indexcompo0_.indexCompID=?
  2015-06-09 20:28:58,535 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.securities.IndexComposition: select indexcompo0_.indexCompID as indexCom1_18_0_, indexcompo0_.IndexDate as IndexDat2_18_0_, indexcompo0_.indexID as indexID3_18_0_, indexcompo0_.securityID as security4_18_0_ from IndexComposition indexcompo0_ where indexcompo0_.indexCompID=?
  2015-06-09 20:28:58,535 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.securities.IndexComposition: select indexcompo0_.indexCompID as indexCom1_18_0_, indexcompo0_.IndexDate as IndexDat2_18_0_, indexcompo0_.indexID as indexID3_18_0_, indexcompo0_.securityID as security4_18_0_ from IndexComposition indexcompo0_ where indexcompo0_.indexCompID=?
  2015-06-09 20:28:58,535 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.RuleFormula
  2015-06-09 20:28:58,535 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select ruleFormulaID from RuleFormula where ruleFormulaID =?
  2015-06-09 20:28:58,535 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select ruleformul_.ruleFormulaID, ruleformul_.Description as Descript2_28_, ruleformul_.ValueFormula as ValueFor3_28_ from RuleFormula ruleformul_ where ruleformul_.ruleFormulaID=?
  2015-06-09 20:28:58,535 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into RuleFormula (Description, ValueFormula, ruleFormulaID) values (?, ?, ?)
  2015-06-09 20:28:58,535 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update RuleFormula set Description=?, ValueFormula=? where ruleFormulaID=?
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from RuleFormula where ruleFormulaID=?
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27953a83]
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66ce957f]
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55b5f5d2]
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.applyTax
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.applyValue
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.creditAccountID
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.debitAccountID
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.distributionRuleID
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.object
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.ruleFormulaID
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : ruleSet.ruleFormulaID
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.taxSetupID
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueFormula
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,536 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.RuleFormula)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.RuleFormula, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.RuleFormula)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.RuleFormula.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.RuleFormula.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.RuleFormula.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.RuleFormula)
          - SQL table alias mapping - ruleformul0_
          - alias suffix - 0_
          - suffixed key columns - {ruleForm1_28_0_}
          - JOIN (JoinDefinedByMetadata(ruleSet)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.cmm.jft.financial.RuleFormula.ruleSet)
                - SQL table alias mapping - ruleset1_
                - alias suffix - 1_
                - suffixed key columns - {ruleForm8_28_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - ruleID1_27_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.cmm.jft.financial.Rule)
                      - SQL table alias mapping - ruleset1_
                      - alias suffix - 2_
                      - suffixed key columns - {ruleID1_27_2_}

  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.RuleFormula [NONE]: select ruleformul0_.ruleFormulaID as ruleForm1_28_0_, ruleformul0_.Description as Descript2_28_0_, ruleformul0_.ValueFormula as ValueFor3_28_0_, ruleset1_.ruleFormulaID as ruleForm8_28_1_, ruleset1_.ruleID as ruleID1_27_1_, ruleset1_.ruleID as ruleID1_27_2_, ruleset1_.ApplyTax as ApplyTax2_27_2_, ruleset1_.ApplyValue as ApplyVal3_27_2_, ruleset1_.creditAccountID as creditAc5_27_2_, ruleset1_.debitAccountID as debitAcc6_27_2_, ruleset1_.distributionRuleID as distribu7_27_2_, ruleset1_.Object as Object4_27_2_, ruleset1_.ruleFormulaID as ruleForm8_27_2_, ruleset1_.taxSetupID as taxSetup9_27_2_ from RuleFormula ruleformul0_ left outer join Rule ruleset1_ on ruleformul0_.ruleFormulaID=ruleset1_.ruleFormulaID where ruleformul0_.ruleFormulaID=?
  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@749c877b]
  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16ecee1]
  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b220bcb]
  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.applyTax
  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.applyValue
  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.creditAccountID
  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.debitAccountID
  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.distributionRuleID
  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.object
  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.ruleFormulaID
  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : ruleSet.ruleFormulaID
  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet.taxSetupID
  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueFormula
  2015-06-09 20:28:58,537 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,538 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,538 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.RuleFormula)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.RuleFormula, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.RuleFormula)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.RuleFormula.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.RuleFormula.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.RuleFormula.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.RuleFormula)
          - SQL table alias mapping - ruleformul0_
          - alias suffix - 0_
          - suffixed key columns - {ruleForm1_28_0_}
          - JOIN (JoinDefinedByMetadata(ruleSet)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.cmm.jft.financial.RuleFormula.ruleSet)
                - SQL table alias mapping - ruleset1_
                - alias suffix - 1_
                - suffixed key columns - {ruleForm8_28_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - ruleID1_27_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.cmm.jft.financial.Rule)
                      - SQL table alias mapping - ruleset1_
                      - alias suffix - 2_
                      - suffixed key columns - {ruleID1_27_2_}

  2015-06-09 20:28:58,538 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.RuleFormula [READ]: select ruleformul0_.ruleFormulaID as ruleForm1_28_0_, ruleformul0_.Description as Descript2_28_0_, ruleformul0_.ValueFormula as ValueFor3_28_0_, ruleset1_.ruleFormulaID as ruleForm8_28_1_, ruleset1_.ruleID as ruleID1_27_1_, ruleset1_.ruleID as ruleID1_27_2_, ruleset1_.ApplyTax as ApplyTax2_27_2_, ruleset1_.ApplyValue as ApplyVal3_27_2_, ruleset1_.creditAccountID as creditAc5_27_2_, ruleset1_.debitAccountID as debitAcc6_27_2_, ruleset1_.distributionRuleID as distribu7_27_2_, ruleset1_.Object as Object4_27_2_, ruleset1_.ruleFormulaID as ruleForm8_27_2_, ruleset1_.taxSetupID as taxSetup9_27_2_ from RuleFormula ruleformul0_ left outer join Rule ruleset1_ on ruleformul0_.ruleFormulaID=ruleset1_.ruleFormulaID where ruleformul0_.ruleFormulaID=?
  2015-06-09 20:28:58,538 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dddefd8]
  2015-06-09 20:28:58,538 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,538 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,538 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12bfd80d]
  2015-06-09 20:28:58,538 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41925502]
  2015-06-09 20:28:58,538 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueFormula
  2015-06-09 20:28:58,538 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,538 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,539 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.RuleFormula)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.RuleFormula, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.RuleFormula)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.RuleFormula.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.RuleFormula.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.RuleFormula.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.RuleFormula)
          - SQL table alias mapping - ruleformul0_
          - alias suffix - 0_
          - suffixed key columns - {ruleForm1_28_0_}

  2015-06-09 20:28:58,539 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.RuleFormula [UPGRADE]: select ruleformul0_.ruleFormulaID as ruleForm1_28_0_, ruleformul0_.Description as Descript2_28_0_, ruleformul0_.ValueFormula as ValueFor3_28_0_ from RuleFormula ruleformul0_ where ruleformul0_.ruleFormulaID=? for update
  2015-06-09 20:28:58,539 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13e3c1c7]
  2015-06-09 20:28:58,539 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,539 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,539 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f053c80]
  2015-06-09 20:28:58,539 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c6c5427]
  2015-06-09 20:28:58,539 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueFormula
  2015-06-09 20:28:58,539 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,539 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,539 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.RuleFormula)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.RuleFormula, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.RuleFormula)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.RuleFormula.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.RuleFormula.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.RuleFormula.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.RuleFormula)
          - SQL table alias mapping - ruleformul0_
          - alias suffix - 0_
          - suffixed key columns - {ruleForm1_28_0_}

  2015-06-09 20:28:58,539 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.RuleFormula [UPGRADE_NOWAIT]: select ruleformul0_.ruleFormulaID as ruleForm1_28_0_, ruleformul0_.Description as Descript2_28_0_, ruleformul0_.ValueFormula as ValueFor3_28_0_ from RuleFormula ruleformul0_ where ruleformul0_.ruleFormulaID=? for update nowait 
  2015-06-09 20:28:58,539 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@618c5d94]
  2015-06-09 20:28:58,540 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,540 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,540 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13c3c1e1]
  2015-06-09 20:28:58,540 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8062d2]
  2015-06-09 20:28:58,540 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueFormula
  2015-06-09 20:28:58,540 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,540 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,540 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.RuleFormula)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.RuleFormula, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.RuleFormula)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.RuleFormula.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.RuleFormula.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.RuleFormula.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.RuleFormula)
          - SQL table alias mapping - ruleformul0_
          - alias suffix - 0_
          - suffixed key columns - {ruleForm1_28_0_}

  2015-06-09 20:28:58,540 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.RuleFormula [UPGRADE_SKIPLOCKED]: select ruleformul0_.ruleFormulaID as ruleForm1_28_0_, ruleformul0_.Description as Descript2_28_0_, ruleformul0_.ValueFormula as ValueFor3_28_0_ from RuleFormula ruleformul0_ where ruleformul0_.ruleFormulaID=? for update
  2015-06-09 20:28:58,540 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e63ec0b]
  2015-06-09 20:28:58,540 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,540 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,540 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36546a22]
  2015-06-09 20:28:58,540 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@285c08c8]
  2015-06-09 20:28:58,540 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueFormula
  2015-06-09 20:28:58,540 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,540 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,541 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.RuleFormula)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.RuleFormula, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.RuleFormula)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.RuleFormula.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.RuleFormula.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.RuleFormula.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.RuleFormula)
          - SQL table alias mapping - ruleformul0_
          - alias suffix - 0_
          - suffixed key columns - {ruleForm1_28_0_}

  2015-06-09 20:28:58,541 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.RuleFormula [FORCE]: select ruleformul0_.ruleFormulaID as ruleForm1_28_0_, ruleformul0_.Description as Descript2_28_0_, ruleformul0_.ValueFormula as ValueFor3_28_0_ from RuleFormula ruleformul0_ where ruleformul0_.ruleFormulaID=? for update nowait 
  2015-06-09 20:28:58,541 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@295eaa7c]
  2015-06-09 20:28:58,541 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,541 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,541 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c88b9fc]
  2015-06-09 20:28:58,541 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64dafeed]
  2015-06-09 20:28:58,541 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueFormula
  2015-06-09 20:28:58,541 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,541 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,541 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.RuleFormula)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.RuleFormula, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.RuleFormula)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.RuleFormula.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.RuleFormula.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.RuleFormula.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.RuleFormula)
          - SQL table alias mapping - ruleformul0_
          - alias suffix - 0_
          - suffixed key columns - {ruleForm1_28_0_}

  2015-06-09 20:28:58,541 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.RuleFormula [PESSIMISTIC_READ]: select ruleformul0_.ruleFormulaID as ruleForm1_28_0_, ruleformul0_.Description as Descript2_28_0_, ruleformul0_.ValueFormula as ValueFor3_28_0_ from RuleFormula ruleformul0_ where ruleformul0_.ruleFormulaID=? for share
  2015-06-09 20:28:58,541 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@388ba540]
  2015-06-09 20:28:58,541 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,541 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,541 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ece4966]
  2015-06-09 20:28:58,541 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dd0e7c4]
  2015-06-09 20:28:58,542 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueFormula
  2015-06-09 20:28:58,542 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,542 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,542 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.RuleFormula)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.RuleFormula, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.RuleFormula)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.RuleFormula.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.RuleFormula.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.RuleFormula.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.RuleFormula)
          - SQL table alias mapping - ruleformul0_
          - alias suffix - 0_
          - suffixed key columns - {ruleForm1_28_0_}

  2015-06-09 20:28:58,542 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.RuleFormula [PESSIMISTIC_WRITE]: select ruleformul0_.ruleFormulaID as ruleForm1_28_0_, ruleformul0_.Description as Descript2_28_0_, ruleformul0_.ValueFormula as ValueFor3_28_0_ from RuleFormula ruleformul0_ where ruleformul0_.ruleFormulaID=? for update
  2015-06-09 20:28:58,542 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7894f09b]
  2015-06-09 20:28:58,542 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,542 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,542 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6111ba37]
  2015-06-09 20:28:58,542 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7be58f16]
  2015-06-09 20:28:58,542 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueFormula
  2015-06-09 20:28:58,542 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,542 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,543 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.RuleFormula)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.RuleFormula, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.RuleFormula)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.RuleFormula.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.RuleFormula.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.RuleFormula.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.RuleFormula)
          - SQL table alias mapping - ruleformul0_
          - alias suffix - 0_
          - suffixed key columns - {ruleForm1_28_0_}

  2015-06-09 20:28:58,543 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.RuleFormula [PESSIMISTIC_FORCE_INCREMENT]: select ruleformul0_.ruleFormulaID as ruleForm1_28_0_, ruleformul0_.Description as Descript2_28_0_, ruleformul0_.ValueFormula as ValueFor3_28_0_ from RuleFormula ruleformul0_ where ruleformul0_.ruleFormulaID=? for update nowait 
  2015-06-09 20:28:58,543 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@242aa8d9]
  2015-06-09 20:28:58,543 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,543 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,543 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37bd68c3]
  2015-06-09 20:28:58,543 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f7cc1d]
  2015-06-09 20:28:58,543 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueFormula
  2015-06-09 20:28:58,543 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,543 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,543 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.RuleFormula)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.RuleFormula, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.RuleFormula)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.RuleFormula.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.RuleFormula.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.RuleFormula.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.RuleFormula)
          - SQL table alias mapping - ruleformul0_
          - alias suffix - 0_
          - suffixed key columns - {ruleForm1_28_0_}

  2015-06-09 20:28:58,544 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.RuleFormula [OPTIMISTIC]: select ruleformul0_.ruleFormulaID as ruleForm1_28_0_, ruleformul0_.Description as Descript2_28_0_, ruleformul0_.ValueFormula as ValueFor3_28_0_ from RuleFormula ruleformul0_ where ruleformul0_.ruleFormulaID=?
  2015-06-09 20:28:58,544 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11eadcba]
  2015-06-09 20:28:58,544 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,544 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,544 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b065145]
  2015-06-09 20:28:58,544 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45cff11c]
  2015-06-09 20:28:58,544 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueFormula
  2015-06-09 20:28:58,544 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,544 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,544 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.RuleFormula)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.RuleFormula, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.RuleFormula)
          - CollectionAttributeFetchImpl(collection=com.cmm.jft.financial.RuleFormula.ruleSet, querySpaceUid=<gen:1>, path=com.cmm.jft.financial.RuleFormula.ruleSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:2>, path=com.cmm.jft.financial.RuleFormula.ruleSet.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.RuleFormula)
          - SQL table alias mapping - ruleformul0_
          - alias suffix - 0_
          - suffixed key columns - {ruleForm1_28_0_}

  2015-06-09 20:28:58,545 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.RuleFormula [OPTIMISTIC_FORCE_INCREMENT]: select ruleformul0_.ruleFormulaID as ruleForm1_28_0_, ruleformul0_.Description as Descript2_28_0_, ruleformul0_.ValueFormula as ValueFor3_28_0_ from RuleFormula ruleformul0_ where ruleformul0_.ruleFormulaID=?
  2015-06-09 20:28:58,545 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.RuleFormula: select ruleformul0_.ruleFormulaID as ruleForm1_28_1_, ruleformul0_.Description as Descript2_28_1_, ruleformul0_.ValueFormula as ValueFor3_28_1_, ruleset1_.ruleFormulaID as ruleForm8_28_3_, ruleset1_.ruleID as ruleID1_27_3_, ruleset1_.ruleID as ruleID1_27_0_, ruleset1_.ApplyTax as ApplyTax2_27_0_, ruleset1_.ApplyValue as ApplyVal3_27_0_, ruleset1_.creditAccountID as creditAc5_27_0_, ruleset1_.debitAccountID as debitAcc6_27_0_, ruleset1_.distributionRuleID as distribu7_27_0_, ruleset1_.Object as Object4_27_0_, ruleset1_.ruleFormulaID as ruleForm8_27_0_, ruleset1_.taxSetupID as taxSetup9_27_0_ from RuleFormula ruleformul0_ left outer join Rule ruleset1_ on ruleformul0_.ruleFormulaID=ruleset1_.ruleFormulaID where ruleformul0_.ruleFormulaID=?
  2015-06-09 20:28:58,545 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.RuleFormula: select ruleformul0_.ruleFormulaID as ruleForm1_28_1_, ruleformul0_.Description as Descript2_28_1_, ruleformul0_.ValueFormula as ValueFor3_28_1_, ruleset1_.ruleFormulaID as ruleForm8_28_3_, ruleset1_.ruleID as ruleID1_27_3_, ruleset1_.ruleID as ruleID1_27_0_, ruleset1_.ApplyTax as ApplyTax2_27_0_, ruleset1_.ApplyValue as ApplyVal3_27_0_, ruleset1_.creditAccountID as creditAc5_27_0_, ruleset1_.debitAccountID as debitAcc6_27_0_, ruleset1_.distributionRuleID as distribu7_27_0_, ruleset1_.Object as Object4_27_0_, ruleset1_.ruleFormulaID as ruleForm8_27_0_, ruleset1_.taxSetupID as taxSetup9_27_0_ from RuleFormula ruleformul0_ left outer join Rule ruleset1_ on ruleformul0_.ruleFormulaID=ruleset1_.ruleFormulaID where ruleformul0_.ruleFormulaID=?
  2015-06-09 20:28:58,545 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.Rule
  2015-06-09 20:28:58,545 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select ruleID from Rule where ruleID =?
  2015-06-09 20:28:58,545 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select rule_.ruleID, rule_.ApplyTax as ApplyTax2_27_, rule_.ApplyValue as ApplyVal3_27_, rule_.creditAccountID as creditAc5_27_, rule_.debitAccountID as debitAcc6_27_, rule_.distributionRuleID as distribu7_27_, rule_.Object as Object4_27_, rule_.ruleFormulaID as ruleForm8_27_, rule_.taxSetupID as taxSetup9_27_ from Rule rule_ where rule_.ruleID=?
  2015-06-09 20:28:58,545 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Rule (ApplyTax, ApplyValue, creditAccountID, debitAccountID, distributionRuleID, Object, ruleFormulaID, taxSetupID, ruleID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
  2015-06-09 20:28:58,545 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Rule set ApplyTax=?, ApplyValue=?, creditAccountID=?, debitAccountID=?, distributionRuleID=?, Object=?, ruleFormulaID=?, taxSetupID=? where ruleID=?
  2015-06-09 20:28:58,545 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Rule where ruleID=?
  2015-06-09 20:28:58,545 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@207ea13]
  2015-06-09 20:28:58,546 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:28:58,546 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:28:58,546 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,546 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,546 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:28:58,546 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:28:58,546 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:28:58,546 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:28:58,546 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,546 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,546 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Rule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Rule)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Rule)
          - SQL table alias mapping - rule0_
          - alias suffix - 0_
          - suffixed key columns - {ruleID1_27_0_}

  2015-06-09 20:28:58,547 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Rule [NONE]: select rule0_.ruleID as ruleID1_27_0_, rule0_.ApplyTax as ApplyTax2_27_0_, rule0_.ApplyValue as ApplyVal3_27_0_, rule0_.creditAccountID as creditAc5_27_0_, rule0_.debitAccountID as debitAcc6_27_0_, rule0_.distributionRuleID as distribu7_27_0_, rule0_.Object as Object4_27_0_, rule0_.ruleFormulaID as ruleForm8_27_0_, rule0_.taxSetupID as taxSetup9_27_0_ from Rule rule0_ where rule0_.ruleID=?
  2015-06-09 20:28:58,547 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62dae540]
  2015-06-09 20:28:58,548 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:28:58,548 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:28:58,548 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,548 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,548 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:28:58,548 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:28:58,548 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:28:58,548 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:28:58,549 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,549 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,550 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Rule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Rule)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Rule)
          - SQL table alias mapping - rule0_
          - alias suffix - 0_
          - suffixed key columns - {ruleID1_27_0_}

  2015-06-09 20:28:58,550 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Rule [READ]: select rule0_.ruleID as ruleID1_27_0_, rule0_.ApplyTax as ApplyTax2_27_0_, rule0_.ApplyValue as ApplyVal3_27_0_, rule0_.creditAccountID as creditAc5_27_0_, rule0_.debitAccountID as debitAcc6_27_0_, rule0_.distributionRuleID as distribu7_27_0_, rule0_.Object as Object4_27_0_, rule0_.ruleFormulaID as ruleForm8_27_0_, rule0_.taxSetupID as taxSetup9_27_0_ from Rule rule0_ where rule0_.ruleID=?
  2015-06-09 20:28:58,550 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@654d8173]
  2015-06-09 20:28:58,550 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:28:58,550 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:28:58,550 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,550 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,550 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:28:58,550 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:28:58,550 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:28:58,550 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:28:58,550 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,550 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,550 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Rule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Rule)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Rule)
          - SQL table alias mapping - rule0_
          - alias suffix - 0_
          - suffixed key columns - {ruleID1_27_0_}

  2015-06-09 20:28:58,551 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Rule [UPGRADE]: select rule0_.ruleID as ruleID1_27_0_, rule0_.ApplyTax as ApplyTax2_27_0_, rule0_.ApplyValue as ApplyVal3_27_0_, rule0_.creditAccountID as creditAc5_27_0_, rule0_.debitAccountID as debitAcc6_27_0_, rule0_.distributionRuleID as distribu7_27_0_, rule0_.Object as Object4_27_0_, rule0_.ruleFormulaID as ruleForm8_27_0_, rule0_.taxSetupID as taxSetup9_27_0_ from Rule rule0_ where rule0_.ruleID=? for update
  2015-06-09 20:28:58,551 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@630cb4a4]
  2015-06-09 20:28:58,551 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:28:58,551 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:28:58,551 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,551 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,551 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:28:58,551 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:28:58,551 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:28:58,551 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:28:58,551 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,552 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,552 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Rule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Rule)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Rule)
          - SQL table alias mapping - rule0_
          - alias suffix - 0_
          - suffixed key columns - {ruleID1_27_0_}

  2015-06-09 20:28:58,552 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Rule [UPGRADE_NOWAIT]: select rule0_.ruleID as ruleID1_27_0_, rule0_.ApplyTax as ApplyTax2_27_0_, rule0_.ApplyValue as ApplyVal3_27_0_, rule0_.creditAccountID as creditAc5_27_0_, rule0_.debitAccountID as debitAcc6_27_0_, rule0_.distributionRuleID as distribu7_27_0_, rule0_.Object as Object4_27_0_, rule0_.ruleFormulaID as ruleForm8_27_0_, rule0_.taxSetupID as taxSetup9_27_0_ from Rule rule0_ where rule0_.ruleID=? for update nowait 
  2015-06-09 20:28:58,552 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f79a760]
  2015-06-09 20:28:58,552 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:28:58,552 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:28:58,552 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,552 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,552 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:28:58,552 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:28:58,552 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:28:58,552 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:28:58,552 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,552 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,555 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Rule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Rule)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Rule)
          - SQL table alias mapping - rule0_
          - alias suffix - 0_
          - suffixed key columns - {ruleID1_27_0_}

  2015-06-09 20:28:58,555 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Rule [UPGRADE_SKIPLOCKED]: select rule0_.ruleID as ruleID1_27_0_, rule0_.ApplyTax as ApplyTax2_27_0_, rule0_.ApplyValue as ApplyVal3_27_0_, rule0_.creditAccountID as creditAc5_27_0_, rule0_.debitAccountID as debitAcc6_27_0_, rule0_.distributionRuleID as distribu7_27_0_, rule0_.Object as Object4_27_0_, rule0_.ruleFormulaID as ruleForm8_27_0_, rule0_.taxSetupID as taxSetup9_27_0_ from Rule rule0_ where rule0_.ruleID=? for update
  2015-06-09 20:28:58,555 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12dae582]
  2015-06-09 20:28:58,555 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:28:58,555 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:28:58,555 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,555 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,555 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:28:58,555 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:28:58,555 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:28:58,555 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:28:58,555 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,556 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,557 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Rule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Rule)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Rule)
          - SQL table alias mapping - rule0_
          - alias suffix - 0_
          - suffixed key columns - {ruleID1_27_0_}

  2015-06-09 20:28:58,557 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Rule [FORCE]: select rule0_.ruleID as ruleID1_27_0_, rule0_.ApplyTax as ApplyTax2_27_0_, rule0_.ApplyValue as ApplyVal3_27_0_, rule0_.creditAccountID as creditAc5_27_0_, rule0_.debitAccountID as debitAcc6_27_0_, rule0_.distributionRuleID as distribu7_27_0_, rule0_.Object as Object4_27_0_, rule0_.ruleFormulaID as ruleForm8_27_0_, rule0_.taxSetupID as taxSetup9_27_0_ from Rule rule0_ where rule0_.ruleID=? for update nowait 
  2015-06-09 20:28:58,558 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@619bfe29]
  2015-06-09 20:28:58,558 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:28:58,558 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:28:58,558 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,558 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,558 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:28:58,558 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:28:58,558 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:28:58,558 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:28:58,558 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,558 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,559 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Rule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Rule)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Rule)
          - SQL table alias mapping - rule0_
          - alias suffix - 0_
          - suffixed key columns - {ruleID1_27_0_}

  2015-06-09 20:28:58,560 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Rule [PESSIMISTIC_READ]: select rule0_.ruleID as ruleID1_27_0_, rule0_.ApplyTax as ApplyTax2_27_0_, rule0_.ApplyValue as ApplyVal3_27_0_, rule0_.creditAccountID as creditAc5_27_0_, rule0_.debitAccountID as debitAcc6_27_0_, rule0_.distributionRuleID as distribu7_27_0_, rule0_.Object as Object4_27_0_, rule0_.ruleFormulaID as ruleForm8_27_0_, rule0_.taxSetupID as taxSetup9_27_0_ from Rule rule0_ where rule0_.ruleID=? for share
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eb6749b]
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Rule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Rule)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Rule)
          - SQL table alias mapping - rule0_
          - alias suffix - 0_
          - suffixed key columns - {ruleID1_27_0_}

  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Rule [PESSIMISTIC_WRITE]: select rule0_.ruleID as ruleID1_27_0_, rule0_.ApplyTax as ApplyTax2_27_0_, rule0_.ApplyValue as ApplyVal3_27_0_, rule0_.creditAccountID as creditAc5_27_0_, rule0_.debitAccountID as debitAcc6_27_0_, rule0_.distributionRuleID as distribu7_27_0_, rule0_.Object as Object4_27_0_, rule0_.ruleFormulaID as ruleForm8_27_0_, rule0_.taxSetupID as taxSetup9_27_0_ from Rule rule0_ where rule0_.ruleID=? for update
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b7ea70d]
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,561 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:28:58,562 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:28:58,562 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:28:58,562 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:28:58,562 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,562 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,562 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Rule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Rule)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Rule)
          - SQL table alias mapping - rule0_
          - alias suffix - 0_
          - suffixed key columns - {ruleID1_27_0_}

  2015-06-09 20:28:58,562 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Rule [PESSIMISTIC_FORCE_INCREMENT]: select rule0_.ruleID as ruleID1_27_0_, rule0_.ApplyTax as ApplyTax2_27_0_, rule0_.ApplyValue as ApplyVal3_27_0_, rule0_.creditAccountID as creditAc5_27_0_, rule0_.debitAccountID as debitAcc6_27_0_, rule0_.distributionRuleID as distribu7_27_0_, rule0_.Object as Object4_27_0_, rule0_.ruleFormulaID as ruleForm8_27_0_, rule0_.taxSetupID as taxSetup9_27_0_ from Rule rule0_ where rule0_.ruleID=? for update nowait 
  2015-06-09 20:28:58,562 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@650eab8]
  2015-06-09 20:28:58,562 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Rule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Rule)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Rule)
          - SQL table alias mapping - rule0_
          - alias suffix - 0_
          - suffixed key columns - {ruleID1_27_0_}

  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Rule [OPTIMISTIC]: select rule0_.ruleID as ruleID1_27_0_, rule0_.ApplyTax as ApplyTax2_27_0_, rule0_.ApplyValue as ApplyVal3_27_0_, rule0_.creditAccountID as creditAc5_27_0_, rule0_.debitAccountID as debitAcc6_27_0_, rule0_.distributionRuleID as distribu7_27_0_, rule0_.Object as Object4_27_0_, rule0_.ruleFormulaID as ruleForm8_27_0_, rule0_.taxSetupID as taxSetup9_27_0_ from Rule rule0_ where rule0_.ruleID=?
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e1d3956]
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,563 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,564 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Rule)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Rule)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Rule)
          - SQL table alias mapping - rule0_
          - alias suffix - 0_
          - suffixed key columns - {ruleID1_27_0_}

  2015-06-09 20:28:58,564 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Rule [OPTIMISTIC_FORCE_INCREMENT]: select rule0_.ruleID as ruleID1_27_0_, rule0_.ApplyTax as ApplyTax2_27_0_, rule0_.ApplyValue as ApplyVal3_27_0_, rule0_.creditAccountID as creditAc5_27_0_, rule0_.debitAccountID as debitAcc6_27_0_, rule0_.distributionRuleID as distribu7_27_0_, rule0_.Object as Object4_27_0_, rule0_.ruleFormulaID as ruleForm8_27_0_, rule0_.taxSetupID as taxSetup9_27_0_ from Rule rule0_ where rule0_.ruleID=?
  2015-06-09 20:28:58,564 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.Rule: select rule0_.ruleID as ruleID1_27_0_, rule0_.ApplyTax as ApplyTax2_27_0_, rule0_.ApplyValue as ApplyVal3_27_0_, rule0_.creditAccountID as creditAc5_27_0_, rule0_.debitAccountID as debitAcc6_27_0_, rule0_.distributionRuleID as distribu7_27_0_, rule0_.Object as Object4_27_0_, rule0_.ruleFormulaID as ruleForm8_27_0_, rule0_.taxSetupID as taxSetup9_27_0_ from Rule rule0_ where rule0_.ruleID=?
  2015-06-09 20:28:58,564 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.Rule: select rule0_.ruleID as ruleID1_27_0_, rule0_.ApplyTax as ApplyTax2_27_0_, rule0_.ApplyValue as ApplyVal3_27_0_, rule0_.creditAccountID as creditAc5_27_0_, rule0_.debitAccountID as debitAcc6_27_0_, rule0_.distributionRuleID as distribu7_27_0_, rule0_.Object as Object4_27_0_, rule0_.ruleFormulaID as ruleForm8_27_0_, rule0_.taxSetupID as taxSetup9_27_0_ from Rule rule0_ where rule0_.ruleID=?
  2015-06-09 20:28:58,564 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.account.Commission
  2015-06-09 20:28:58,564 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select commissionID from Commission where commissionID =?
  2015-06-09 20:28:58,564 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select commission_.commissionID, commission_.brokerageID as brokerag6_3_, commission_.CalcTypes as CalcType2_3_, commission_.CommValue as CommValu3_3_, commission_.ValueMax as ValueMax4_3_, commission_.ValueMin as ValueMin5_3_ from Commission commission_ where commission_.commissionID=?
  2015-06-09 20:28:58,564 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Commission (brokerageID, CalcTypes, CommValue, ValueMax, ValueMin, commissionID) values (?, ?, ?, ?, ?, ?)
  2015-06-09 20:28:58,564 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Commission set brokerageID=?, CalcTypes=?, CommValue=?, ValueMax=?, ValueMin=? where commissionID=?
  2015-06-09 20:28:58,564 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Commission where commissionID=?
  2015-06-09 20:28:58,564 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e28bdd1]
  2015-06-09 20:28:58,564 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,564 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,564 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commValue
  2015-06-09 20:28:58,564 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMax
  2015-06-09 20:28:58,564 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMin
  2015-06-09 20:28:58,564 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Commission)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Commission, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Commission)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Commission)
          - SQL table alias mapping - commission0_
          - alias suffix - 0_
          - suffixed key columns - {commissi1_3_0_}

  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Commission [NONE]: select commission0_.commissionID as commissi1_3_0_, commission0_.brokerageID as brokerag6_3_0_, commission0_.CalcTypes as CalcType2_3_0_, commission0_.CommValue as CommValu3_3_0_, commission0_.ValueMax as ValueMax4_3_0_, commission0_.ValueMin as ValueMin5_3_0_ from Commission commission0_ where commission0_.commissionID=?
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24d4d7c9]
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commValue
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMax
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMin
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Commission)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Commission, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Commission)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Commission)
          - SQL table alias mapping - commission0_
          - alias suffix - 0_
          - suffixed key columns - {commissi1_3_0_}

  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Commission [READ]: select commission0_.commissionID as commissi1_3_0_, commission0_.brokerageID as brokerag6_3_0_, commission0_.CalcTypes as CalcType2_3_0_, commission0_.CommValue as CommValu3_3_0_, commission0_.ValueMax as ValueMax4_3_0_, commission0_.ValueMin as ValueMin5_3_0_ from Commission commission0_ where commission0_.commissionID=?
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c37b5b]
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commValue
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMax
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMin
  2015-06-09 20:28:58,565 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Commission)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Commission, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Commission)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Commission)
          - SQL table alias mapping - commission0_
          - alias suffix - 0_
          - suffixed key columns - {commissi1_3_0_}

  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Commission [UPGRADE]: select commission0_.commissionID as commissi1_3_0_, commission0_.brokerageID as brokerag6_3_0_, commission0_.CalcTypes as CalcType2_3_0_, commission0_.CommValue as CommValu3_3_0_, commission0_.ValueMax as ValueMax4_3_0_, commission0_.ValueMin as ValueMin5_3_0_ from Commission commission0_ where commission0_.commissionID=? for update
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b3bc45]
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commValue
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMax
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMin
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Commission)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Commission, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Commission)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Commission)
          - SQL table alias mapping - commission0_
          - alias suffix - 0_
          - suffixed key columns - {commissi1_3_0_}

  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Commission [UPGRADE_NOWAIT]: select commission0_.commissionID as commissi1_3_0_, commission0_.brokerageID as brokerag6_3_0_, commission0_.CalcTypes as CalcType2_3_0_, commission0_.CommValue as CommValu3_3_0_, commission0_.ValueMax as ValueMax4_3_0_, commission0_.ValueMin as ValueMin5_3_0_ from Commission commission0_ where commission0_.commissionID=? for update nowait 
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@150ab4ed]
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commValue
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMax
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMin
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,566 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Commission)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Commission, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Commission)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Commission)
          - SQL table alias mapping - commission0_
          - alias suffix - 0_
          - suffixed key columns - {commissi1_3_0_}

  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Commission [UPGRADE_SKIPLOCKED]: select commission0_.commissionID as commissi1_3_0_, commission0_.brokerageID as brokerag6_3_0_, commission0_.CalcTypes as CalcType2_3_0_, commission0_.CommValue as CommValu3_3_0_, commission0_.ValueMax as ValueMax4_3_0_, commission0_.ValueMin as ValueMin5_3_0_ from Commission commission0_ where commission0_.commissionID=? for update
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50fe837a]
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commValue
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMax
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMin
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Commission)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Commission, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Commission)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Commission)
          - SQL table alias mapping - commission0_
          - alias suffix - 0_
          - suffixed key columns - {commissi1_3_0_}

  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Commission [FORCE]: select commission0_.commissionID as commissi1_3_0_, commission0_.brokerageID as brokerag6_3_0_, commission0_.CalcTypes as CalcType2_3_0_, commission0_.CommValue as CommValu3_3_0_, commission0_.ValueMax as ValueMax4_3_0_, commission0_.ValueMin as ValueMin5_3_0_ from Commission commission0_ where commission0_.commissionID=? for update nowait 
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a8fa663]
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commValue
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMax
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMin
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,567 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Commission)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Commission, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Commission)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Commission)
          - SQL table alias mapping - commission0_
          - alias suffix - 0_
          - suffixed key columns - {commissi1_3_0_}

  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Commission [PESSIMISTIC_READ]: select commission0_.commissionID as commissi1_3_0_, commission0_.brokerageID as brokerag6_3_0_, commission0_.CalcTypes as CalcType2_3_0_, commission0_.CommValue as CommValu3_3_0_, commission0_.ValueMax as ValueMax4_3_0_, commission0_.ValueMin as ValueMin5_3_0_ from Commission commission0_ where commission0_.commissionID=? for share
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a287ed]
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commValue
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMax
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMin
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Commission)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Commission, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Commission)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Commission)
          - SQL table alias mapping - commission0_
          - alias suffix - 0_
          - suffixed key columns - {commissi1_3_0_}

  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Commission [PESSIMISTIC_WRITE]: select commission0_.commissionID as commissi1_3_0_, commission0_.brokerageID as brokerag6_3_0_, commission0_.CalcTypes as CalcType2_3_0_, commission0_.CommValue as CommValu3_3_0_, commission0_.ValueMax as ValueMax4_3_0_, commission0_.ValueMin as ValueMin5_3_0_ from Commission commission0_ where commission0_.commissionID=? for update
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5357c287]
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commValue
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMax
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMin
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,568 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Commission)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Commission, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Commission)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Commission)
          - SQL table alias mapping - commission0_
          - alias suffix - 0_
          - suffixed key columns - {commissi1_3_0_}

  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Commission [PESSIMISTIC_FORCE_INCREMENT]: select commission0_.commissionID as commissi1_3_0_, commission0_.brokerageID as brokerag6_3_0_, commission0_.CalcTypes as CalcType2_3_0_, commission0_.CommValue as CommValu3_3_0_, commission0_.ValueMax as ValueMax4_3_0_, commission0_.ValueMin as ValueMin5_3_0_ from Commission commission0_ where commission0_.commissionID=? for update nowait 
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a527389]
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commValue
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMax
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMin
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Commission)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Commission, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Commission)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Commission)
          - SQL table alias mapping - commission0_
          - alias suffix - 0_
          - suffixed key columns - {commissi1_3_0_}

  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Commission [OPTIMISTIC]: select commission0_.commissionID as commissi1_3_0_, commission0_.brokerageID as brokerag6_3_0_, commission0_.CalcTypes as CalcType2_3_0_, commission0_.CommValue as CommValu3_3_0_, commission0_.ValueMax as ValueMax4_3_0_, commission0_.ValueMin as ValueMin5_3_0_ from Commission commission0_ where commission0_.commissionID=?
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25748410]
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commValue
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMax
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMin
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,569 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Commission)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Commission, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Commission)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Commission)
          - SQL table alias mapping - commission0_
          - alias suffix - 0_
          - suffixed key columns - {commissi1_3_0_}

  2015-06-09 20:28:58,570 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Commission [OPTIMISTIC_FORCE_INCREMENT]: select commission0_.commissionID as commissi1_3_0_, commission0_.brokerageID as brokerag6_3_0_, commission0_.CalcTypes as CalcType2_3_0_, commission0_.CommValue as CommValu3_3_0_, commission0_.ValueMax as ValueMax4_3_0_, commission0_.ValueMin as ValueMin5_3_0_ from Commission commission0_ where commission0_.commissionID=?
  2015-06-09 20:28:58,570 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.account.Commission: select commission0_.commissionID as commissi1_3_3_, commission0_.brokerageID as brokerag6_3_3_, commission0_.CalcTypes as CalcType2_3_3_, commission0_.CommValue as CommValu3_3_3_, commission0_.ValueMax as ValueMax4_3_3_, commission0_.ValueMin as ValueMin5_3_3_, brokerage1_.brokerageID as brokerag1_2_0_, brokerage1_.brokerID as brokerID4_2_0_, brokerage1_.Category as Category2_2_0_, brokerage1_.TradeType as TradeTyp3_2_0_, broker2_.brokerID as brokerID1_1_1_, broker2_.BrokerCode as BrokerCo2_1_1_, broker2_.BrokerName as BrokerNa3_1_1_, marketorde3_.brokerID as brokerID9_1_5_, marketorde3_.marketOrderID as marketOr1_22_5_, marketorde3_.marketOrderID as marketOr1_22_2_, marketorde3_.brokerID as brokerID9_22_2_, marketorde3_.ExpirationDate as Expirati2_22_2_, marketorde3_.ExternalID as External3_22_2_, marketorde3_.OrderDateTime as OrderDat4_22_2_, marketorde3_.OrderStatus as OrderSta5_22_2_, marketorde3_.Price as Price6_22_2_, marketorde3_.securityID as securit10_22_2_, marketorde3_.Side as Side7_22_2_, marketorde3_.Volume as Volume8_22_2_ from Commission commission0_ inner join Brokerage brokerage1_ on commission0_.brokerageID=brokerage1_.brokerageID left outer join Broker broker2_ on brokerage1_.brokerID=broker2_.brokerID left outer join MarketOrder marketorde3_ on broker2_.brokerID=marketorde3_.brokerID where commission0_.commissionID=?
  2015-06-09 20:28:58,570 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.account.Commission: select commission0_.commissionID as commissi1_3_3_, commission0_.brokerageID as brokerag6_3_3_, commission0_.CalcTypes as CalcType2_3_3_, commission0_.CommValue as CommValu3_3_3_, commission0_.ValueMax as ValueMax4_3_3_, commission0_.ValueMin as ValueMin5_3_3_, brokerage1_.brokerageID as brokerag1_2_0_, brokerage1_.brokerID as brokerID4_2_0_, brokerage1_.Category as Category2_2_0_, brokerage1_.TradeType as TradeTyp3_2_0_, broker2_.brokerID as brokerID1_1_1_, broker2_.BrokerCode as BrokerCo2_1_1_, broker2_.BrokerName as BrokerNa3_1_1_, marketorde3_.brokerID as brokerID9_1_5_, marketorde3_.marketOrderID as marketOr1_22_5_, marketorde3_.marketOrderID as marketOr1_22_2_, marketorde3_.brokerID as brokerID9_22_2_, marketorde3_.ExpirationDate as Expirati2_22_2_, marketorde3_.ExternalID as External3_22_2_, marketorde3_.OrderDateTime as OrderDat4_22_2_, marketorde3_.OrderStatus as OrderSta5_22_2_, marketorde3_.Price as Price6_22_2_, marketorde3_.securityID as securit10_22_2_, marketorde3_.Side as Side7_22_2_, marketorde3_.Volume as Volume8_22_2_ from Commission commission0_ inner join Brokerage brokerage1_ on commission0_.brokerageID=brokerage1_.brokerageID left outer join Broker broker2_ on brokerage1_.brokerID=broker2_.brokerID left outer join MarketOrder marketorde3_ on broker2_.brokerID=marketorde3_.brokerID where commission0_.commissionID=?
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.EntryRegister
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select entryRegisterID from EntryRegister where entryRegisterID =?
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select entryregis_.entryRegisterID, entryregis_.Credit as Credit2_14_, entryregis_.creditAccountID as creditAc7_14_, entryregis_.currencyID as currency8_14_, entryregis_.Debit as Debit3_14_, entryregis_.debitAccountID as debitAcc9_14_, entryregis_.Description as Descript4_14_, entryregis_.entryID as entryID10_14_, entryregis_.EntryType as EntryTyp5_14_, entryregis_.OperationID as Operatio6_14_ from EntryRegister entryregis_ where entryregis_.entryRegisterID=?
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into EntryRegister (Credit, creditAccountID, currencyID, Debit, debitAccountID, Description, entryID, EntryType, OperationID, entryRegisterID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update EntryRegister set Credit=?, creditAccountID=?, currencyID=?, Debit=?, debitAccountID=?, Description=?, entryID=?, EntryType=?, OperationID=? where entryRegisterID=?
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from EntryRegister where entryRegisterID=?
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4264b240]
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.EntryRegister)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.EntryRegister)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.EntryRegister)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {entryReg1_14_0_}

  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.EntryRegister [NONE]: select entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.Credit as Credit2_14_0_, entryregis0_.creditAccountID as creditAc7_14_0_, entryregis0_.currencyID as currency8_14_0_, entryregis0_.Debit as Debit3_14_0_, entryregis0_.debitAccountID as debitAcc9_14_0_, entryregis0_.Description as Descript4_14_0_, entryregis0_.entryID as entryID10_14_0_, entryregis0_.EntryType as EntryTyp5_14_0_, entryregis0_.OperationID as Operatio6_14_0_ from EntryRegister entryregis0_ where entryregis0_.entryRegisterID=?
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ad10c1a]
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,571 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.EntryRegister)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.EntryRegister)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.EntryRegister)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {entryReg1_14_0_}

  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.EntryRegister [READ]: select entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.Credit as Credit2_14_0_, entryregis0_.creditAccountID as creditAc7_14_0_, entryregis0_.currencyID as currency8_14_0_, entryregis0_.Debit as Debit3_14_0_, entryregis0_.debitAccountID as debitAcc9_14_0_, entryregis0_.Description as Descript4_14_0_, entryregis0_.entryID as entryID10_14_0_, entryregis0_.EntryType as EntryTyp5_14_0_, entryregis0_.OperationID as Operatio6_14_0_ from EntryRegister entryregis0_ where entryregis0_.entryRegisterID=?
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c260bdc]
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,572 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.EntryRegister)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.EntryRegister)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.EntryRegister)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {entryReg1_14_0_}

  2015-06-09 20:28:58,574 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.EntryRegister [UPGRADE]: select entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.Credit as Credit2_14_0_, entryregis0_.creditAccountID as creditAc7_14_0_, entryregis0_.currencyID as currency8_14_0_, entryregis0_.Debit as Debit3_14_0_, entryregis0_.debitAccountID as debitAcc9_14_0_, entryregis0_.Description as Descript4_14_0_, entryregis0_.entryID as entryID10_14_0_, entryregis0_.EntryType as EntryTyp5_14_0_, entryregis0_.OperationID as Operatio6_14_0_ from EntryRegister entryregis0_ where entryregis0_.entryRegisterID=? for update
  2015-06-09 20:28:58,574 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2783717b]
  2015-06-09 20:28:58,574 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:28:58,574 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,574 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.EntryRegister)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.EntryRegister)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.EntryRegister)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {entryReg1_14_0_}

  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.EntryRegister [UPGRADE_NOWAIT]: select entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.Credit as Credit2_14_0_, entryregis0_.creditAccountID as creditAc7_14_0_, entryregis0_.currencyID as currency8_14_0_, entryregis0_.Debit as Debit3_14_0_, entryregis0_.debitAccountID as debitAcc9_14_0_, entryregis0_.Description as Descript4_14_0_, entryregis0_.entryID as entryID10_14_0_, entryregis0_.EntryType as EntryTyp5_14_0_, entryregis0_.OperationID as Operatio6_14_0_ from EntryRegister entryregis0_ where entryregis0_.entryRegisterID=? for update nowait 
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a335fa8]
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:28:58,575 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.EntryRegister)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.EntryRegister)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.EntryRegister)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {entryReg1_14_0_}

  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.EntryRegister [UPGRADE_SKIPLOCKED]: select entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.Credit as Credit2_14_0_, entryregis0_.creditAccountID as creditAc7_14_0_, entryregis0_.currencyID as currency8_14_0_, entryregis0_.Debit as Debit3_14_0_, entryregis0_.debitAccountID as debitAcc9_14_0_, entryregis0_.Description as Descript4_14_0_, entryregis0_.entryID as entryID10_14_0_, entryregis0_.EntryType as EntryTyp5_14_0_, entryregis0_.OperationID as Operatio6_14_0_ from EntryRegister entryregis0_ where entryregis0_.entryRegisterID=? for update
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3829ac1]
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.EntryRegister)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.EntryRegister)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.EntryRegister)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {entryReg1_14_0_}

  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.EntryRegister [FORCE]: select entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.Credit as Credit2_14_0_, entryregis0_.creditAccountID as creditAc7_14_0_, entryregis0_.currencyID as currency8_14_0_, entryregis0_.Debit as Debit3_14_0_, entryregis0_.debitAccountID as debitAcc9_14_0_, entryregis0_.Description as Descript4_14_0_, entryregis0_.entryID as entryID10_14_0_, entryregis0_.EntryType as EntryTyp5_14_0_, entryregis0_.OperationID as Operatio6_14_0_ from EntryRegister entryregis0_ where entryregis0_.entryRegisterID=? for update nowait 
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb1fde8]
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:28:58,576 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,577 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,577 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:28:58,577 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,577 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,577 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:28:58,577 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:28:58,577 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:28:58,577 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,577 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,577 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.EntryRegister)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.EntryRegister)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.EntryRegister)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {entryReg1_14_0_}

  2015-06-09 20:28:58,577 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.EntryRegister [PESSIMISTIC_READ]: select entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.Credit as Credit2_14_0_, entryregis0_.creditAccountID as creditAc7_14_0_, entryregis0_.currencyID as currency8_14_0_, entryregis0_.Debit as Debit3_14_0_, entryregis0_.debitAccountID as debitAcc9_14_0_, entryregis0_.Description as Descript4_14_0_, entryregis0_.entryID as entryID10_14_0_, entryregis0_.EntryType as EntryTyp5_14_0_, entryregis0_.OperationID as Operatio6_14_0_ from EntryRegister entryregis0_ where entryregis0_.entryRegisterID=? for share
  2015-06-09 20:28:58,577 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d6f11]
  2015-06-09 20:28:58,577 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:28:58,577 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,577 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,577 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.EntryRegister)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.EntryRegister)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.EntryRegister)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {entryReg1_14_0_}

  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.EntryRegister [PESSIMISTIC_WRITE]: select entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.Credit as Credit2_14_0_, entryregis0_.creditAccountID as creditAc7_14_0_, entryregis0_.currencyID as currency8_14_0_, entryregis0_.Debit as Debit3_14_0_, entryregis0_.debitAccountID as debitAcc9_14_0_, entryregis0_.Description as Descript4_14_0_, entryregis0_.entryID as entryID10_14_0_, entryregis0_.EntryType as EntryTyp5_14_0_, entryregis0_.OperationID as Operatio6_14_0_ from EntryRegister entryregis0_ where entryregis0_.entryRegisterID=? for update
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2453f95d]
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,578 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.EntryRegister)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.EntryRegister)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.EntryRegister)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {entryReg1_14_0_}

  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.EntryRegister [PESSIMISTIC_FORCE_INCREMENT]: select entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.Credit as Credit2_14_0_, entryregis0_.creditAccountID as creditAc7_14_0_, entryregis0_.currencyID as currency8_14_0_, entryregis0_.Debit as Debit3_14_0_, entryregis0_.debitAccountID as debitAcc9_14_0_, entryregis0_.Description as Descript4_14_0_, entryregis0_.entryID as entryID10_14_0_, entryregis0_.EntryType as EntryTyp5_14_0_, entryregis0_.OperationID as Operatio6_14_0_ from EntryRegister entryregis0_ where entryregis0_.entryRegisterID=? for update nowait 
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dbe250d]
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.EntryRegister)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.EntryRegister)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.EntryRegister)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {entryReg1_14_0_}

  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.EntryRegister [OPTIMISTIC]: select entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.Credit as Credit2_14_0_, entryregis0_.creditAccountID as creditAc7_14_0_, entryregis0_.currencyID as currency8_14_0_, entryregis0_.Debit as Debit3_14_0_, entryregis0_.debitAccountID as debitAcc9_14_0_, entryregis0_.Description as Descript4_14_0_, entryregis0_.entryID as entryID10_14_0_, entryregis0_.EntryType as EntryTyp5_14_0_, entryregis0_.OperationID as Operatio6_14_0_ from EntryRegister entryregis0_ where entryregis0_.entryRegisterID=?
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e1d8f9e]
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:28:58,579 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,580 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,580 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.EntryRegister)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.EntryRegister)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.EntryRegister)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {entryReg1_14_0_}

  2015-06-09 20:28:58,580 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.EntryRegister [OPTIMISTIC_FORCE_INCREMENT]: select entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.Credit as Credit2_14_0_, entryregis0_.creditAccountID as creditAc7_14_0_, entryregis0_.currencyID as currency8_14_0_, entryregis0_.Debit as Debit3_14_0_, entryregis0_.debitAccountID as debitAcc9_14_0_, entryregis0_.Description as Descript4_14_0_, entryregis0_.entryID as entryID10_14_0_, entryregis0_.EntryType as EntryTyp5_14_0_, entryregis0_.OperationID as Operatio6_14_0_ from EntryRegister entryregis0_ where entryregis0_.entryRegisterID=?
  2015-06-09 20:28:58,581 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.EntryRegister: select entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.Credit as Credit2_14_0_, entryregis0_.creditAccountID as creditAc7_14_0_, entryregis0_.currencyID as currency8_14_0_, entryregis0_.Debit as Debit3_14_0_, entryregis0_.debitAccountID as debitAcc9_14_0_, entryregis0_.Description as Descript4_14_0_, entryregis0_.entryID as entryID10_14_0_, entryregis0_.EntryType as EntryTyp5_14_0_, entryregis0_.OperationID as Operatio6_14_0_ from EntryRegister entryregis0_ where entryregis0_.entryRegisterID=?
  2015-06-09 20:28:58,581 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.EntryRegister: select entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.Credit as Credit2_14_0_, entryregis0_.creditAccountID as creditAc7_14_0_, entryregis0_.currencyID as currency8_14_0_, entryregis0_.Debit as Debit3_14_0_, entryregis0_.debitAccountID as debitAcc9_14_0_, entryregis0_.Description as Descript4_14_0_, entryregis0_.entryID as entryID10_14_0_, entryregis0_.EntryType as EntryTyp5_14_0_, entryregis0_.OperationID as Operatio6_14_0_ from EntryRegister entryregis0_ where entryregis0_.entryRegisterID=?
  2015-06-09 20:28:58,581 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.securities.Country
  2015-06-09 20:28:58,581 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select countryID from Country where countryID =?
  2015-06-09 20:28:58,581 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select country_.countryID, country_.Area as Area2_8_, country_.Continent as Continen3_8_, country_.CountryName as CountryN4_8_, country_.Population as Populati5_8_ from Country country_ where country_.countryID=?
  2015-06-09 20:28:58,581 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Country (Area, Continent, CountryName, Population, countryID) values (?, ?, ?, ?, ?)
  2015-06-09 20:28:58,581 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Country set Area=?, Continent=?, CountryName=?, Population=? where countryID=?
  2015-06-09 20:28:58,581 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Country where countryID=?
  2015-06-09 20:28:58,581 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62fe6067]
  2015-06-09 20:28:58,581 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : area
  2015-06-09 20:28:58,581 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : continent
  2015-06-09 20:28:58,581 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryName
  2015-06-09 20:28:58,581 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangesList
  2015-06-09 20:28:58,583 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : population
  2015-06-09 20:28:58,583 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,583 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,583 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Country)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Country, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_8_0_}

  2015-06-09 20:28:58,583 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Country [NONE]: select country0_.countryID as countryI1_8_0_, country0_.Area as Area2_8_0_, country0_.Continent as Continen3_8_0_, country0_.CountryName as CountryN4_8_0_, country0_.Population as Populati5_8_0_ from Country country0_ where country0_.countryID=?
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4de41af9]
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : area
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : continent
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryName
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangesList
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : population
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Country)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Country, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_8_0_}

  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Country [READ]: select country0_.countryID as countryI1_8_0_, country0_.Area as Area2_8_0_, country0_.Continent as Continen3_8_0_, country0_.CountryName as CountryN4_8_0_, country0_.Population as Populati5_8_0_ from Country country0_ where country0_.countryID=?
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47404bea]
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : area
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : continent
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryName
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangesList
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : population
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,584 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Country)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Country, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_8_0_}

  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Country [UPGRADE]: select country0_.countryID as countryI1_8_0_, country0_.Area as Area2_8_0_, country0_.Continent as Continen3_8_0_, country0_.CountryName as CountryN4_8_0_, country0_.Population as Populati5_8_0_ from Country country0_ where country0_.countryID=? for update
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d018107]
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : area
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : continent
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryName
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangesList
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : population
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Country)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Country, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_8_0_}

  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Country [UPGRADE_NOWAIT]: select country0_.countryID as countryI1_8_0_, country0_.Area as Area2_8_0_, country0_.Continent as Continen3_8_0_, country0_.CountryName as CountryN4_8_0_, country0_.Population as Populati5_8_0_ from Country country0_ where country0_.countryID=? for update nowait 
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29e6eb25]
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : area
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : continent
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryName
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangesList
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : population
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Country)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Country, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_8_0_}

  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Country [UPGRADE_SKIPLOCKED]: select country0_.countryID as countryI1_8_0_, country0_.Area as Area2_8_0_, country0_.Continent as Continen3_8_0_, country0_.CountryName as CountryN4_8_0_, country0_.Population as Populati5_8_0_ from Country country0_ where country0_.countryID=? for update
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@339bf286]
  2015-06-09 20:28:58,585 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : area
  2015-06-09 20:28:58,586 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : continent
  2015-06-09 20:28:58,586 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryName
  2015-06-09 20:28:58,586 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangesList
  2015-06-09 20:28:58,586 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : population
  2015-06-09 20:28:58,586 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,586 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,586 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Country)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Country, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_8_0_}

  2015-06-09 20:28:58,586 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Country [FORCE]: select country0_.countryID as countryI1_8_0_, country0_.Area as Area2_8_0_, country0_.Continent as Continen3_8_0_, country0_.CountryName as CountryN4_8_0_, country0_.Population as Populati5_8_0_ from Country country0_ where country0_.countryID=? for update nowait 
  2015-06-09 20:28:58,586 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@269f4bad]
  2015-06-09 20:28:58,586 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : area
  2015-06-09 20:28:58,586 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : continent
  2015-06-09 20:28:58,586 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryName
  2015-06-09 20:28:58,586 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangesList
  2015-06-09 20:28:58,586 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : population
  2015-06-09 20:28:58,586 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,586 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Country)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Country, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_8_0_}

  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Country [PESSIMISTIC_READ]: select country0_.countryID as countryI1_8_0_, country0_.Area as Area2_8_0_, country0_.Continent as Continen3_8_0_, country0_.CountryName as CountryN4_8_0_, country0_.Population as Populati5_8_0_ from Country country0_ where country0_.countryID=? for share
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3234f74e]
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : area
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : continent
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryName
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangesList
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : population
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Country)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Country, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_8_0_}

  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Country [PESSIMISTIC_WRITE]: select country0_.countryID as countryI1_8_0_, country0_.Area as Area2_8_0_, country0_.Continent as Continen3_8_0_, country0_.CountryName as CountryN4_8_0_, country0_.Population as Populati5_8_0_ from Country country0_ where country0_.countryID=? for update
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@275fe372]
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : area
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : continent
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryName
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangesList
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : population
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Country)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Country, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_8_0_}

  2015-06-09 20:28:58,587 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Country [PESSIMISTIC_FORCE_INCREMENT]: select country0_.countryID as countryI1_8_0_, country0_.Area as Area2_8_0_, country0_.Continent as Continen3_8_0_, country0_.CountryName as CountryN4_8_0_, country0_.Population as Populati5_8_0_ from Country country0_ where country0_.countryID=? for update nowait 
  2015-06-09 20:28:58,589 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@557a1e2d]
  2015-06-09 20:28:58,589 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : area
  2015-06-09 20:28:58,589 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : continent
  2015-06-09 20:28:58,589 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryName
  2015-06-09 20:28:58,589 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangesList
  2015-06-09 20:28:58,589 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : population
  2015-06-09 20:28:58,589 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,589 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,589 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Country)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Country, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_8_0_}

  2015-06-09 20:28:58,589 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Country [OPTIMISTIC]: select country0_.countryID as countryI1_8_0_, country0_.Area as Area2_8_0_, country0_.Continent as Continen3_8_0_, country0_.CountryName as CountryN4_8_0_, country0_.Population as Populati5_8_0_ from Country country0_ where country0_.countryID=?
  2015-06-09 20:28:58,589 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e38a7fe]
  2015-06-09 20:28:58,589 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : area
  2015-06-09 20:28:58,589 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : continent
  2015-06-09 20:28:58,589 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryName
  2015-06-09 20:28:58,589 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangesList
  2015-06-09 20:28:58,589 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : population
  2015-06-09 20:28:58,589 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,590 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,590 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Country)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Country, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_8_0_}

  2015-06-09 20:28:58,590 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Country [OPTIMISTIC_FORCE_INCREMENT]: select country0_.countryID as countryI1_8_0_, country0_.Area as Area2_8_0_, country0_.Continent as Continen3_8_0_, country0_.CountryName as CountryN4_8_0_, country0_.Population as Populati5_8_0_ from Country country0_ where country0_.countryID=?
  2015-06-09 20:28:58,590 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.securities.Country: select country0_.countryID as countryI1_8_1_, country0_.Area as Area2_8_1_, country0_.Continent as Continen3_8_1_, country0_.CountryName as CountryN4_8_1_, country0_.Population as Populati5_8_1_, exchangesl1_.countryID as countryI3_8_3_, exchangesl1_.stockExchangeID as stockExc1_33_3_, exchangesl1_.stockExchangeID as stockExc1_33_0_, exchangesl1_.countryID as countryI3_33_0_, exchangesl1_.ExchangeName as Exchange2_33_0_ from Country country0_ left outer join StockExchange exchangesl1_ on country0_.countryID=exchangesl1_.countryID where country0_.countryID=?
  2015-06-09 20:28:58,591 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.securities.Country: select country0_.countryID as countryI1_8_1_, country0_.Area as Area2_8_1_, country0_.Continent as Continen3_8_1_, country0_.CountryName as CountryN4_8_1_, country0_.Population as Populati5_8_1_, exchangesl1_.countryID as countryI3_8_3_, exchangesl1_.stockExchangeID as stockExc1_33_3_, exchangesl1_.stockExchangeID as stockExc1_33_0_, exchangesl1_.countryID as countryI3_33_0_, exchangesl1_.ExchangeName as Exchange2_33_0_ from Country country0_ left outer join StockExchange exchangesl1_ on country0_.countryID=exchangesl1_.countryID where country0_.countryID=?
  2015-06-09 20:28:58,591 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.securities.Sector
  2015-06-09 20:28:58,591 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select sectorID from Sector where sectorID =?
  2015-06-09 20:28:58,591 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select sector_.sectorID, sector_.SectorName as SectorNa2_29_ from Sector sector_ where sector_.sectorID=?
  2015-06-09 20:28:58,591 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Sector (SectorName, sectorID) values (?, ?)
  2015-06-09 20:28:58,591 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Sector set SectorName=? where sectorID=?
  2015-06-09 20:28:58,591 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Sector where sectorID=?
  2015-06-09 20:28:58,591 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e01298]
  2015-06-09 20:28:58,591 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorName
  2015-06-09 20:28:58,592 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorSet
  2015-06-09 20:28:58,592 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,592 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,592 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Sector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Sector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Sector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Sector)
          - SQL table alias mapping - sector0_
          - alias suffix - 0_
          - suffixed key columns - {sectorID1_29_0_}

  2015-06-09 20:28:58,592 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Sector [NONE]: select sector0_.sectorID as sectorID1_29_0_, sector0_.SectorName as SectorNa2_29_0_ from Sector sector0_ where sector0_.sectorID=?
  2015-06-09 20:28:58,592 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a5b0b86]
  2015-06-09 20:28:58,592 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorName
  2015-06-09 20:28:58,592 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorSet
  2015-06-09 20:28:58,592 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,592 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,592 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Sector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Sector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Sector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Sector)
          - SQL table alias mapping - sector0_
          - alias suffix - 0_
          - suffixed key columns - {sectorID1_29_0_}

  2015-06-09 20:28:58,592 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Sector [READ]: select sector0_.sectorID as sectorID1_29_0_, sector0_.SectorName as SectorNa2_29_0_ from Sector sector0_ where sector0_.sectorID=?
  2015-06-09 20:28:58,592 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78fb9a67]
  2015-06-09 20:28:58,592 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorName
  2015-06-09 20:28:58,592 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorSet
  2015-06-09 20:28:58,592 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,593 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,593 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Sector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Sector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Sector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Sector)
          - SQL table alias mapping - sector0_
          - alias suffix - 0_
          - suffixed key columns - {sectorID1_29_0_}

  2015-06-09 20:28:58,593 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Sector [UPGRADE]: select sector0_.sectorID as sectorID1_29_0_, sector0_.SectorName as SectorNa2_29_0_ from Sector sector0_ where sector0_.sectorID=? for update
  2015-06-09 20:28:58,593 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21aa6d6c]
  2015-06-09 20:28:58,593 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorName
  2015-06-09 20:28:58,593 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorSet
  2015-06-09 20:28:58,593 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,593 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,593 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Sector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Sector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Sector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Sector)
          - SQL table alias mapping - sector0_
          - alias suffix - 0_
          - suffixed key columns - {sectorID1_29_0_}

  2015-06-09 20:28:58,593 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Sector [UPGRADE_NOWAIT]: select sector0_.sectorID as sectorID1_29_0_, sector0_.SectorName as SectorNa2_29_0_ from Sector sector0_ where sector0_.sectorID=? for update nowait 
  2015-06-09 20:28:58,593 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f9a01c1]
  2015-06-09 20:28:58,593 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorName
  2015-06-09 20:28:58,593 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorSet
  2015-06-09 20:28:58,593 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,593 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,593 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Sector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Sector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Sector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Sector)
          - SQL table alias mapping - sector0_
          - alias suffix - 0_
          - suffixed key columns - {sectorID1_29_0_}

  2015-06-09 20:28:58,594 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Sector [UPGRADE_SKIPLOCKED]: select sector0_.sectorID as sectorID1_29_0_, sector0_.SectorName as SectorNa2_29_0_ from Sector sector0_ where sector0_.sectorID=? for update
  2015-06-09 20:28:58,594 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54227100]
  2015-06-09 20:28:58,594 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorName
  2015-06-09 20:28:58,594 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorSet
  2015-06-09 20:28:58,594 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,594 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,594 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Sector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Sector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Sector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Sector)
          - SQL table alias mapping - sector0_
          - alias suffix - 0_
          - suffixed key columns - {sectorID1_29_0_}

  2015-06-09 20:28:58,594 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Sector [FORCE]: select sector0_.sectorID as sectorID1_29_0_, sector0_.SectorName as SectorNa2_29_0_ from Sector sector0_ where sector0_.sectorID=? for update nowait 
  2015-06-09 20:28:58,594 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1433046b]
  2015-06-09 20:28:58,594 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorName
  2015-06-09 20:28:58,594 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorSet
  2015-06-09 20:28:58,594 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,594 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,595 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Sector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Sector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Sector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Sector)
          - SQL table alias mapping - sector0_
          - alias suffix - 0_
          - suffixed key columns - {sectorID1_29_0_}

  2015-06-09 20:28:58,595 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Sector [PESSIMISTIC_READ]: select sector0_.sectorID as sectorID1_29_0_, sector0_.SectorName as SectorNa2_29_0_ from Sector sector0_ where sector0_.sectorID=? for share
  2015-06-09 20:28:58,595 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7829b776]
  2015-06-09 20:28:58,595 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorName
  2015-06-09 20:28:58,595 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorSet
  2015-06-09 20:28:58,595 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,596 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,596 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Sector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Sector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Sector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Sector)
          - SQL table alias mapping - sector0_
          - alias suffix - 0_
          - suffixed key columns - {sectorID1_29_0_}

  2015-06-09 20:28:58,596 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Sector [PESSIMISTIC_WRITE]: select sector0_.sectorID as sectorID1_29_0_, sector0_.SectorName as SectorNa2_29_0_ from Sector sector0_ where sector0_.sectorID=? for update
  2015-06-09 20:28:58,596 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b64c4b7]
  2015-06-09 20:28:58,596 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorName
  2015-06-09 20:28:58,596 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorSet
  2015-06-09 20:28:58,596 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,596 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,597 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Sector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Sector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Sector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Sector)
          - SQL table alias mapping - sector0_
          - alias suffix - 0_
          - suffixed key columns - {sectorID1_29_0_}

  2015-06-09 20:28:58,597 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Sector [PESSIMISTIC_FORCE_INCREMENT]: select sector0_.sectorID as sectorID1_29_0_, sector0_.SectorName as SectorNa2_29_0_ from Sector sector0_ where sector0_.sectorID=? for update nowait 
  2015-06-09 20:28:58,597 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72445aba]
  2015-06-09 20:28:58,597 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorName
  2015-06-09 20:28:58,597 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorSet
  2015-06-09 20:28:58,597 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,597 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,597 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Sector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Sector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Sector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Sector)
          - SQL table alias mapping - sector0_
          - alias suffix - 0_
          - suffixed key columns - {sectorID1_29_0_}

  2015-06-09 20:28:58,597 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Sector [OPTIMISTIC]: select sector0_.sectorID as sectorID1_29_0_, sector0_.SectorName as SectorNa2_29_0_ from Sector sector0_ where sector0_.sectorID=?
  2015-06-09 20:28:58,597 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c80e49b]
  2015-06-09 20:28:58,597 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorName
  2015-06-09 20:28:58,597 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorSet
  2015-06-09 20:28:58,597 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,597 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,598 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Sector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Sector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Sector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Sector)
          - SQL table alias mapping - sector0_
          - alias suffix - 0_
          - suffixed key columns - {sectorID1_29_0_}

  2015-06-09 20:28:58,598 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Sector [OPTIMISTIC_FORCE_INCREMENT]: select sector0_.sectorID as sectorID1_29_0_, sector0_.SectorName as SectorNa2_29_0_ from Sector sector0_ where sector0_.sectorID=?
  2015-06-09 20:28:58,598 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.securities.Sector: select sector0_.sectorID as sectorID1_29_1_, sector0_.SectorName as SectorNa2_29_1_, subsectors1_.sectorID as sectorID3_29_3_, subsectors1_.subsectorID as subsecto1_34_3_, subsectors1_.subsectorID as subsecto1_34_0_, subsectors1_.sectorID as sectorID3_34_0_, subsectors1_.SubsectorName as Subsecto2_34_0_ from Sector sector0_ left outer join Subsector subsectors1_ on sector0_.sectorID=subsectors1_.sectorID where sector0_.sectorID=?
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.securities.Sector: select sector0_.sectorID as sectorID1_29_1_, sector0_.SectorName as SectorNa2_29_1_, subsectors1_.sectorID as sectorID3_29_3_, subsectors1_.subsectorID as subsecto1_34_3_, subsectors1_.subsectorID as subsecto1_34_0_, subsectors1_.sectorID as sectorID3_34_0_, subsectors1_.SubsectorName as Subsecto2_34_0_ from Sector sector0_ left outer join Subsector subsectors1_ on sector0_.sectorID=subsectors1_.sectorID where sector0_.sectorID=?
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select marketOrderID from MarketOrder where marketOrderID =?
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select marketorde_.marketOrderID, marketorde_.brokerID as brokerID9_22_, marketorde_.ExpirationDate as Expirati2_22_, marketorde_.ExternalID as External3_22_, marketorde_.OrderDateTime as OrderDat4_22_, marketorde_.OrderStatus as OrderSta5_22_, marketorde_.Price as Price6_22_, marketorde_.securityID as securit10_22_, marketorde_.Side as Side7_22_, marketorde_.Volume as Volume8_22_ from MarketOrder marketorde_ where marketorde_.marketOrderID=?
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into MarketOrder (brokerID, ExpirationDate, ExternalID, OrderDateTime, OrderStatus, Price, securityID, Side, Volume, marketOrderID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update MarketOrder set brokerID=?, ExpirationDate=?, ExternalID=?, OrderDateTime=?, OrderStatus=?, Price=?, securityID=?, Side=?, Volume=? where marketOrderID=?
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from MarketOrder where marketOrderID=?
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15c25153]
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyTradeList
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : externalID
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellTradeList
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,599 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketOrder)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketOrder, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketOrder)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketOrder)
          - SQL table alias mapping - marketorde0_
          - alias suffix - 0_
          - suffixed key columns - {marketOr1_22_0_}

  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketOrder [NONE]: select marketorde0_.marketOrderID as marketOr1_22_0_, marketorde0_.brokerID as brokerID9_22_0_, marketorde0_.ExpirationDate as Expirati2_22_0_, marketorde0_.ExternalID as External3_22_0_, marketorde0_.OrderDateTime as OrderDat4_22_0_, marketorde0_.OrderStatus as OrderSta5_22_0_, marketorde0_.Price as Price6_22_0_, marketorde0_.securityID as securit10_22_0_, marketorde0_.Side as Side7_22_0_, marketorde0_.Volume as Volume8_22_0_ from MarketOrder marketorde0_ where marketorde0_.marketOrderID=?
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9ed238c]
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyTradeList
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : externalID
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellTradeList
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,600 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketOrder)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketOrder, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketOrder)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketOrder)
          - SQL table alias mapping - marketorde0_
          - alias suffix - 0_
          - suffixed key columns - {marketOr1_22_0_}

  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketOrder [READ]: select marketorde0_.marketOrderID as marketOr1_22_0_, marketorde0_.brokerID as brokerID9_22_0_, marketorde0_.ExpirationDate as Expirati2_22_0_, marketorde0_.ExternalID as External3_22_0_, marketorde0_.OrderDateTime as OrderDat4_22_0_, marketorde0_.OrderStatus as OrderSta5_22_0_, marketorde0_.Price as Price6_22_0_, marketorde0_.securityID as securit10_22_0_, marketorde0_.Side as Side7_22_0_, marketorde0_.Volume as Volume8_22_0_ from MarketOrder marketorde0_ where marketorde0_.marketOrderID=?
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51e8e6e6]
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyTradeList
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : externalID
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellTradeList
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketOrder)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketOrder, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketOrder)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketOrder)
          - SQL table alias mapping - marketorde0_
          - alias suffix - 0_
          - suffixed key columns - {marketOr1_22_0_}

  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketOrder [UPGRADE]: select marketorde0_.marketOrderID as marketOr1_22_0_, marketorde0_.brokerID as brokerID9_22_0_, marketorde0_.ExpirationDate as Expirati2_22_0_, marketorde0_.ExternalID as External3_22_0_, marketorde0_.OrderDateTime as OrderDat4_22_0_, marketorde0_.OrderStatus as OrderSta5_22_0_, marketorde0_.Price as Price6_22_0_, marketorde0_.securityID as securit10_22_0_, marketorde0_.Side as Side7_22_0_, marketorde0_.Volume as Volume8_22_0_ from MarketOrder marketorde0_ where marketorde0_.marketOrderID=? for update
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36676c1a]
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyTradeList
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : externalID
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellTradeList
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,601 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketOrder)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketOrder, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketOrder)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketOrder)
          - SQL table alias mapping - marketorde0_
          - alias suffix - 0_
          - suffixed key columns - {marketOr1_22_0_}

  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketOrder [UPGRADE_NOWAIT]: select marketorde0_.marketOrderID as marketOr1_22_0_, marketorde0_.brokerID as brokerID9_22_0_, marketorde0_.ExpirationDate as Expirati2_22_0_, marketorde0_.ExternalID as External3_22_0_, marketorde0_.OrderDateTime as OrderDat4_22_0_, marketorde0_.OrderStatus as OrderSta5_22_0_, marketorde0_.Price as Price6_22_0_, marketorde0_.securityID as securit10_22_0_, marketorde0_.Side as Side7_22_0_, marketorde0_.Volume as Volume8_22_0_ from MarketOrder marketorde0_ where marketorde0_.marketOrderID=? for update nowait 
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d098f9b]
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyTradeList
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : externalID
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellTradeList
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketOrder)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketOrder, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketOrder)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketOrder)
          - SQL table alias mapping - marketorde0_
          - alias suffix - 0_
          - suffixed key columns - {marketOr1_22_0_}

  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketOrder [UPGRADE_SKIPLOCKED]: select marketorde0_.marketOrderID as marketOr1_22_0_, marketorde0_.brokerID as brokerID9_22_0_, marketorde0_.ExpirationDate as Expirati2_22_0_, marketorde0_.ExternalID as External3_22_0_, marketorde0_.OrderDateTime as OrderDat4_22_0_, marketorde0_.OrderStatus as OrderSta5_22_0_, marketorde0_.Price as Price6_22_0_, marketorde0_.securityID as securit10_22_0_, marketorde0_.Side as Side7_22_0_, marketorde0_.Volume as Volume8_22_0_ from MarketOrder marketorde0_ where marketorde0_.marketOrderID=? for update
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20b5f2ac]
  2015-06-09 20:28:58,602 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyTradeList
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : externalID
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellTradeList
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketOrder)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketOrder, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketOrder)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketOrder)
          - SQL table alias mapping - marketorde0_
          - alias suffix - 0_
          - suffixed key columns - {marketOr1_22_0_}

  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketOrder [FORCE]: select marketorde0_.marketOrderID as marketOr1_22_0_, marketorde0_.brokerID as brokerID9_22_0_, marketorde0_.ExpirationDate as Expirati2_22_0_, marketorde0_.ExternalID as External3_22_0_, marketorde0_.OrderDateTime as OrderDat4_22_0_, marketorde0_.OrderStatus as OrderSta5_22_0_, marketorde0_.Price as Price6_22_0_, marketorde0_.securityID as securit10_22_0_, marketorde0_.Side as Side7_22_0_, marketorde0_.Volume as Volume8_22_0_ from MarketOrder marketorde0_ where marketorde0_.marketOrderID=? for update nowait 
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e3060d8]
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyTradeList
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : externalID
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellTradeList
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,603 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,604 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketOrder)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketOrder, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketOrder)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketOrder)
          - SQL table alias mapping - marketorde0_
          - alias suffix - 0_
          - suffixed key columns - {marketOr1_22_0_}

  2015-06-09 20:28:58,604 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketOrder [PESSIMISTIC_READ]: select marketorde0_.marketOrderID as marketOr1_22_0_, marketorde0_.brokerID as brokerID9_22_0_, marketorde0_.ExpirationDate as Expirati2_22_0_, marketorde0_.ExternalID as External3_22_0_, marketorde0_.OrderDateTime as OrderDat4_22_0_, marketorde0_.OrderStatus as OrderSta5_22_0_, marketorde0_.Price as Price6_22_0_, marketorde0_.securityID as securit10_22_0_, marketorde0_.Side as Side7_22_0_, marketorde0_.Volume as Volume8_22_0_ from MarketOrder marketorde0_ where marketorde0_.marketOrderID=? for share
  2015-06-09 20:28:58,604 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2692b61e]
  2015-06-09 20:28:58,604 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,604 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyTradeList
  2015-06-09 20:28:58,604 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,604 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,604 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : externalID
  2015-06-09 20:28:58,604 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,604 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,604 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,604 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,604 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellTradeList
  2015-06-09 20:28:58,604 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,604 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,604 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,610 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,610 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketOrder)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketOrder, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketOrder)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketOrder)
          - SQL table alias mapping - marketorde0_
          - alias suffix - 0_
          - suffixed key columns - {marketOr1_22_0_}

  2015-06-09 20:28:58,610 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketOrder [PESSIMISTIC_WRITE]: select marketorde0_.marketOrderID as marketOr1_22_0_, marketorde0_.brokerID as brokerID9_22_0_, marketorde0_.ExpirationDate as Expirati2_22_0_, marketorde0_.ExternalID as External3_22_0_, marketorde0_.OrderDateTime as OrderDat4_22_0_, marketorde0_.OrderStatus as OrderSta5_22_0_, marketorde0_.Price as Price6_22_0_, marketorde0_.securityID as securit10_22_0_, marketorde0_.Side as Side7_22_0_, marketorde0_.Volume as Volume8_22_0_ from MarketOrder marketorde0_ where marketorde0_.marketOrderID=? for update
  2015-06-09 20:28:58,610 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62fad19]
  2015-06-09 20:28:58,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyTradeList
  2015-06-09 20:28:58,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : externalID
  2015-06-09 20:28:58,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellTradeList
  2015-06-09 20:28:58,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,610 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,610 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,611 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,611 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketOrder)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketOrder, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketOrder)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketOrder)
          - SQL table alias mapping - marketorde0_
          - alias suffix - 0_
          - suffixed key columns - {marketOr1_22_0_}

  2015-06-09 20:28:58,611 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketOrder [PESSIMISTIC_FORCE_INCREMENT]: select marketorde0_.marketOrderID as marketOr1_22_0_, marketorde0_.brokerID as brokerID9_22_0_, marketorde0_.ExpirationDate as Expirati2_22_0_, marketorde0_.ExternalID as External3_22_0_, marketorde0_.OrderDateTime as OrderDat4_22_0_, marketorde0_.OrderStatus as OrderSta5_22_0_, marketorde0_.Price as Price6_22_0_, marketorde0_.securityID as securit10_22_0_, marketorde0_.Side as Side7_22_0_, marketorde0_.Volume as Volume8_22_0_ from MarketOrder marketorde0_ where marketorde0_.marketOrderID=? for update nowait 
  2015-06-09 20:28:58,611 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74cadd41]
  2015-06-09 20:28:58,611 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,611 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyTradeList
  2015-06-09 20:28:58,611 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,612 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,612 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : externalID
  2015-06-09 20:28:58,612 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,612 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,612 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,612 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,612 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellTradeList
  2015-06-09 20:28:58,612 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,612 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,612 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,612 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,612 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketOrder)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketOrder, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketOrder)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketOrder)
          - SQL table alias mapping - marketorde0_
          - alias suffix - 0_
          - suffixed key columns - {marketOr1_22_0_}

  2015-06-09 20:28:58,612 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketOrder [OPTIMISTIC]: select marketorde0_.marketOrderID as marketOr1_22_0_, marketorde0_.brokerID as brokerID9_22_0_, marketorde0_.ExpirationDate as Expirati2_22_0_, marketorde0_.ExternalID as External3_22_0_, marketorde0_.OrderDateTime as OrderDat4_22_0_, marketorde0_.OrderStatus as OrderSta5_22_0_, marketorde0_.Price as Price6_22_0_, marketorde0_.securityID as securit10_22_0_, marketorde0_.Side as Side7_22_0_, marketorde0_.Volume as Volume8_22_0_ from MarketOrder marketorde0_ where marketorde0_.marketOrderID=?
  2015-06-09 20:28:58,612 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55e8ec2f]
  2015-06-09 20:28:58,612 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,615 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyTradeList
  2015-06-09 20:28:58,615 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,615 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,615 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : externalID
  2015-06-09 20:28:58,615 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,615 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,615 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,615 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,615 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellTradeList
  2015-06-09 20:28:58,615 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,615 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,615 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,615 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,616 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketOrder)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketOrder, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketOrder)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketOrder)
          - SQL table alias mapping - marketorde0_
          - alias suffix - 0_
          - suffixed key columns - {marketOr1_22_0_}

  2015-06-09 20:28:58,616 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketOrder [OPTIMISTIC_FORCE_INCREMENT]: select marketorde0_.marketOrderID as marketOr1_22_0_, marketorde0_.brokerID as brokerID9_22_0_, marketorde0_.ExpirationDate as Expirati2_22_0_, marketorde0_.ExternalID as External3_22_0_, marketorde0_.OrderDateTime as OrderDat4_22_0_, marketorde0_.OrderStatus as OrderSta5_22_0_, marketorde0_.Price as Price6_22_0_, marketorde0_.securityID as securit10_22_0_, marketorde0_.Side as Side7_22_0_, marketorde0_.Volume as Volume8_22_0_ from MarketOrder marketorde0_ where marketorde0_.marketOrderID=?
  2015-06-09 20:28:58,616 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.marketdata.MarketOrder: select marketorde0_.marketOrderID as marketOr1_22_1_, marketorde0_.brokerID as brokerID9_22_1_, marketorde0_.ExpirationDate as Expirati2_22_1_, marketorde0_.ExternalID as External3_22_1_, marketorde0_.OrderDateTime as OrderDat4_22_1_, marketorde0_.OrderStatus as OrderSta5_22_1_, marketorde0_.Price as Price6_22_1_, marketorde0_.securityID as securit10_22_1_, marketorde0_.Side as Side7_22_1_, marketorde0_.Volume as Volume8_22_1_, buytradeli1_.buyOrderID as buyOrder5_22_3_, buytradeli1_.marketTradeID as marketTr1_23_3_, buytradeli1_.marketTradeID as marketTr1_23_0_, buytradeli1_.buyOrderID as buyOrder5_23_0_, buytradeli1_.Price as Price2_23_0_, buytradeli1_.sellOrderID as sellOrde6_23_0_, buytradeli1_.TradeDateTime as TradeDat3_23_0_, buytradeli1_.Volume as Volume4_23_0_ from MarketOrder marketorde0_ left outer join MarketTrade buytradeli1_ on marketorde0_.marketOrderID=buytradeli1_.buyOrderID where marketorde0_.marketOrderID=?
  2015-06-09 20:28:58,616 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.marketdata.MarketOrder: select marketorde0_.marketOrderID as marketOr1_22_1_, marketorde0_.brokerID as brokerID9_22_1_, marketorde0_.ExpirationDate as Expirati2_22_1_, marketorde0_.ExternalID as External3_22_1_, marketorde0_.OrderDateTime as OrderDat4_22_1_, marketorde0_.OrderStatus as OrderSta5_22_1_, marketorde0_.Price as Price6_22_1_, marketorde0_.securityID as securit10_22_1_, marketorde0_.Side as Side7_22_1_, marketorde0_.Volume as Volume8_22_1_, buytradeli1_.buyOrderID as buyOrder5_22_3_, buytradeli1_.marketTradeID as marketTr1_23_3_, buytradeli1_.marketTradeID as marketTr1_23_0_, buytradeli1_.buyOrderID as buyOrder5_23_0_, buytradeli1_.Price as Price2_23_0_, buytradeli1_.sellOrderID as sellOrde6_23_0_, buytradeli1_.TradeDateTime as TradeDat3_23_0_, buytradeli1_.Volume as Volume4_23_0_ from MarketOrder marketorde0_ left outer join MarketTrade buytradeli1_ on marketorde0_.marketOrderID=buytradeli1_.buyOrderID where marketorde0_.marketOrderID=?
  2015-06-09 20:28:58,616 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.CostCenter
  2015-06-09 20:28:58,616 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select costCenterID from CostCenter where costCenterID =?
  2015-06-09 20:28:58,616 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select costcenter_.costCenterID, costcenter_.Name as Name2_7_ from CostCenter costcenter_ where costcenter_.costCenterID=?
  2015-06-09 20:28:58,616 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into CostCenter (Name, costCenterID) values (?, ?)
  2015-06-09 20:28:58,616 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update CostCenter set Name=? where costCenterID=?
  2015-06-09 20:28:58,616 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from CostCenter where costCenterID=?
  2015-06-09 20:28:58,617 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d24ffa1]
  2015-06-09 20:28:58,617 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : name
  2015-06-09 20:28:58,617 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,617 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,617 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CostCenter)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CostCenter, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CostCenter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CostCenter)
          - SQL table alias mapping - costcenter0_
          - alias suffix - 0_
          - suffixed key columns - {costCent1_7_0_}

  2015-06-09 20:28:58,617 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CostCenter [NONE]: select costcenter0_.costCenterID as costCent1_7_0_, costcenter0_.Name as Name2_7_0_ from CostCenter costcenter0_ where costcenter0_.costCenterID=?
  2015-06-09 20:28:58,617 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@773f7880]
  2015-06-09 20:28:58,617 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : name
  2015-06-09 20:28:58,617 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,617 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,617 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CostCenter)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CostCenter, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CostCenter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CostCenter)
          - SQL table alias mapping - costcenter0_
          - alias suffix - 0_
          - suffixed key columns - {costCent1_7_0_}

  2015-06-09 20:28:58,617 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CostCenter [READ]: select costcenter0_.costCenterID as costCent1_7_0_, costcenter0_.Name as Name2_7_0_ from CostCenter costcenter0_ where costcenter0_.costCenterID=?
  2015-06-09 20:28:58,617 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@426b6a74]
  2015-06-09 20:28:58,617 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : name
  2015-06-09 20:28:58,617 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,618 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,618 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CostCenter)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CostCenter, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CostCenter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CostCenter)
          - SQL table alias mapping - costcenter0_
          - alias suffix - 0_
          - suffixed key columns - {costCent1_7_0_}

  2015-06-09 20:28:58,619 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CostCenter [UPGRADE]: select costcenter0_.costCenterID as costCent1_7_0_, costcenter0_.Name as Name2_7_0_ from CostCenter costcenter0_ where costcenter0_.costCenterID=? for update
  2015-06-09 20:28:58,619 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@83298d7]
  2015-06-09 20:28:58,619 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : name
  2015-06-09 20:28:58,619 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,619 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,619 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CostCenter)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CostCenter, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CostCenter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CostCenter)
          - SQL table alias mapping - costcenter0_
          - alias suffix - 0_
          - suffixed key columns - {costCent1_7_0_}

  2015-06-09 20:28:58,619 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CostCenter [UPGRADE_NOWAIT]: select costcenter0_.costCenterID as costCent1_7_0_, costcenter0_.Name as Name2_7_0_ from CostCenter costcenter0_ where costcenter0_.costCenterID=? for update nowait 
  2015-06-09 20:28:58,619 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b080f3a]
  2015-06-09 20:28:58,619 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : name
  2015-06-09 20:28:58,619 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,620 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,621 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CostCenter)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CostCenter, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CostCenter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CostCenter)
          - SQL table alias mapping - costcenter0_
          - alias suffix - 0_
          - suffixed key columns - {costCent1_7_0_}

  2015-06-09 20:28:58,621 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CostCenter [UPGRADE_SKIPLOCKED]: select costcenter0_.costCenterID as costCent1_7_0_, costcenter0_.Name as Name2_7_0_ from CostCenter costcenter0_ where costcenter0_.costCenterID=? for update
  2015-06-09 20:28:58,621 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b54655f]
  2015-06-09 20:28:58,621 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : name
  2015-06-09 20:28:58,621 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,621 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,621 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CostCenter)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CostCenter, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CostCenter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CostCenter)
          - SQL table alias mapping - costcenter0_
          - alias suffix - 0_
          - suffixed key columns - {costCent1_7_0_}

  2015-06-09 20:28:58,621 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CostCenter [FORCE]: select costcenter0_.costCenterID as costCent1_7_0_, costcenter0_.Name as Name2_7_0_ from CostCenter costcenter0_ where costcenter0_.costCenterID=? for update nowait 
  2015-06-09 20:28:58,621 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d3430a7]
  2015-06-09 20:28:58,621 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : name
  2015-06-09 20:28:58,621 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,621 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,621 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CostCenter)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CostCenter, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CostCenter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CostCenter)
          - SQL table alias mapping - costcenter0_
          - alias suffix - 0_
          - suffixed key columns - {costCent1_7_0_}

  2015-06-09 20:28:58,622 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CostCenter [PESSIMISTIC_READ]: select costcenter0_.costCenterID as costCent1_7_0_, costcenter0_.Name as Name2_7_0_ from CostCenter costcenter0_ where costcenter0_.costCenterID=? for share
  2015-06-09 20:28:58,622 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2756c0a7]
  2015-06-09 20:28:58,622 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : name
  2015-06-09 20:28:58,622 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,622 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,622 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CostCenter)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CostCenter, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CostCenter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CostCenter)
          - SQL table alias mapping - costcenter0_
          - alias suffix - 0_
          - suffixed key columns - {costCent1_7_0_}

  2015-06-09 20:28:58,622 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CostCenter [PESSIMISTIC_WRITE]: select costcenter0_.costCenterID as costCent1_7_0_, costcenter0_.Name as Name2_7_0_ from CostCenter costcenter0_ where costcenter0_.costCenterID=? for update
  2015-06-09 20:28:58,622 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69637b10]
  2015-06-09 20:28:58,622 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : name
  2015-06-09 20:28:58,622 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,622 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,622 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CostCenter)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CostCenter, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CostCenter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CostCenter)
          - SQL table alias mapping - costcenter0_
          - alias suffix - 0_
          - suffixed key columns - {costCent1_7_0_}

  2015-06-09 20:28:58,623 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CostCenter [PESSIMISTIC_FORCE_INCREMENT]: select costcenter0_.costCenterID as costCent1_7_0_, costcenter0_.Name as Name2_7_0_ from CostCenter costcenter0_ where costcenter0_.costCenterID=? for update nowait 
  2015-06-09 20:28:58,623 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@165b2f7f]
  2015-06-09 20:28:58,623 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : name
  2015-06-09 20:28:58,623 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,623 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,623 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CostCenter)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CostCenter, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CostCenter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CostCenter)
          - SQL table alias mapping - costcenter0_
          - alias suffix - 0_
          - suffixed key columns - {costCent1_7_0_}

  2015-06-09 20:28:58,623 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CostCenter [OPTIMISTIC]: select costcenter0_.costCenterID as costCent1_7_0_, costcenter0_.Name as Name2_7_0_ from CostCenter costcenter0_ where costcenter0_.costCenterID=?
  2015-06-09 20:28:58,623 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@277f7dd3]
  2015-06-09 20:28:58,623 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : name
  2015-06-09 20:28:58,623 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,623 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,623 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CostCenter)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CostCenter, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CostCenter)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CostCenter)
          - SQL table alias mapping - costcenter0_
          - alias suffix - 0_
          - suffixed key columns - {costCent1_7_0_}

  2015-06-09 20:28:58,623 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CostCenter [OPTIMISTIC_FORCE_INCREMENT]: select costcenter0_.costCenterID as costCent1_7_0_, costcenter0_.Name as Name2_7_0_ from CostCenter costcenter0_ where costcenter0_.costCenterID=?
  2015-06-09 20:28:58,623 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.CostCenter: select costcenter0_.costCenterID as costCent1_7_0_, costcenter0_.Name as Name2_7_0_ from CostCenter costcenter0_ where costcenter0_.costCenterID=?
  2015-06-09 20:28:58,624 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.CostCenter: select costcenter0_.costCenterID as costCent1_7_0_, costcenter0_.Name as Name2_7_0_ from CostCenter costcenter0_ where costcenter0_.costCenterID=?
  2015-06-09 20:28:58,624 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.core.Configuration
  2015-06-09 20:28:58,624 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select configurationID from Configuration where configurationID =?
  2015-06-09 20:28:58,624 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select configurat_.configurationID, configurat_.properties as properti2_6_ from Configuration configurat_ where configurat_.configurationID=?
  2015-06-09 20:28:58,624 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Configuration (properties, configurationID) values (?, ?)
  2015-06-09 20:28:58,624 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Configuration set properties=? where configurationID=?
  2015-06-09 20:28:58,624 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Configuration where configurationID=?
  2015-06-09 20:28:58,624 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2364305a]
  2015-06-09 20:28:58,625 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : properties
  2015-06-09 20:28:58,625 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,625 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,625 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.core.Configuration)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.core.Configuration, querySpaceUid=<gen:0>, path=com.cmm.jft.core.Configuration)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.core.Configuration)
          - SQL table alias mapping - configurat0_
          - alias suffix - 0_
          - suffixed key columns - {configur1_6_0_}

  2015-06-09 20:28:58,625 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.core.Configuration [NONE]: select configurat0_.configurationID as configur1_6_0_, configurat0_.properties as properti2_6_0_ from Configuration configurat0_ where configurat0_.configurationID=?
  2015-06-09 20:28:58,625 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc715b8]
  2015-06-09 20:28:58,625 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : properties
  2015-06-09 20:28:58,625 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,625 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,625 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.core.Configuration)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.core.Configuration, querySpaceUid=<gen:0>, path=com.cmm.jft.core.Configuration)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.core.Configuration)
          - SQL table alias mapping - configurat0_
          - alias suffix - 0_
          - suffixed key columns - {configur1_6_0_}

  2015-06-09 20:28:58,625 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.core.Configuration [READ]: select configurat0_.configurationID as configur1_6_0_, configurat0_.properties as properti2_6_0_ from Configuration configurat0_ where configurat0_.configurationID=?
  2015-06-09 20:28:58,625 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b491fee]
  2015-06-09 20:28:58,625 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : properties
  2015-06-09 20:28:58,625 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,625 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,626 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.core.Configuration)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.core.Configuration, querySpaceUid=<gen:0>, path=com.cmm.jft.core.Configuration)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.core.Configuration)
          - SQL table alias mapping - configurat0_
          - alias suffix - 0_
          - suffixed key columns - {configur1_6_0_}

  2015-06-09 20:28:58,626 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.core.Configuration [UPGRADE]: select configurat0_.configurationID as configur1_6_0_, configurat0_.properties as properti2_6_0_ from Configuration configurat0_ where configurat0_.configurationID=? for update
  2015-06-09 20:28:58,626 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c55f277]
  2015-06-09 20:28:58,626 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : properties
  2015-06-09 20:28:58,626 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,626 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,626 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.core.Configuration)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.core.Configuration, querySpaceUid=<gen:0>, path=com.cmm.jft.core.Configuration)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.core.Configuration)
          - SQL table alias mapping - configurat0_
          - alias suffix - 0_
          - suffixed key columns - {configur1_6_0_}

  2015-06-09 20:28:58,626 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.core.Configuration [UPGRADE_NOWAIT]: select configurat0_.configurationID as configur1_6_0_, configurat0_.properties as properti2_6_0_ from Configuration configurat0_ where configurat0_.configurationID=? for update nowait 
  2015-06-09 20:28:58,626 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e8f7922]
  2015-06-09 20:28:58,626 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : properties
  2015-06-09 20:28:58,626 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,626 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,626 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.core.Configuration)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.core.Configuration, querySpaceUid=<gen:0>, path=com.cmm.jft.core.Configuration)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.core.Configuration)
          - SQL table alias mapping - configurat0_
          - alias suffix - 0_
          - suffixed key columns - {configur1_6_0_}

  2015-06-09 20:28:58,626 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.core.Configuration [UPGRADE_SKIPLOCKED]: select configurat0_.configurationID as configur1_6_0_, configurat0_.properties as properti2_6_0_ from Configuration configurat0_ where configurat0_.configurationID=? for update
  2015-06-09 20:28:58,627 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50eca7c6]
  2015-06-09 20:28:58,628 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : properties
  2015-06-09 20:28:58,628 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,628 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,629 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.core.Configuration)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.core.Configuration, querySpaceUid=<gen:0>, path=com.cmm.jft.core.Configuration)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.core.Configuration)
          - SQL table alias mapping - configurat0_
          - alias suffix - 0_
          - suffixed key columns - {configur1_6_0_}

  2015-06-09 20:28:58,629 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.core.Configuration [FORCE]: select configurat0_.configurationID as configur1_6_0_, configurat0_.properties as properti2_6_0_ from Configuration configurat0_ where configurat0_.configurationID=? for update nowait 
  2015-06-09 20:28:58,629 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1de5f0ef]
  2015-06-09 20:28:58,629 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : properties
  2015-06-09 20:28:58,629 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,629 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,629 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.core.Configuration)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.core.Configuration, querySpaceUid=<gen:0>, path=com.cmm.jft.core.Configuration)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.core.Configuration)
          - SQL table alias mapping - configurat0_
          - alias suffix - 0_
          - suffixed key columns - {configur1_6_0_}

  2015-06-09 20:28:58,629 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.core.Configuration [PESSIMISTIC_READ]: select configurat0_.configurationID as configur1_6_0_, configurat0_.properties as properti2_6_0_ from Configuration configurat0_ where configurat0_.configurationID=? for share
  2015-06-09 20:28:58,629 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28d6290]
  2015-06-09 20:28:58,629 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : properties
  2015-06-09 20:28:58,629 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,629 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,630 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.core.Configuration)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.core.Configuration, querySpaceUid=<gen:0>, path=com.cmm.jft.core.Configuration)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.core.Configuration)
          - SQL table alias mapping - configurat0_
          - alias suffix - 0_
          - suffixed key columns - {configur1_6_0_}

  2015-06-09 20:28:58,630 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.core.Configuration [PESSIMISTIC_WRITE]: select configurat0_.configurationID as configur1_6_0_, configurat0_.properties as properti2_6_0_ from Configuration configurat0_ where configurat0_.configurationID=? for update
  2015-06-09 20:28:58,630 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ef0d29e]
  2015-06-09 20:28:58,630 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : properties
  2015-06-09 20:28:58,630 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,630 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,630 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.core.Configuration)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.core.Configuration, querySpaceUid=<gen:0>, path=com.cmm.jft.core.Configuration)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.core.Configuration)
          - SQL table alias mapping - configurat0_
          - alias suffix - 0_
          - suffixed key columns - {configur1_6_0_}

  2015-06-09 20:28:58,630 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.core.Configuration [PESSIMISTIC_FORCE_INCREMENT]: select configurat0_.configurationID as configur1_6_0_, configurat0_.properties as properti2_6_0_ from Configuration configurat0_ where configurat0_.configurationID=? for update nowait 
  2015-06-09 20:28:58,630 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51850751]
  2015-06-09 20:28:58,630 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : properties
  2015-06-09 20:28:58,630 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,630 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,630 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.core.Configuration)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.core.Configuration, querySpaceUid=<gen:0>, path=com.cmm.jft.core.Configuration)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.core.Configuration)
          - SQL table alias mapping - configurat0_
          - alias suffix - 0_
          - suffixed key columns - {configur1_6_0_}

  2015-06-09 20:28:58,630 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.core.Configuration [OPTIMISTIC]: select configurat0_.configurationID as configur1_6_0_, configurat0_.properties as properti2_6_0_ from Configuration configurat0_ where configurat0_.configurationID=?
  2015-06-09 20:28:58,630 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64df9a61]
  2015-06-09 20:28:58,630 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : properties
  2015-06-09 20:28:58,630 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,631 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,631 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.core.Configuration)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.core.Configuration, querySpaceUid=<gen:0>, path=com.cmm.jft.core.Configuration)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.core.Configuration)
          - SQL table alias mapping - configurat0_
          - alias suffix - 0_
          - suffixed key columns - {configur1_6_0_}

  2015-06-09 20:28:58,631 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.core.Configuration [OPTIMISTIC_FORCE_INCREMENT]: select configurat0_.configurationID as configur1_6_0_, configurat0_.properties as properti2_6_0_ from Configuration configurat0_ where configurat0_.configurationID=?
  2015-06-09 20:28:58,631 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.core.Configuration: select configurat0_.configurationID as configur1_6_0_, configurat0_.properties as properti2_6_0_ from Configuration configurat0_ where configurat0_.configurationID=?
  2015-06-09 20:28:58,631 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.core.Configuration: select configurat0_.configurationID as configur1_6_0_, configurat0_.properties as properti2_6_0_ from Configuration configurat0_ where configurat0_.configurationID=?
  2015-06-09 20:28:58,631 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.securities.Subsector
  2015-06-09 20:28:58,631 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select subsectorID from Subsector where subsectorID =?
  2015-06-09 20:28:58,631 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select subsector_.subsectorID, subsector_.sectorID as sectorID3_34_, subsector_.SubsectorName as Subsecto2_34_ from Subsector subsector_ where subsector_.subsectorID=?
  2015-06-09 20:28:58,631 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Subsector (sectorID, SubsectorName, subsectorID) values (?, ?, ?)
  2015-06-09 20:28:58,631 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Subsector set sectorID=?, SubsectorName=? where subsectorID=?
  2015-06-09 20:28:58,631 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Subsector where subsectorID=?
  2015-06-09 20:28:58,631 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e260766]
  2015-06-09 20:28:58,631 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorID
  2015-06-09 20:28:58,631 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,631 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorName
  2015-06-09 20:28:58,631 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,631 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,632 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Subsector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Subsector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Subsector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Subsector)
          - SQL table alias mapping - subsector0_
          - alias suffix - 0_
          - suffixed key columns - {subsecto1_34_0_}

  2015-06-09 20:28:58,632 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Subsector [NONE]: select subsector0_.subsectorID as subsecto1_34_0_, subsector0_.sectorID as sectorID3_34_0_, subsector0_.SubsectorName as Subsecto2_34_0_ from Subsector subsector0_ where subsector0_.subsectorID=?
  2015-06-09 20:28:58,632 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34a97744]
  2015-06-09 20:28:58,632 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorID
  2015-06-09 20:28:58,632 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,632 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorName
  2015-06-09 20:28:58,632 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,632 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,633 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Subsector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Subsector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Subsector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Subsector)
          - SQL table alias mapping - subsector0_
          - alias suffix - 0_
          - suffixed key columns - {subsecto1_34_0_}

  2015-06-09 20:28:58,633 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Subsector [READ]: select subsector0_.subsectorID as subsecto1_34_0_, subsector0_.sectorID as sectorID3_34_0_, subsector0_.SubsectorName as Subsecto2_34_0_ from Subsector subsector0_ where subsector0_.subsectorID=?
  2015-06-09 20:28:58,633 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c56e013]
  2015-06-09 20:28:58,633 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorID
  2015-06-09 20:28:58,633 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,633 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorName
  2015-06-09 20:28:58,633 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,633 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,634 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Subsector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Subsector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Subsector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Subsector)
          - SQL table alias mapping - subsector0_
          - alias suffix - 0_
          - suffixed key columns - {subsecto1_34_0_}

  2015-06-09 20:28:58,634 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Subsector [UPGRADE]: select subsector0_.subsectorID as subsecto1_34_0_, subsector0_.sectorID as sectorID3_34_0_, subsector0_.SubsectorName as Subsecto2_34_0_ from Subsector subsector0_ where subsector0_.subsectorID=? for update
  2015-06-09 20:28:58,634 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40258c2f]
  2015-06-09 20:28:58,634 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorID
  2015-06-09 20:28:58,634 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,634 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorName
  2015-06-09 20:28:58,634 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,634 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,634 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Subsector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Subsector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Subsector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Subsector)
          - SQL table alias mapping - subsector0_
          - alias suffix - 0_
          - suffixed key columns - {subsecto1_34_0_}

  2015-06-09 20:28:58,634 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Subsector [UPGRADE_NOWAIT]: select subsector0_.subsectorID as subsecto1_34_0_, subsector0_.sectorID as sectorID3_34_0_, subsector0_.SubsectorName as Subsecto2_34_0_ from Subsector subsector0_ where subsector0_.subsectorID=? for update nowait 
  2015-06-09 20:28:58,634 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6731787b]
  2015-06-09 20:28:58,634 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorID
  2015-06-09 20:28:58,634 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,635 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorName
  2015-06-09 20:28:58,635 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,635 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,635 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Subsector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Subsector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Subsector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Subsector)
          - SQL table alias mapping - subsector0_
          - alias suffix - 0_
          - suffixed key columns - {subsecto1_34_0_}

  2015-06-09 20:28:58,635 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Subsector [UPGRADE_SKIPLOCKED]: select subsector0_.subsectorID as subsecto1_34_0_, subsector0_.sectorID as sectorID3_34_0_, subsector0_.SubsectorName as Subsecto2_34_0_ from Subsector subsector0_ where subsector0_.subsectorID=? for update
  2015-06-09 20:28:58,635 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7adf16aa]
  2015-06-09 20:28:58,635 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorID
  2015-06-09 20:28:58,635 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,635 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorName
  2015-06-09 20:28:58,635 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,635 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,635 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Subsector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Subsector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Subsector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Subsector)
          - SQL table alias mapping - subsector0_
          - alias suffix - 0_
          - suffixed key columns - {subsecto1_34_0_}

  2015-06-09 20:28:58,635 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Subsector [FORCE]: select subsector0_.subsectorID as subsecto1_34_0_, subsector0_.sectorID as sectorID3_34_0_, subsector0_.SubsectorName as Subsecto2_34_0_ from Subsector subsector0_ where subsector0_.subsectorID=? for update nowait 
  2015-06-09 20:28:58,635 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58bf8650]
  2015-06-09 20:28:58,635 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorID
  2015-06-09 20:28:58,635 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorName
  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Subsector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Subsector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Subsector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Subsector)
          - SQL table alias mapping - subsector0_
          - alias suffix - 0_
          - suffixed key columns - {subsecto1_34_0_}

  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Subsector [PESSIMISTIC_READ]: select subsector0_.subsectorID as subsecto1_34_0_, subsector0_.sectorID as sectorID3_34_0_, subsector0_.SubsectorName as Subsecto2_34_0_ from Subsector subsector0_ where subsector0_.subsectorID=? for share
  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71ae31b0]
  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorID
  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorName
  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Subsector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Subsector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Subsector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Subsector)
          - SQL table alias mapping - subsector0_
          - alias suffix - 0_
          - suffixed key columns - {subsecto1_34_0_}

  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Subsector [PESSIMISTIC_WRITE]: select subsector0_.subsectorID as subsecto1_34_0_, subsector0_.sectorID as sectorID3_34_0_, subsector0_.SubsectorName as Subsecto2_34_0_ from Subsector subsector0_ where subsector0_.subsectorID=? for update
  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f0ca692]
  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorID
  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorName
  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,636 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Subsector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Subsector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Subsector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Subsector)
          - SQL table alias mapping - subsector0_
          - alias suffix - 0_
          - suffixed key columns - {subsecto1_34_0_}

  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Subsector [PESSIMISTIC_FORCE_INCREMENT]: select subsector0_.subsectorID as subsecto1_34_0_, subsector0_.sectorID as sectorID3_34_0_, subsector0_.SubsectorName as Subsecto2_34_0_ from Subsector subsector0_ where subsector0_.subsectorID=? for update nowait 
  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cb3d0f7]
  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorID
  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorName
  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Subsector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Subsector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Subsector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Subsector)
          - SQL table alias mapping - subsector0_
          - alias suffix - 0_
          - suffixed key columns - {subsecto1_34_0_}

  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Subsector [OPTIMISTIC]: select subsector0_.subsectorID as subsecto1_34_0_, subsector0_.sectorID as sectorID3_34_0_, subsector0_.SubsectorName as Subsecto2_34_0_ from Subsector subsector0_ where subsector0_.subsectorID=?
  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44e3760b]
  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorID
  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorName
  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Subsector)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Subsector, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Subsector)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Subsector)
          - SQL table alias mapping - subsector0_
          - alias suffix - 0_
          - suffixed key columns - {subsecto1_34_0_}

  2015-06-09 20:28:58,637 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Subsector [OPTIMISTIC_FORCE_INCREMENT]: select subsector0_.subsectorID as subsecto1_34_0_, subsector0_.sectorID as sectorID3_34_0_, subsector0_.SubsectorName as Subsecto2_34_0_ from Subsector subsector0_ where subsector0_.subsectorID=?
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.securities.Subsector: select subsector0_.subsectorID as subsecto1_34_1_, subsector0_.sectorID as sectorID3_34_1_, subsector0_.SubsectorName as Subsecto2_34_1_, segmentset1_.subsectorID as subsecto3_34_3_, segmentset1_.segmentID as segmentI1_32_3_, segmentset1_.segmentID as segmentI1_32_0_, segmentset1_.SegmentName as SegmentN2_32_0_, segmentset1_.subsectorID as subsecto3_32_0_ from Subsector subsector0_ left outer join Segment segmentset1_ on subsector0_.subsectorID=segmentset1_.subsectorID where subsector0_.subsectorID=?
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.securities.Subsector: select subsector0_.subsectorID as subsecto1_34_1_, subsector0_.sectorID as sectorID3_34_1_, subsector0_.SubsectorName as Subsecto2_34_1_, segmentset1_.subsectorID as subsecto3_34_3_, segmentset1_.segmentID as segmentI1_32_3_, segmentset1_.segmentID as segmentI1_32_0_, segmentset1_.SegmentName as SegmentN2_32_0_, segmentset1_.subsectorID as subsecto3_32_0_ from Subsector subsector0_ left outer join Segment segmentset1_ on subsector0_.subsectorID=segmentset1_.subsectorID where subsector0_.subsectorID=?
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.marketdata.HistoricalQuote
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select historicalQuoteID from HistoricalQuote where historicalQuoteID =?
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select historical_.historicalQuoteID, historical_.AdjClose as AdjClose2_16_, historical_.Ask as Ask3_16_, historical_.AvgPrice as AvgPrice4_16_, historical_.Bid as Bid5_16_, historical_.Close as Close6_16_, historical_.High as High7_16_, historical_.Low as Low8_16_, historical_.Open as Open9_16_, historical_.QDateTime as QDateTi10_16_, historical_.QuoteFactor as QuoteFa11_16_, historical_.securityID as securit15_16_, historical_.TradedQuantity as TradedQ12_16_, historical_.TradedUnits as TradedU13_16_, historical_.Volume as Volume14_16_ from HistoricalQuote historical_ where historical_.historicalQuoteID=?
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into HistoricalQuote (AdjClose, Ask, AvgPrice, Bid, Close, High, Low, Open, QDateTime, QuoteFactor, securityID, TradedQuantity, TradedUnits, Volume, historicalQuoteID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update HistoricalQuote set AdjClose=?, Ask=?, AvgPrice=?, Bid=?, Close=?, High=?, Low=?, Open=?, QDateTime=?, QuoteFactor=?, securityID=?, TradedQuantity=?, TradedUnits=?, Volume=? where historicalQuoteID=?
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from HistoricalQuote where historicalQuoteID=?
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5860f3d7]
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : adjClose
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ask
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : avgPrice
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : bid
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : close
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : high
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : low
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,638 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedQuantity
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedUnits
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.HistoricalQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
          - SQL table alias mapping - historical0_
          - alias suffix - 0_
          - suffixed key columns - {historic1_16_0_}

  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.HistoricalQuote [NONE]: select historical0_.historicalQuoteID as historic1_16_0_, historical0_.AdjClose as AdjClose2_16_0_, historical0_.Ask as Ask3_16_0_, historical0_.AvgPrice as AvgPrice4_16_0_, historical0_.Bid as Bid5_16_0_, historical0_.Close as Close6_16_0_, historical0_.High as High7_16_0_, historical0_.Low as Low8_16_0_, historical0_.Open as Open9_16_0_, historical0_.QDateTime as QDateTi10_16_0_, historical0_.QuoteFactor as QuoteFa11_16_0_, historical0_.securityID as securit15_16_0_, historical0_.TradedQuantity as TradedQ12_16_0_, historical0_.TradedUnits as TradedU13_16_0_, historical0_.Volume as Volume14_16_0_ from HistoricalQuote historical0_ where historical0_.historicalQuoteID=?
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f3156d]
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : adjClose
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ask
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : avgPrice
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : bid
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : close
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : high
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : low
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedQuantity
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedUnits
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.HistoricalQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
          - SQL table alias mapping - historical0_
          - alias suffix - 0_
          - suffixed key columns - {historic1_16_0_}

  2015-06-09 20:28:58,639 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.HistoricalQuote [READ]: select historical0_.historicalQuoteID as historic1_16_0_, historical0_.AdjClose as AdjClose2_16_0_, historical0_.Ask as Ask3_16_0_, historical0_.AvgPrice as AvgPrice4_16_0_, historical0_.Bid as Bid5_16_0_, historical0_.Close as Close6_16_0_, historical0_.High as High7_16_0_, historical0_.Low as Low8_16_0_, historical0_.Open as Open9_16_0_, historical0_.QDateTime as QDateTi10_16_0_, historical0_.QuoteFactor as QuoteFa11_16_0_, historical0_.securityID as securit15_16_0_, historical0_.TradedQuantity as TradedQ12_16_0_, historical0_.TradedUnits as TradedU13_16_0_, historical0_.Volume as Volume14_16_0_ from HistoricalQuote historical0_ where historical0_.historicalQuoteID=?
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@427b5f92]
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : adjClose
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ask
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : avgPrice
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : bid
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : close
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : high
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : low
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedQuantity
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedUnits
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.HistoricalQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
          - SQL table alias mapping - historical0_
          - alias suffix - 0_
          - suffixed key columns - {historic1_16_0_}

  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.HistoricalQuote [UPGRADE]: select historical0_.historicalQuoteID as historic1_16_0_, historical0_.AdjClose as AdjClose2_16_0_, historical0_.Ask as Ask3_16_0_, historical0_.AvgPrice as AvgPrice4_16_0_, historical0_.Bid as Bid5_16_0_, historical0_.Close as Close6_16_0_, historical0_.High as High7_16_0_, historical0_.Low as Low8_16_0_, historical0_.Open as Open9_16_0_, historical0_.QDateTime as QDateTi10_16_0_, historical0_.QuoteFactor as QuoteFa11_16_0_, historical0_.securityID as securit15_16_0_, historical0_.TradedQuantity as TradedQ12_16_0_, historical0_.TradedUnits as TradedU13_16_0_, historical0_.Volume as Volume14_16_0_ from HistoricalQuote historical0_ where historical0_.historicalQuoteID=? for update
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e3f95fe]
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : adjClose
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ask
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : avgPrice
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : bid
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : close
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : high
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : low
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedQuantity
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedUnits
  2015-06-09 20:28:58,640 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.HistoricalQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
          - SQL table alias mapping - historical0_
          - alias suffix - 0_
          - suffixed key columns - {historic1_16_0_}

  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.HistoricalQuote [UPGRADE_NOWAIT]: select historical0_.historicalQuoteID as historic1_16_0_, historical0_.AdjClose as AdjClose2_16_0_, historical0_.Ask as Ask3_16_0_, historical0_.AvgPrice as AvgPrice4_16_0_, historical0_.Bid as Bid5_16_0_, historical0_.Close as Close6_16_0_, historical0_.High as High7_16_0_, historical0_.Low as Low8_16_0_, historical0_.Open as Open9_16_0_, historical0_.QDateTime as QDateTi10_16_0_, historical0_.QuoteFactor as QuoteFa11_16_0_, historical0_.securityID as securit15_16_0_, historical0_.TradedQuantity as TradedQ12_16_0_, historical0_.TradedUnits as TradedU13_16_0_, historical0_.Volume as Volume14_16_0_ from HistoricalQuote historical0_ where historical0_.historicalQuoteID=? for update nowait 
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c7d121c]
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : adjClose
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ask
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : avgPrice
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : bid
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : close
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : high
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : low
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedQuantity
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedUnits
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.HistoricalQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
          - SQL table alias mapping - historical0_
          - alias suffix - 0_
          - suffixed key columns - {historic1_16_0_}

  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.HistoricalQuote [UPGRADE_SKIPLOCKED]: select historical0_.historicalQuoteID as historic1_16_0_, historical0_.AdjClose as AdjClose2_16_0_, historical0_.Ask as Ask3_16_0_, historical0_.AvgPrice as AvgPrice4_16_0_, historical0_.Bid as Bid5_16_0_, historical0_.Close as Close6_16_0_, historical0_.High as High7_16_0_, historical0_.Low as Low8_16_0_, historical0_.Open as Open9_16_0_, historical0_.QDateTime as QDateTi10_16_0_, historical0_.QuoteFactor as QuoteFa11_16_0_, historical0_.securityID as securit15_16_0_, historical0_.TradedQuantity as TradedQ12_16_0_, historical0_.TradedUnits as TradedU13_16_0_, historical0_.Volume as Volume14_16_0_ from HistoricalQuote historical0_ where historical0_.historicalQuoteID=? for update
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67389cb8]
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : adjClose
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ask
  2015-06-09 20:28:58,641 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : avgPrice
  2015-06-09 20:28:58,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : bid
  2015-06-09 20:28:58,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : close
  2015-06-09 20:28:58,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : high
  2015-06-09 20:28:58,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : low
  2015-06-09 20:28:58,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedQuantity
  2015-06-09 20:28:58,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedUnits
  2015-06-09 20:28:58,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,642 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,642 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,642 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.HistoricalQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
          - SQL table alias mapping - historical0_
          - alias suffix - 0_
          - suffixed key columns - {historic1_16_0_}

  2015-06-09 20:28:58,642 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.HistoricalQuote [FORCE]: select historical0_.historicalQuoteID as historic1_16_0_, historical0_.AdjClose as AdjClose2_16_0_, historical0_.Ask as Ask3_16_0_, historical0_.AvgPrice as AvgPrice4_16_0_, historical0_.Bid as Bid5_16_0_, historical0_.Close as Close6_16_0_, historical0_.High as High7_16_0_, historical0_.Low as Low8_16_0_, historical0_.Open as Open9_16_0_, historical0_.QDateTime as QDateTi10_16_0_, historical0_.QuoteFactor as QuoteFa11_16_0_, historical0_.securityID as securit15_16_0_, historical0_.TradedQuantity as TradedQ12_16_0_, historical0_.TradedUnits as TradedU13_16_0_, historical0_.Volume as Volume14_16_0_ from HistoricalQuote historical0_ where historical0_.historicalQuoteID=? for update nowait 
  2015-06-09 20:28:58,642 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@533377b]
  2015-06-09 20:28:58,642 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : adjClose
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ask
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : avgPrice
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : bid
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : close
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : high
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : low
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedQuantity
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedUnits
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.HistoricalQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
          - SQL table alias mapping - historical0_
          - alias suffix - 0_
          - suffixed key columns - {historic1_16_0_}

  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.HistoricalQuote [PESSIMISTIC_READ]: select historical0_.historicalQuoteID as historic1_16_0_, historical0_.AdjClose as AdjClose2_16_0_, historical0_.Ask as Ask3_16_0_, historical0_.AvgPrice as AvgPrice4_16_0_, historical0_.Bid as Bid5_16_0_, historical0_.Close as Close6_16_0_, historical0_.High as High7_16_0_, historical0_.Low as Low8_16_0_, historical0_.Open as Open9_16_0_, historical0_.QDateTime as QDateTi10_16_0_, historical0_.QuoteFactor as QuoteFa11_16_0_, historical0_.securityID as securit15_16_0_, historical0_.TradedQuantity as TradedQ12_16_0_, historical0_.TradedUnits as TradedU13_16_0_, historical0_.Volume as Volume14_16_0_ from HistoricalQuote historical0_ where historical0_.historicalQuoteID=? for share
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10fde30a]
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : adjClose
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ask
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : avgPrice
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : bid
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : close
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : high
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : low
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedQuantity
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedUnits
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,643 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.HistoricalQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
          - SQL table alias mapping - historical0_
          - alias suffix - 0_
          - suffixed key columns - {historic1_16_0_}

  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.HistoricalQuote [PESSIMISTIC_WRITE]: select historical0_.historicalQuoteID as historic1_16_0_, historical0_.AdjClose as AdjClose2_16_0_, historical0_.Ask as Ask3_16_0_, historical0_.AvgPrice as AvgPrice4_16_0_, historical0_.Bid as Bid5_16_0_, historical0_.Close as Close6_16_0_, historical0_.High as High7_16_0_, historical0_.Low as Low8_16_0_, historical0_.Open as Open9_16_0_, historical0_.QDateTime as QDateTi10_16_0_, historical0_.QuoteFactor as QuoteFa11_16_0_, historical0_.securityID as securit15_16_0_, historical0_.TradedQuantity as TradedQ12_16_0_, historical0_.TradedUnits as TradedU13_16_0_, historical0_.Volume as Volume14_16_0_ from HistoricalQuote historical0_ where historical0_.historicalQuoteID=? for update
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ce61929]
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : adjClose
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ask
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : avgPrice
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : bid
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : close
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : high
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : low
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedQuantity
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedUnits
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.HistoricalQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
          - SQL table alias mapping - historical0_
          - alias suffix - 0_
          - suffixed key columns - {historic1_16_0_}

  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.HistoricalQuote [PESSIMISTIC_FORCE_INCREMENT]: select historical0_.historicalQuoteID as historic1_16_0_, historical0_.AdjClose as AdjClose2_16_0_, historical0_.Ask as Ask3_16_0_, historical0_.AvgPrice as AvgPrice4_16_0_, historical0_.Bid as Bid5_16_0_, historical0_.Close as Close6_16_0_, historical0_.High as High7_16_0_, historical0_.Low as Low8_16_0_, historical0_.Open as Open9_16_0_, historical0_.QDateTime as QDateTi10_16_0_, historical0_.QuoteFactor as QuoteFa11_16_0_, historical0_.securityID as securit15_16_0_, historical0_.TradedQuantity as TradedQ12_16_0_, historical0_.TradedUnits as TradedU13_16_0_, historical0_.Volume as Volume14_16_0_ from HistoricalQuote historical0_ where historical0_.historicalQuoteID=? for update nowait 
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bf3798b]
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : adjClose
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ask
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : avgPrice
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : bid
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : close
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : high
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : low
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedQuantity
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedUnits
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,644 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.HistoricalQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
          - SQL table alias mapping - historical0_
          - alias suffix - 0_
          - suffixed key columns - {historic1_16_0_}

  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.HistoricalQuote [OPTIMISTIC]: select historical0_.historicalQuoteID as historic1_16_0_, historical0_.AdjClose as AdjClose2_16_0_, historical0_.Ask as Ask3_16_0_, historical0_.AvgPrice as AvgPrice4_16_0_, historical0_.Bid as Bid5_16_0_, historical0_.Close as Close6_16_0_, historical0_.High as High7_16_0_, historical0_.Low as Low8_16_0_, historical0_.Open as Open9_16_0_, historical0_.QDateTime as QDateTi10_16_0_, historical0_.QuoteFactor as QuoteFa11_16_0_, historical0_.securityID as securit15_16_0_, historical0_.TradedQuantity as TradedQ12_16_0_, historical0_.TradedUnits as TradedU13_16_0_, historical0_.Volume as Volume14_16_0_ from HistoricalQuote historical0_ where historical0_.historicalQuoteID=?
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74e47444]
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : adjClose
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ask
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : avgPrice
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : bid
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : close
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : high
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : low
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedQuantity
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedUnits
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.HistoricalQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.HistoricalQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
          - SQL table alias mapping - historical0_
          - alias suffix - 0_
          - suffixed key columns - {historic1_16_0_}

  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.HistoricalQuote [OPTIMISTIC_FORCE_INCREMENT]: select historical0_.historicalQuoteID as historic1_16_0_, historical0_.AdjClose as AdjClose2_16_0_, historical0_.Ask as Ask3_16_0_, historical0_.AvgPrice as AvgPrice4_16_0_, historical0_.Bid as Bid5_16_0_, historical0_.Close as Close6_16_0_, historical0_.High as High7_16_0_, historical0_.Low as Low8_16_0_, historical0_.Open as Open9_16_0_, historical0_.QDateTime as QDateTi10_16_0_, historical0_.QuoteFactor as QuoteFa11_16_0_, historical0_.securityID as securit15_16_0_, historical0_.TradedQuantity as TradedQ12_16_0_, historical0_.TradedUnits as TradedU13_16_0_, historical0_.Volume as Volume14_16_0_ from HistoricalQuote historical0_ where historical0_.historicalQuoteID=?
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.marketdata.HistoricalQuote: select historical0_.historicalQuoteID as historic1_16_0_, historical0_.AdjClose as AdjClose2_16_0_, historical0_.Ask as Ask3_16_0_, historical0_.AvgPrice as AvgPrice4_16_0_, historical0_.Bid as Bid5_16_0_, historical0_.Close as Close6_16_0_, historical0_.High as High7_16_0_, historical0_.Low as Low8_16_0_, historical0_.Open as Open9_16_0_, historical0_.QDateTime as QDateTi10_16_0_, historical0_.QuoteFactor as QuoteFa11_16_0_, historical0_.securityID as securit15_16_0_, historical0_.TradedQuantity as TradedQ12_16_0_, historical0_.TradedUnits as TradedU13_16_0_, historical0_.Volume as Volume14_16_0_ from HistoricalQuote historical0_ where historical0_.historicalQuoteID=?
  2015-06-09 20:28:58,645 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.marketdata.HistoricalQuote: select historical0_.historicalQuoteID as historic1_16_0_, historical0_.AdjClose as AdjClose2_16_0_, historical0_.Ask as Ask3_16_0_, historical0_.AvgPrice as AvgPrice4_16_0_, historical0_.Bid as Bid5_16_0_, historical0_.Close as Close6_16_0_, historical0_.High as High7_16_0_, historical0_.Low as Low8_16_0_, historical0_.Open as Open9_16_0_, historical0_.QDateTime as QDateTi10_16_0_, historical0_.QuoteFactor as QuoteFa11_16_0_, historical0_.securityID as securit15_16_0_, historical0_.TradedQuantity as TradedQ12_16_0_, historical0_.TradedUnits as TradedU13_16_0_, historical0_.Volume as Volume14_16_0_ from HistoricalQuote historical0_ where historical0_.historicalQuoteID=?
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.account.Broker
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select brokerID from Broker where brokerID =?
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select broker_.brokerID, broker_.BrokerCode as BrokerCo2_1_, broker_.BrokerName as BrokerNa3_1_ from Broker broker_ where broker_.brokerID=?
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Broker (BrokerCode, BrokerName, brokerID) values (?, ?, ?)
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Broker set BrokerCode=?, BrokerName=? where brokerID=?
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Broker where brokerID=?
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d2103b]
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerCode
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerName
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageList
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Broker)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Broker, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Broker)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Broker)
          - SQL table alias mapping - broker0_
          - alias suffix - 0_
          - suffixed key columns - {brokerID1_1_0_}

  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Broker [NONE]: select broker0_.brokerID as brokerID1_1_0_, broker0_.BrokerCode as BrokerCo2_1_0_, broker0_.BrokerName as BrokerNa3_1_0_ from Broker broker0_ where broker0_.brokerID=?
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e4de19b]
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerCode
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerName
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageList
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,646 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Broker)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Broker, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Broker)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Broker)
          - SQL table alias mapping - broker0_
          - alias suffix - 0_
          - suffixed key columns - {brokerID1_1_0_}

  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Broker [READ]: select broker0_.brokerID as brokerID1_1_0_, broker0_.BrokerCode as BrokerCo2_1_0_, broker0_.BrokerName as BrokerNa3_1_0_ from Broker broker0_ where broker0_.brokerID=?
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46f699d5]
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerCode
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerName
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageList
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Broker)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Broker, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Broker)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Broker)
          - SQL table alias mapping - broker0_
          - alias suffix - 0_
          - suffixed key columns - {brokerID1_1_0_}

  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Broker [UPGRADE]: select broker0_.brokerID as brokerID1_1_0_, broker0_.BrokerCode as BrokerCo2_1_0_, broker0_.BrokerName as BrokerNa3_1_0_ from Broker broker0_ where broker0_.brokerID=? for update
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1991f767]
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerCode
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerName
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageList
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Broker)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Broker, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Broker)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Broker)
          - SQL table alias mapping - broker0_
          - alias suffix - 0_
          - suffixed key columns - {brokerID1_1_0_}

  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Broker [UPGRADE_NOWAIT]: select broker0_.brokerID as brokerID1_1_0_, broker0_.BrokerCode as BrokerCo2_1_0_, broker0_.BrokerName as BrokerNa3_1_0_ from Broker broker0_ where broker0_.brokerID=? for update nowait 
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c6daf0]
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerCode
  2015-06-09 20:28:58,647 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerName
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageList
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Broker)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Broker, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Broker)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Broker)
          - SQL table alias mapping - broker0_
          - alias suffix - 0_
          - suffixed key columns - {brokerID1_1_0_}

  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Broker [UPGRADE_SKIPLOCKED]: select broker0_.brokerID as brokerID1_1_0_, broker0_.BrokerCode as BrokerCo2_1_0_, broker0_.BrokerName as BrokerNa3_1_0_ from Broker broker0_ where broker0_.brokerID=? for update
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@659eef7]
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerCode
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerName
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageList
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Broker)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Broker, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Broker)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Broker)
          - SQL table alias mapping - broker0_
          - alias suffix - 0_
          - suffixed key columns - {brokerID1_1_0_}

  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Broker [FORCE]: select broker0_.brokerID as brokerID1_1_0_, broker0_.BrokerCode as BrokerCo2_1_0_, broker0_.BrokerName as BrokerNa3_1_0_ from Broker broker0_ where broker0_.brokerID=? for update nowait 
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2488b073]
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerCode
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerName
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageList
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,648 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Broker)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Broker, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Broker)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Broker)
          - SQL table alias mapping - broker0_
          - alias suffix - 0_
          - suffixed key columns - {brokerID1_1_0_}

  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Broker [PESSIMISTIC_READ]: select broker0_.brokerID as brokerID1_1_0_, broker0_.BrokerCode as BrokerCo2_1_0_, broker0_.BrokerName as BrokerNa3_1_0_ from Broker broker0_ where broker0_.brokerID=? for share
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55787112]
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerCode
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerName
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageList
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Broker)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Broker, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Broker)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Broker)
          - SQL table alias mapping - broker0_
          - alias suffix - 0_
          - suffixed key columns - {brokerID1_1_0_}

  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Broker [PESSIMISTIC_WRITE]: select broker0_.brokerID as brokerID1_1_0_, broker0_.BrokerCode as BrokerCo2_1_0_, broker0_.BrokerName as BrokerNa3_1_0_ from Broker broker0_ where broker0_.brokerID=? for update
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7db82169]
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerCode
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerName
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageList
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Broker)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Broker, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Broker)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Broker)
          - SQL table alias mapping - broker0_
          - alias suffix - 0_
          - suffixed key columns - {brokerID1_1_0_}

  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Broker [PESSIMISTIC_FORCE_INCREMENT]: select broker0_.brokerID as brokerID1_1_0_, broker0_.BrokerCode as BrokerCo2_1_0_, broker0_.BrokerName as BrokerNa3_1_0_ from Broker broker0_ where broker0_.brokerID=? for update nowait 
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f74e835]
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerCode
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerName
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageList
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,649 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,650 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,650 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Broker)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Broker, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Broker)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Broker)
          - SQL table alias mapping - broker0_
          - alias suffix - 0_
          - suffixed key columns - {brokerID1_1_0_}

  2015-06-09 20:28:58,650 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Broker [OPTIMISTIC]: select broker0_.brokerID as brokerID1_1_0_, broker0_.BrokerCode as BrokerCo2_1_0_, broker0_.BrokerName as BrokerNa3_1_0_ from Broker broker0_ where broker0_.brokerID=?
  2015-06-09 20:28:58,650 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f28bd56]
  2015-06-09 20:28:58,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerCode
  2015-06-09 20:28:58,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerName
  2015-06-09 20:28:58,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageList
  2015-06-09 20:28:58,650 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,650 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,650 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,650 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Broker)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Broker, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Broker)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Broker)
          - SQL table alias mapping - broker0_
          - alias suffix - 0_
          - suffixed key columns - {brokerID1_1_0_}

  2015-06-09 20:28:58,650 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Broker [OPTIMISTIC_FORCE_INCREMENT]: select broker0_.brokerID as brokerID1_1_0_, broker0_.BrokerCode as BrokerCo2_1_0_, broker0_.BrokerName as BrokerNa3_1_0_ from Broker broker0_ where broker0_.brokerID=?
  2015-06-09 20:28:58,650 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.account.Broker: select broker0_.brokerID as brokerID1_1_1_, broker0_.BrokerCode as BrokerCo2_1_1_, broker0_.BrokerName as BrokerNa3_1_1_, brokeragel1_.brokerID as brokerID4_1_3_, brokeragel1_.brokerageID as brokerag1_2_3_, brokeragel1_.brokerageID as brokerag1_2_0_, brokeragel1_.brokerID as brokerID4_2_0_, brokeragel1_.Category as Category2_2_0_, brokeragel1_.TradeType as TradeTyp3_2_0_ from Broker broker0_ left outer join Brokerage brokeragel1_ on broker0_.brokerID=brokeragel1_.brokerID where broker0_.brokerID=?
  2015-06-09 20:28:58,651 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.account.Broker: select broker0_.brokerID as brokerID1_1_1_, broker0_.BrokerCode as BrokerCo2_1_1_, broker0_.BrokerName as BrokerNa3_1_1_, brokeragel1_.brokerID as brokerID4_1_3_, brokeragel1_.brokerageID as brokerag1_2_3_, brokeragel1_.brokerageID as brokerag1_2_0_, brokeragel1_.brokerID as brokerID4_2_0_, brokeragel1_.Category as Category2_2_0_, brokeragel1_.TradeType as TradeTyp3_2_0_ from Broker broker0_ left outer join Brokerage brokeragel1_ on broker0_.brokerID=brokeragel1_.brokerID where broker0_.brokerID=?
  2015-06-09 20:28:58,651 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:28:58,651 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select brokerageID from Brokerage where brokerageID =?
  2015-06-09 20:28:58,651 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select brokerage_.brokerageID, brokerage_.brokerID as brokerID4_2_, brokerage_.Category as Category2_2_, brokerage_.TradeType as TradeTyp3_2_ from Brokerage brokerage_ where brokerage_.brokerageID=?
  2015-06-09 20:28:58,651 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Brokerage (brokerID, Category, TradeType, brokerageID) values (?, ?, ?, ?)
  2015-06-09 20:28:58,651 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Brokerage set brokerID=?, Category=?, TradeType=? where brokerageID=?
  2015-06-09 20:28:58,651 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Brokerage where brokerageID=?
  2015-06-09 20:28:58,651 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19fe4644]
  2015-06-09 20:28:58,651 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commissionList
  2015-06-09 20:28:58,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeTaxList
  2015-06-09 20:28:58,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,652 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,652 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,652 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Brokerage)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Brokerage, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Brokerage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Brokerage)
          - SQL table alias mapping - brokerage0_
          - alias suffix - 0_
          - suffixed key columns - {brokerag1_2_0_}

  2015-06-09 20:28:58,652 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Brokerage [NONE]: select brokerage0_.brokerageID as brokerag1_2_0_, brokerage0_.brokerID as brokerID4_2_0_, brokerage0_.Category as Category2_2_0_, brokerage0_.TradeType as TradeTyp3_2_0_ from Brokerage brokerage0_ where brokerage0_.brokerageID=?
  2015-06-09 20:28:58,652 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5be067de]
  2015-06-09 20:28:58,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commissionList
  2015-06-09 20:28:58,652 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeTaxList
  2015-06-09 20:28:58,653 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,653 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,653 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,653 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Brokerage)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Brokerage, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Brokerage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Brokerage)
          - SQL table alias mapping - brokerage0_
          - alias suffix - 0_
          - suffixed key columns - {brokerag1_2_0_}

  2015-06-09 20:28:58,653 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Brokerage [READ]: select brokerage0_.brokerageID as brokerag1_2_0_, brokerage0_.brokerID as brokerID4_2_0_, brokerage0_.Category as Category2_2_0_, brokerage0_.TradeType as TradeTyp3_2_0_ from Brokerage brokerage0_ where brokerage0_.brokerageID=?
  2015-06-09 20:28:58,653 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18245eb0]
  2015-06-09 20:28:58,653 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,653 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,653 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commissionList
  2015-06-09 20:28:58,653 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeTaxList
  2015-06-09 20:28:58,653 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,653 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,653 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,653 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Brokerage)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Brokerage, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Brokerage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Brokerage)
          - SQL table alias mapping - brokerage0_
          - alias suffix - 0_
          - suffixed key columns - {brokerag1_2_0_}

  2015-06-09 20:28:58,653 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Brokerage [UPGRADE]: select brokerage0_.brokerageID as brokerag1_2_0_, brokerage0_.brokerID as brokerID4_2_0_, brokerage0_.Category as Category2_2_0_, brokerage0_.TradeType as TradeTyp3_2_0_ from Brokerage brokerage0_ where brokerage0_.brokerageID=? for update
  2015-06-09 20:28:58,653 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24fb6a80]
  2015-06-09 20:28:58,654 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,654 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,654 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commissionList
  2015-06-09 20:28:58,654 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeTaxList
  2015-06-09 20:28:58,654 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,654 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,654 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,654 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Brokerage)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Brokerage, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Brokerage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Brokerage)
          - SQL table alias mapping - brokerage0_
          - alias suffix - 0_
          - suffixed key columns - {brokerag1_2_0_}

  2015-06-09 20:28:58,654 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Brokerage [UPGRADE_NOWAIT]: select brokerage0_.brokerageID as brokerag1_2_0_, brokerage0_.brokerID as brokerID4_2_0_, brokerage0_.Category as Category2_2_0_, brokerage0_.TradeType as TradeTyp3_2_0_ from Brokerage brokerage0_ where brokerage0_.brokerageID=? for update nowait 
  2015-06-09 20:28:58,654 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72a85671]
  2015-06-09 20:28:58,654 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,654 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,654 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commissionList
  2015-06-09 20:28:58,654 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeTaxList
  2015-06-09 20:28:58,654 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,654 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,654 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,656 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Brokerage)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Brokerage, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Brokerage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Brokerage)
          - SQL table alias mapping - brokerage0_
          - alias suffix - 0_
          - suffixed key columns - {brokerag1_2_0_}

  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Brokerage [UPGRADE_SKIPLOCKED]: select brokerage0_.brokerageID as brokerag1_2_0_, brokerage0_.brokerID as brokerID4_2_0_, brokerage0_.Category as Category2_2_0_, brokerage0_.TradeType as TradeTyp3_2_0_ from Brokerage brokerage0_ where brokerage0_.brokerageID=? for update
  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18f20260]
  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commissionList
  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeTaxList
  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Brokerage)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Brokerage, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Brokerage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Brokerage)
          - SQL table alias mapping - brokerage0_
          - alias suffix - 0_
          - suffixed key columns - {brokerag1_2_0_}

  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Brokerage [FORCE]: select brokerage0_.brokerageID as brokerag1_2_0_, brokerage0_.brokerID as brokerID4_2_0_, brokerage0_.Category as Category2_2_0_, brokerage0_.TradeType as TradeTyp3_2_0_ from Brokerage brokerage0_ where brokerage0_.brokerageID=? for update nowait 
  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a48e6e2]
  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commissionList
  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeTaxList
  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,657 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Brokerage)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Brokerage, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Brokerage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Brokerage)
          - SQL table alias mapping - brokerage0_
          - alias suffix - 0_
          - suffixed key columns - {brokerag1_2_0_}

  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Brokerage [PESSIMISTIC_READ]: select brokerage0_.brokerageID as brokerag1_2_0_, brokerage0_.brokerID as brokerID4_2_0_, brokerage0_.Category as Category2_2_0_, brokerage0_.TradeType as TradeTyp3_2_0_ from Brokerage brokerage0_ where brokerage0_.brokerageID=? for share
  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a94964]
  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commissionList
  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeTaxList
  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Brokerage)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Brokerage, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Brokerage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Brokerage)
          - SQL table alias mapping - brokerage0_
          - alias suffix - 0_
          - suffixed key columns - {brokerag1_2_0_}

  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Brokerage [PESSIMISTIC_WRITE]: select brokerage0_.brokerageID as brokerag1_2_0_, brokerage0_.brokerID as brokerID4_2_0_, brokerage0_.Category as Category2_2_0_, brokerage0_.TradeType as TradeTyp3_2_0_ from Brokerage brokerage0_ where brokerage0_.brokerageID=? for update
  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d0b5baf]
  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commissionList
  2015-06-09 20:28:58,658 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeTaxList
  2015-06-09 20:28:58,659 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,660 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,660 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,660 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Brokerage)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Brokerage, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Brokerage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Brokerage)
          - SQL table alias mapping - brokerage0_
          - alias suffix - 0_
          - suffixed key columns - {brokerag1_2_0_}

  2015-06-09 20:28:58,660 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Brokerage [PESSIMISTIC_FORCE_INCREMENT]: select brokerage0_.brokerageID as brokerag1_2_0_, brokerage0_.brokerID as brokerID4_2_0_, brokerage0_.Category as Category2_2_0_, brokerage0_.TradeType as TradeTyp3_2_0_ from Brokerage brokerage0_ where brokerage0_.brokerageID=? for update nowait 
  2015-06-09 20:28:58,660 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a3591c5]
  2015-06-09 20:28:58,660 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,661 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,661 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commissionList
  2015-06-09 20:28:58,661 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeTaxList
  2015-06-09 20:28:58,661 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,661 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,661 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,662 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Brokerage)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Brokerage, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Brokerage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Brokerage)
          - SQL table alias mapping - brokerage0_
          - alias suffix - 0_
          - suffixed key columns - {brokerag1_2_0_}

  2015-06-09 20:28:58,662 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Brokerage [OPTIMISTIC]: select brokerage0_.brokerageID as brokerag1_2_0_, brokerage0_.brokerID as brokerID4_2_0_, brokerage0_.Category as Category2_2_0_, brokerage0_.TradeType as TradeTyp3_2_0_ from Brokerage brokerage0_ where brokerage0_.brokerageID=?
  2015-06-09 20:28:58,662 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@346a361]
  2015-06-09 20:28:58,662 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,662 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,662 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commissionList
  2015-06-09 20:28:58,662 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeTaxList
  2015-06-09 20:28:58,662 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,662 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,662 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,665 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.account.Brokerage)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.account.Brokerage, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.account.Brokerage)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.account.Brokerage)
          - SQL table alias mapping - brokerage0_
          - alias suffix - 0_
          - suffixed key columns - {brokerag1_2_0_}

  2015-06-09 20:28:58,665 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.account.Brokerage [OPTIMISTIC_FORCE_INCREMENT]: select brokerage0_.brokerageID as brokerag1_2_0_, brokerage0_.brokerID as brokerID4_2_0_, brokerage0_.Category as Category2_2_0_, brokerage0_.TradeType as TradeTyp3_2_0_ from Brokerage brokerage0_ where brokerage0_.brokerageID=?
  2015-06-09 20:28:58,666 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.account.Brokerage: select brokerage0_.brokerageID as brokerag1_2_2_, brokerage0_.brokerID as brokerID4_2_2_, brokerage0_.Category as Category2_2_2_, brokerage0_.TradeType as TradeTyp3_2_2_, broker1_.brokerID as brokerID1_1_0_, broker1_.BrokerCode as BrokerCo2_1_0_, broker1_.BrokerName as BrokerNa3_1_0_, marketorde2_.brokerID as brokerID9_1_4_, marketorde2_.marketOrderID as marketOr1_22_4_, marketorde2_.marketOrderID as marketOr1_22_1_, marketorde2_.brokerID as brokerID9_22_1_, marketorde2_.ExpirationDate as Expirati2_22_1_, marketorde2_.ExternalID as External3_22_1_, marketorde2_.OrderDateTime as OrderDat4_22_1_, marketorde2_.OrderStatus as OrderSta5_22_1_, marketorde2_.Price as Price6_22_1_, marketorde2_.securityID as securit10_22_1_, marketorde2_.Side as Side7_22_1_, marketorde2_.Volume as Volume8_22_1_ from Brokerage brokerage0_ inner join Broker broker1_ on brokerage0_.brokerID=broker1_.brokerID left outer join MarketOrder marketorde2_ on broker1_.brokerID=marketorde2_.brokerID where brokerage0_.brokerageID=?
  2015-06-09 20:28:58,666 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.account.Brokerage: select brokerage0_.brokerageID as brokerag1_2_2_, brokerage0_.brokerID as brokerID4_2_2_, brokerage0_.Category as Category2_2_2_, brokerage0_.TradeType as TradeTyp3_2_2_, broker1_.brokerID as brokerID1_1_0_, broker1_.BrokerCode as BrokerCo2_1_0_, broker1_.BrokerName as BrokerNa3_1_0_, marketorde2_.brokerID as brokerID9_1_4_, marketorde2_.marketOrderID as marketOr1_22_4_, marketorde2_.marketOrderID as marketOr1_22_1_, marketorde2_.brokerID as brokerID9_22_1_, marketorde2_.ExpirationDate as Expirati2_22_1_, marketorde2_.ExternalID as External3_22_1_, marketorde2_.OrderDateTime as OrderDat4_22_1_, marketorde2_.OrderStatus as OrderSta5_22_1_, marketorde2_.Price as Price6_22_1_, marketorde2_.securityID as securit10_22_1_, marketorde2_.Side as Side7_22_1_, marketorde2_.Volume as Volume8_22_1_ from Brokerage brokerage0_ inner join Broker broker1_ on brokerage0_.brokerID=broker1_.brokerID left outer join MarketOrder marketorde2_ on broker1_.brokerID=marketorde2_.brokerID where brokerage0_.brokerageID=?
  2015-06-09 20:28:58,666 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.securities.Earning
  2015-06-09 20:28:58,666 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select earningID from Earning where earningID =?
  2015-06-09 20:28:58,666 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select earning_.earningID, earning_.EarningType as EarningT2_13_, earning_.EarningValue as EarningV3_13_, earning_.ExDate as ExDate4_13_, earning_.ExPrice as ExPrice5_13_, earning_.securityID as security6_13_ from Earning earning_ where earning_.earningID=?
  2015-06-09 20:28:58,666 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Earning (EarningType, EarningValue, ExDate, ExPrice, securityID, earningID) values (?, ?, ?, ?, ?, ?)
  2015-06-09 20:28:58,666 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Earning set EarningType=?, EarningValue=?, ExDate=?, ExPrice=?, securityID=? where earningID=?
  2015-06-09 20:28:58,666 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Earning where earningID=?
  2015-06-09 20:28:58,666 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1643d68f]
  2015-06-09 20:28:58,666 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningType
  2015-06-09 20:28:58,666 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningValue
  2015-06-09 20:28:58,666 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exDate
  2015-06-09 20:28:58,666 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exPrice
  2015-06-09 20:28:58,666 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,666 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,668 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,668 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Earning)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Earning, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Earning)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Earning)
          - SQL table alias mapping - earning0_
          - alias suffix - 0_
          - suffixed key columns - {earningI1_13_0_}

  2015-06-09 20:28:58,668 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Earning [NONE]: select earning0_.earningID as earningI1_13_0_, earning0_.EarningType as EarningT2_13_0_, earning0_.EarningValue as EarningV3_13_0_, earning0_.ExDate as ExDate4_13_0_, earning0_.ExPrice as ExPrice5_13_0_, earning0_.securityID as security6_13_0_ from Earning earning0_ where earning0_.earningID=?
  2015-06-09 20:28:58,668 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e029d61]
  2015-06-09 20:28:58,668 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningType
  2015-06-09 20:28:58,669 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningValue
  2015-06-09 20:28:58,669 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exDate
  2015-06-09 20:28:58,669 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exPrice
  2015-06-09 20:28:58,669 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,669 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,670 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,670 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Earning)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Earning, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Earning)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Earning)
          - SQL table alias mapping - earning0_
          - alias suffix - 0_
          - suffixed key columns - {earningI1_13_0_}

  2015-06-09 20:28:58,670 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Earning [READ]: select earning0_.earningID as earningI1_13_0_, earning0_.EarningType as EarningT2_13_0_, earning0_.EarningValue as EarningV3_13_0_, earning0_.ExDate as ExDate4_13_0_, earning0_.ExPrice as ExPrice5_13_0_, earning0_.securityID as security6_13_0_ from Earning earning0_ where earning0_.earningID=?
  2015-06-09 20:28:58,675 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4052274f]
  2015-06-09 20:28:58,675 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningType
  2015-06-09 20:28:58,675 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningValue
  2015-06-09 20:28:58,675 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exDate
  2015-06-09 20:28:58,675 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exPrice
  2015-06-09 20:28:58,675 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,678 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,694 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,700 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Earning)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Earning, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Earning)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Earning)
          - SQL table alias mapping - earning0_
          - alias suffix - 0_
          - suffixed key columns - {earningI1_13_0_}

  2015-06-09 20:28:58,704 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Earning [UPGRADE]: select earning0_.earningID as earningI1_13_0_, earning0_.EarningType as EarningT2_13_0_, earning0_.EarningValue as EarningV3_13_0_, earning0_.ExDate as ExDate4_13_0_, earning0_.ExPrice as ExPrice5_13_0_, earning0_.securityID as security6_13_0_ from Earning earning0_ where earning0_.earningID=? for update
  2015-06-09 20:28:58,704 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@297ea53a]
  2015-06-09 20:28:58,704 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningType
  2015-06-09 20:28:58,704 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningValue
  2015-06-09 20:28:58,704 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exDate
  2015-06-09 20:28:58,704 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exPrice
  2015-06-09 20:28:58,704 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,704 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,705 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,705 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Earning)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Earning, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Earning)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Earning)
          - SQL table alias mapping - earning0_
          - alias suffix - 0_
          - suffixed key columns - {earningI1_13_0_}

  2015-06-09 20:28:58,705 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Earning [UPGRADE_NOWAIT]: select earning0_.earningID as earningI1_13_0_, earning0_.EarningType as EarningT2_13_0_, earning0_.EarningValue as EarningV3_13_0_, earning0_.ExDate as ExDate4_13_0_, earning0_.ExPrice as ExPrice5_13_0_, earning0_.securityID as security6_13_0_ from Earning earning0_ where earning0_.earningID=? for update nowait 
  2015-06-09 20:28:58,705 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bf22f18]
  2015-06-09 20:28:58,705 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningType
  2015-06-09 20:28:58,705 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningValue
  2015-06-09 20:28:58,705 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exDate
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exPrice
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Earning)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Earning, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Earning)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Earning)
          - SQL table alias mapping - earning0_
          - alias suffix - 0_
          - suffixed key columns - {earningI1_13_0_}

  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Earning [UPGRADE_SKIPLOCKED]: select earning0_.earningID as earningI1_13_0_, earning0_.EarningType as EarningT2_13_0_, earning0_.EarningValue as EarningV3_13_0_, earning0_.ExDate as ExDate4_13_0_, earning0_.ExPrice as ExPrice5_13_0_, earning0_.securityID as security6_13_0_ from Earning earning0_ where earning0_.earningID=? for update
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a7471ce]
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningType
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningValue
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exDate
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exPrice
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Earning)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Earning, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Earning)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Earning)
          - SQL table alias mapping - earning0_
          - alias suffix - 0_
          - suffixed key columns - {earningI1_13_0_}

  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Earning [FORCE]: select earning0_.earningID as earningI1_13_0_, earning0_.EarningType as EarningT2_13_0_, earning0_.EarningValue as EarningV3_13_0_, earning0_.ExDate as ExDate4_13_0_, earning0_.ExPrice as ExPrice5_13_0_, earning0_.securityID as security6_13_0_ from Earning earning0_ where earning0_.earningID=? for update nowait 
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62e70ea3]
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningType
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningValue
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exDate
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exPrice
  2015-06-09 20:28:58,706 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,707 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Earning)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Earning, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Earning)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Earning)
          - SQL table alias mapping - earning0_
          - alias suffix - 0_
          - suffixed key columns - {earningI1_13_0_}

  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Earning [PESSIMISTIC_READ]: select earning0_.earningID as earningI1_13_0_, earning0_.EarningType as EarningT2_13_0_, earning0_.EarningValue as EarningV3_13_0_, earning0_.ExDate as ExDate4_13_0_, earning0_.ExPrice as ExPrice5_13_0_, earning0_.securityID as security6_13_0_ from Earning earning0_ where earning0_.earningID=? for share
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@675d8c96]
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningType
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningValue
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exDate
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exPrice
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Earning)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Earning, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Earning)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Earning)
          - SQL table alias mapping - earning0_
          - alias suffix - 0_
          - suffixed key columns - {earningI1_13_0_}

  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Earning [PESSIMISTIC_WRITE]: select earning0_.earningID as earningI1_13_0_, earning0_.EarningType as EarningT2_13_0_, earning0_.EarningValue as EarningV3_13_0_, earning0_.ExDate as ExDate4_13_0_, earning0_.ExPrice as ExPrice5_13_0_, earning0_.securityID as security6_13_0_ from Earning earning0_ where earning0_.earningID=? for update
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ed3b1f5]
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningType
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningValue
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exDate
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exPrice
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,708 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Earning)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Earning, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Earning)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Earning)
          - SQL table alias mapping - earning0_
          - alias suffix - 0_
          - suffixed key columns - {earningI1_13_0_}

  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Earning [PESSIMISTIC_FORCE_INCREMENT]: select earning0_.earningID as earningI1_13_0_, earning0_.EarningType as EarningT2_13_0_, earning0_.EarningValue as EarningV3_13_0_, earning0_.ExDate as ExDate4_13_0_, earning0_.ExPrice as ExPrice5_13_0_, earning0_.securityID as security6_13_0_ from Earning earning0_ where earning0_.earningID=? for update nowait 
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68d6972f]
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningType
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningValue
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exDate
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exPrice
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Earning)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Earning, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Earning)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Earning)
          - SQL table alias mapping - earning0_
          - alias suffix - 0_
          - suffixed key columns - {earningI1_13_0_}

  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Earning [OPTIMISTIC]: select earning0_.earningID as earningI1_13_0_, earning0_.EarningType as EarningT2_13_0_, earning0_.EarningValue as EarningV3_13_0_, earning0_.ExDate as ExDate4_13_0_, earning0_.ExPrice as ExPrice5_13_0_, earning0_.securityID as security6_13_0_ from Earning earning0_ where earning0_.earningID=?
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7651218e]
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningType
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : earningValue
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exDate
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exPrice
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,709 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,710 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Earning)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Earning, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Earning)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Earning)
          - SQL table alias mapping - earning0_
          - alias suffix - 0_
          - suffixed key columns - {earningI1_13_0_}

  2015-06-09 20:28:58,710 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Earning [OPTIMISTIC_FORCE_INCREMENT]: select earning0_.earningID as earningI1_13_0_, earning0_.EarningType as EarningT2_13_0_, earning0_.EarningValue as EarningV3_13_0_, earning0_.ExDate as ExDate4_13_0_, earning0_.ExPrice as ExPrice5_13_0_, earning0_.securityID as security6_13_0_ from Earning earning0_ where earning0_.earningID=?
  2015-06-09 20:28:58,712 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.securities.Earning: select earning0_.earningID as earningI1_13_2_, earning0_.EarningType as EarningT2_13_2_, earning0_.EarningValue as EarningV3_13_2_, earning0_.ExDate as ExDate4_13_2_, earning0_.ExPrice as ExPrice5_13_2_, earning0_.securityID as security6_13_2_, security1_.securityID as security1_30_0_, security1_.Description as Descript2_30_0_, security1_.securityInfoID_securityInfoID as security4_30_0_, security1_.Symbol as Symbol3_30_0_, historical2_.securityID as securit15_30_4_, historical2_.historicalQuoteID as historic1_16_4_, historical2_.historicalQuoteID as historic1_16_1_, historical2_.AdjClose as AdjClose2_16_1_, historical2_.Ask as Ask3_16_1_, historical2_.AvgPrice as AvgPrice4_16_1_, historical2_.Bid as Bid5_16_1_, historical2_.Close as Close6_16_1_, historical2_.High as High7_16_1_, historical2_.Low as Low8_16_1_, historical2_.Open as Open9_16_1_, historical2_.QDateTime as QDateTi10_16_1_, historical2_.QuoteFactor as QuoteFa11_16_1_, historical2_.securityID as securit15_16_1_, historical2_.TradedQuantity as TradedQ12_16_1_, historical2_.TradedUnits as TradedU13_16_1_, historical2_.Volume as Volume14_16_1_ from Earning earning0_ inner join Security security1_ on earning0_.securityID=security1_.securityID left outer join HistoricalQuote historical2_ on security1_.securityID=historical2_.securityID where earning0_.earningID=? order by historical2_.QDateTime
  2015-06-09 20:28:58,712 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.securities.Earning: select earning0_.earningID as earningI1_13_2_, earning0_.EarningType as EarningT2_13_2_, earning0_.EarningValue as EarningV3_13_2_, earning0_.ExDate as ExDate4_13_2_, earning0_.ExPrice as ExPrice5_13_2_, earning0_.securityID as security6_13_2_, security1_.securityID as security1_30_0_, security1_.Description as Descript2_30_0_, security1_.securityInfoID_securityInfoID as security4_30_0_, security1_.Symbol as Symbol3_30_0_, historical2_.securityID as securit15_30_4_, historical2_.historicalQuoteID as historic1_16_4_, historical2_.historicalQuoteID as historic1_16_1_, historical2_.AdjClose as AdjClose2_16_1_, historical2_.Ask as Ask3_16_1_, historical2_.AvgPrice as AvgPrice4_16_1_, historical2_.Bid as Bid5_16_1_, historical2_.Close as Close6_16_1_, historical2_.High as High7_16_1_, historical2_.Low as Low8_16_1_, historical2_.Open as Open9_16_1_, historical2_.QDateTime as QDateTi10_16_1_, historical2_.QuoteFactor as QuoteFa11_16_1_, historical2_.securityID as securit15_16_1_, historical2_.TradedQuantity as TradedQ12_16_1_, historical2_.TradedUnits as TradedU13_16_1_, historical2_.Volume as Volume14_16_1_ from Earning earning0_ inner join Security security1_ on earning0_.securityID=security1_.securityID left outer join HistoricalQuote historical2_ on security1_.securityID=historical2_.securityID where earning0_.earningID=? order by historical2_.QDateTime
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.securities.Security
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select securityID from Security where securityID =?
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select security_.securityID, security_.Description as Descript2_30_, security_.securityInfoID_securityInfoID as security4_30_, security_.Symbol as Symbol3_30_ from Security security_ where security_.securityID=?
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Security (Description, securityInfoID_securityInfoID, Symbol, securityID) values (?, ?, ?, ?)
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Security set Description=?, securityInfoID_securityInfoID=?, Symbol=? where securityID=?
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Security where securityID=?
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24faea88]
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64beebb7]
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.category
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.currencyID
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.emissionDate
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.exercisePrice
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.expirationDate
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.futureSerie
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.minimalVolume
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.objectAsset
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.optionSerie
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.optionStyle
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.quoteFactor
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.symbolDate
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.securityID
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : securityInfoID.securityID
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,713 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,714 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}
          - JOIN (JoinDefinedByMetadata(securityInfoID)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.SecurityInfo)
                - SQL table alias mapping - securityin1_
                - alias suffix - 1_
                - suffixed key columns - {security1_31_1_}

  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [NONE]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_, securityin1_.securityInfoID as security1_31_1_, securityin1_.Category as Category2_31_1_, securityin1_.currencyID as currenc13_31_1_, securityin1_.EmissionDate as Emission3_31_1_, securityin1_.ExcercisePrice as Excercis4_31_1_, securityin1_.ExpirationDate as Expirati5_31_1_, securityin1_.FutureSerie as FutureSe6_31_1_, securityin1_.MinimalVolume as MinimalV7_31_1_, securityin1_.ObjectAsset as ObjectAs8_31_1_, securityin1_.OptionSerie as OptionSe9_31_1_, securityin1_.OptionStyle as OptionS10_31_1_, securityin1_.QuoteFactor as QuoteFa11_31_1_, securityin1_.SymbolDate as SymbolD12_31_1_ from Security security0_ left outer join SecurityInfo securityin1_ on security0_.securityInfoID_securityInfoID=securityin1_.securityInfoID where security0_.securityID=?
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bcec031]
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32f0fba8]
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.category
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.currencyID
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.emissionDate
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.exercisePrice
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.expirationDate
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.futureSerie
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.minimalVolume
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.objectAsset
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.optionSerie
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.optionStyle
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.quoteFactor
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.symbolDate
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID.securityID
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : securityInfoID.securityID
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,715 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}
          - JOIN (JoinDefinedByMetadata(securityInfoID)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.SecurityInfo)
                - SQL table alias mapping - securityin1_
                - alias suffix - 1_
                - suffixed key columns - {security1_31_1_}

  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [READ]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_, securityin1_.securityInfoID as security1_31_1_, securityin1_.Category as Category2_31_1_, securityin1_.currencyID as currenc13_31_1_, securityin1_.EmissionDate as Emission3_31_1_, securityin1_.ExcercisePrice as Excercis4_31_1_, securityin1_.ExpirationDate as Expirati5_31_1_, securityin1_.FutureSerie as FutureSe6_31_1_, securityin1_.MinimalVolume as MinimalV7_31_1_, securityin1_.ObjectAsset as ObjectAs8_31_1_, securityin1_.OptionSerie as OptionSe9_31_1_, securityin1_.OptionStyle as OptionS10_31_1_, securityin1_.QuoteFactor as QuoteFa11_31_1_, securityin1_.SymbolDate as SymbolD12_31_1_ from Security security0_ left outer join SecurityInfo securityin1_ on security0_.securityInfoID_securityInfoID=securityin1_.securityInfoID where security0_.securityID=?
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29ef6856]
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3faf2e7d]
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [UPGRADE]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=? for update
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4648ce9]
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61526469]
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:28:58,716 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [UPGRADE_NOWAIT]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=? for update nowait 
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@274872f8]
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eb6449b]
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [UPGRADE_SKIPLOCKED]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=? for update
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c351808]
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,717 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:28:58,718 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:28:58,718 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42b64ab8]
  2015-06-09 20:28:58,718 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:28:58,718 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,718 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,718 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:28:58,718 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [FORCE]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=? for update nowait 
  2015-06-09 20:28:58,718 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e985ce9]
  2015-06-09 20:28:58,718 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,718 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:28:58,718 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,718 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:28:58,718 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:28:58,718 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@410ae9a3]
  2015-06-09 20:28:58,718 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:28:58,718 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,719 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,719 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:28:58,719 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [PESSIMISTIC_READ]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=? for share
  2015-06-09 20:28:58,719 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@319988b0]
  2015-06-09 20:28:58,719 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,719 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:28:58,719 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,719 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:28:58,719 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:28:58,720 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68759011]
  2015-06-09 20:28:58,720 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:28:58,720 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,720 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,720 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:28:58,720 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [PESSIMISTIC_WRITE]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=? for update
  2015-06-09 20:28:58,720 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e242b4d]
  2015-06-09 20:28:58,720 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,720 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:28:58,720 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,720 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:28:58,720 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:28:58,720 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@592e843a]
  2015-06-09 20:28:58,720 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:28:58,720 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [PESSIMISTIC_FORCE_INCREMENT]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=? for update nowait 
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d1f7216]
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e16b8b5]
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [OPTIMISTIC]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=?
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43b4fe19]
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : historicalQuoteSet
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderSet
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ordersSet
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoID
  2015-06-09 20:28:58,721 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1536602f]
  2015-06-09 20:28:58,722 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbol
  2015-06-09 20:28:58,722 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,722 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,722 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Security)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Security)
          - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=com.cmm.jft.trading.securities.Security.securityInfoID)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Security)
          - SQL table alias mapping - security0_
          - alias suffix - 0_
          - suffixed key columns - {security1_30_0_}

  2015-06-09 20:28:58,722 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Security [OPTIMISTIC_FORCE_INCREMENT]: select security0_.securityID as security1_30_0_, security0_.Description as Descript2_30_0_, security0_.securityInfoID_securityInfoID as security4_30_0_, security0_.Symbol as Symbol3_30_0_ from Security security0_ where security0_.securityID=?
  2015-06-09 20:28:58,722 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.securities.Security: select security0_.securityID as security1_30_1_, security0_.Description as Descript2_30_1_, security0_.securityInfoID_securityInfoID as security4_30_1_, security0_.Symbol as Symbol3_30_1_, historical1_.securityID as securit15_30_3_, historical1_.historicalQuoteID as historic1_16_3_, historical1_.historicalQuoteID as historic1_16_0_, historical1_.AdjClose as AdjClose2_16_0_, historical1_.Ask as Ask3_16_0_, historical1_.AvgPrice as AvgPrice4_16_0_, historical1_.Bid as Bid5_16_0_, historical1_.Close as Close6_16_0_, historical1_.High as High7_16_0_, historical1_.Low as Low8_16_0_, historical1_.Open as Open9_16_0_, historical1_.QDateTime as QDateTi10_16_0_, historical1_.QuoteFactor as QuoteFa11_16_0_, historical1_.securityID as securit15_16_0_, historical1_.TradedQuantity as TradedQ12_16_0_, historical1_.TradedUnits as TradedU13_16_0_, historical1_.Volume as Volume14_16_0_ from Security security0_ left outer join HistoricalQuote historical1_ on security0_.securityID=historical1_.securityID where security0_.securityID=? order by historical1_.QDateTime
  2015-06-09 20:28:58,728 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.securities.Security: select security0_.securityID as security1_30_1_, security0_.Description as Descript2_30_1_, security0_.securityInfoID_securityInfoID as security4_30_1_, security0_.Symbol as Symbol3_30_1_, historical1_.securityID as securit15_30_3_, historical1_.historicalQuoteID as historic1_16_3_, historical1_.historicalQuoteID as historic1_16_0_, historical1_.AdjClose as AdjClose2_16_0_, historical1_.Ask as Ask3_16_0_, historical1_.AvgPrice as AvgPrice4_16_0_, historical1_.Bid as Bid5_16_0_, historical1_.Close as Close6_16_0_, historical1_.High as High7_16_0_, historical1_.Low as Low8_16_0_, historical1_.Open as Open9_16_0_, historical1_.QDateTime as QDateTi10_16_0_, historical1_.QuoteFactor as QuoteFa11_16_0_, historical1_.securityID as securit15_16_0_, historical1_.TradedQuantity as TradedQ12_16_0_, historical1_.TradedUnits as TradedU13_16_0_, historical1_.Volume as Volume14_16_0_ from Security security0_ left outer join HistoricalQuote historical1_ on security0_.securityID=historical1_.securityID where security0_.securityID=? order by historical1_.QDateTime
  2015-06-09 20:28:58,731 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for entity com.cmm.jft.trading.securities.Security [NONE]: select security0_.securityID as security1_30_1_, security0_.Description as Descript2_30_1_, security0_.securityInfoID_securityInfoID as security4_30_1_, security0_.Symbol as Symbol3_30_1_, securityin1_.securityInfoID as security1_31_0_, securityin1_.Category as Category2_31_0_, securityin1_.currencyID as currenc13_31_0_, securityin1_.EmissionDate as Emission3_31_0_, securityin1_.ExcercisePrice as Excercis4_31_0_, securityin1_.ExpirationDate as Expirati5_31_0_, securityin1_.FutureSerie as FutureSe6_31_0_, securityin1_.MinimalVolume as MinimalV7_31_0_, securityin1_.ObjectAsset as ObjectAs8_31_0_, securityin1_.OptionSerie as OptionSe9_31_0_, securityin1_.OptionStyle as OptionS10_31_0_, securityin1_.QuoteFactor as QuoteFa11_31_0_, securityin1_.SymbolDate as SymbolD12_31_0_ from Security security0_ left outer join SecurityInfo securityin1_ on security0_.securityInfoID_securityInfoID=securityin1_.securityInfoID where security0_.securityInfoID_securityInfoID=?
  2015-06-09 20:28:58,732 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.Deposit
  2015-06-09 20:28:58,732 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select depositID from Deposit where depositID =?
  2015-06-09 20:28:58,732 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select deposit_.depositID, deposit_.DepositAccount as DepositA5_11_, deposit_.DepositDate as DepositD2_11_, deposit_.Description as Descript3_11_, deposit_.Value as Value4_11_ from Deposit deposit_ where deposit_.depositID=?
  2015-06-09 20:28:58,732 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Deposit (DepositAccount, DepositDate, Description, Value, depositID) values (?, ?, ?, ?, ?)
  2015-06-09 20:28:58,732 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Deposit set DepositAccount=?, DepositDate=?, Description=?, Value=? where depositID=?
  2015-06-09 20:28:58,732 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Deposit where depositID=?
  2015-06-09 20:28:58,732 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@743cb8e0]
  2015-06-09 20:28:58,732 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:28:58,732 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:28:58,732 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,732 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,732 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,732 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,732 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:28:58,732 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [NONE]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=?
  2015-06-09 20:28:58,732 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c1b9e4b]
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [READ]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=?
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@649725e3]
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [UPGRADE]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=? for update
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c168660]
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,733 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [UPGRADE_NOWAIT]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=? for update nowait 
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fd0e5b6]
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [UPGRADE_SKIPLOCKED]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=? for update
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36b0fcd5]
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [FORCE]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=? for update nowait 
  2015-06-09 20:28:58,734 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475835b1]
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [PESSIMISTIC_READ]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=? for share
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5241cf67]
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [PESSIMISTIC_WRITE]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=? for update
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77192705]
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,735 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [PESSIMISTIC_FORCE_INCREMENT]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=? for update nowait 
  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e809b79]
  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [OPTIMISTIC]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=?
  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@625e134e]
  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Deposit)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Deposit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Deposit)
          - SQL table alias mapping - deposit0_
          - alias suffix - 0_
          - suffixed key columns - {depositI1_11_0_}

  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Deposit [OPTIMISTIC_FORCE_INCREMENT]: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=?
  2015-06-09 20:28:58,736 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.Deposit: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=?
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.Deposit: select deposit0_.depositID as depositI1_11_0_, deposit0_.DepositAccount as DepositA5_11_0_, deposit0_.DepositDate as DepositD2_11_0_, deposit0_.Description as Descript3_11_0_, deposit0_.Value as Value4_11_0_ from Deposit deposit0_ where deposit0_.depositID=?
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.TaxSetup
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select taxSetupID from TaxSetup where taxSetupID =?
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select taxsetup_.taxSetupID, taxsetup_.Aliquota as Aliquota2_36_, taxsetup_.SetupName as SetupNam3_36_, taxsetup_.taxID as taxID5_36_, taxsetup_.TaxValue as TaxValue4_36_ from TaxSetup taxsetup_ where taxsetup_.taxSetupID=?
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into TaxSetup (Aliquota, SetupName, taxID, TaxValue, taxSetupID) values (?, ?, ?, ?, ?)
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update TaxSetup set Aliquota=?, SetupName=?, taxID=?, TaxValue=? where taxSetupID=?
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from TaxSetup where taxSetupID=?
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@89c10b7]
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [NONE]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=?
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fe89c24]
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:28:58,737 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [READ]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=?
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d08f3f5]
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [UPGRADE]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=? for update
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a1da881]
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,738 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [UPGRADE_NOWAIT]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=? for update nowait 
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fd4acee]
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [UPGRADE_SKIPLOCKED]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=? for update
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6175619b]
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [FORCE]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=? for update nowait 
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@756cf158]
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:28:58,739 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [PESSIMISTIC_READ]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=? for share
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@751d3241]
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [PESSIMISTIC_WRITE]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=? for update
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64337702]
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,740 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [PESSIMISTIC_FORCE_INCREMENT]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=? for update nowait 
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30ea8c23]
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [OPTIMISTIC]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=?
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e76dac]
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.TaxSetup)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.TaxSetup)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.TaxSetup)
          - SQL table alias mapping - taxsetup0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup1_36_0_}

  2015-06-09 20:28:58,741 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.TaxSetup [OPTIMISTIC_FORCE_INCREMENT]: select taxsetup0_.taxSetupID as taxSetup1_36_0_, taxsetup0_.Aliquota as Aliquota2_36_0_, taxsetup0_.SetupName as SetupNam3_36_0_, taxsetup0_.taxID as taxID5_36_0_, taxsetup0_.TaxValue as TaxValue4_36_0_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=?
  2015-06-09 20:28:58,742 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.TaxSetup: select taxsetup0_.taxSetupID as taxSetup1_36_1_, taxsetup0_.Aliquota as Aliquota2_36_1_, taxsetup0_.SetupName as SetupNam3_36_1_, taxsetup0_.taxID as taxID5_36_1_, taxsetup0_.TaxValue as TaxValue4_36_1_, ruleset1_.taxSetupID as taxSetup9_36_3_, ruleset1_.ruleID as ruleID1_27_3_, ruleset1_.ruleID as ruleID1_27_0_, ruleset1_.ApplyTax as ApplyTax2_27_0_, ruleset1_.ApplyValue as ApplyVal3_27_0_, ruleset1_.creditAccountID as creditAc5_27_0_, ruleset1_.debitAccountID as debitAcc6_27_0_, ruleset1_.distributionRuleID as distribu7_27_0_, ruleset1_.Object as Object4_27_0_, ruleset1_.ruleFormulaID as ruleForm8_27_0_, ruleset1_.taxSetupID as taxSetup9_27_0_ from TaxSetup taxsetup0_ left outer join Rule ruleset1_ on taxsetup0_.taxSetupID=ruleset1_.taxSetupID where taxsetup0_.taxSetupID=?
  2015-06-09 20:28:58,742 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.TaxSetup: select taxsetup0_.taxSetupID as taxSetup1_36_1_, taxsetup0_.Aliquota as Aliquota2_36_1_, taxsetup0_.SetupName as SetupNam3_36_1_, taxsetup0_.taxID as taxID5_36_1_, taxsetup0_.TaxValue as TaxValue4_36_1_, ruleset1_.taxSetupID as taxSetup9_36_3_, ruleset1_.ruleID as ruleID1_27_3_, ruleset1_.ruleID as ruleID1_27_0_, ruleset1_.ApplyTax as ApplyTax2_27_0_, ruleset1_.ApplyValue as ApplyVal3_27_0_, ruleset1_.creditAccountID as creditAc5_27_0_, ruleset1_.debitAccountID as debitAcc6_27_0_, ruleset1_.distributionRuleID as distribu7_27_0_, ruleset1_.Object as Object4_27_0_, ruleset1_.ruleFormulaID as ruleForm8_27_0_, ruleset1_.taxSetupID as taxSetup9_27_0_ from TaxSetup taxsetup0_ left outer join Rule ruleset1_ on taxsetup0_.taxSetupID=ruleset1_.taxSetupID where taxsetup0_.taxSetupID=?
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.Currency
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select currencyID from Currency where currencyID =?
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select currency_.currencyID, currency_.CurrSymbol as CurrSymb2_9_, currency_.Description as Descript3_9_, currency_.FractionalUnit as Fraction4_9_, currency_.Sign as Sign5_9_ from Currency currency_ where currency_.currencyID=?
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Currency (CurrSymbol, Description, FractionalUnit, Sign, currencyID) values (?, ?, ?, ?, ?)
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Currency set CurrSymbol=?, Description=?, FractionalUnit=?, Sign=? where currencyID=?
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Currency where currencyID=?
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f2f577]
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [NONE]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=?
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d465e4b]
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:28:58,743 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [READ]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=?
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41a90fa8]
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [UPGRADE]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=? for update
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52500920]
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:28:58,744 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:28:58,745 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:28:58,745 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,745 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,745 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:28:58,745 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:28:58,745 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:28:58,745 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,745 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,745 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:28:58,745 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [UPGRADE_NOWAIT]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=? for update nowait 
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18a3962d]
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [UPGRADE_SKIPLOCKED]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=? for update
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a65bb85]
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:28:58,746 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [FORCE]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=? for update nowait 
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f936da8]
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [PESSIMISTIC_READ]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=? for share
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@452ba1db]
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,747 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [PESSIMISTIC_WRITE]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=? for update
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76a36b71]
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [PESSIMISTIC_FORCE_INCREMENT]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=? for update nowait 
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f9d87b]
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:28:58,748 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [OPTIMISTIC]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=?
  2015-06-09 20:28:58,749 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26fb628]
  2015-06-09 20:28:58,749 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountSet
  2015-06-09 20:28:58,749 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currSymbol
  2015-06-09 20:28:58,749 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyQuoteSet
  2015-06-09 20:28:58,749 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,749 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,749 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fractionalUnit
  2015-06-09 20:28:58,749 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityInfoList
  2015-06-09 20:28:58,749 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sign
  2015-06-09 20:28:58,749 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,749 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,749 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Currency)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Currency, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Currency)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Currency)
          - SQL table alias mapping - currency0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_9_0_}

  2015-06-09 20:28:58,749 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Currency [OPTIMISTIC_FORCE_INCREMENT]: select currency0_.currencyID as currency1_9_0_, currency0_.CurrSymbol as CurrSymb2_9_0_, currency0_.Description as Descript3_9_0_, currency0_.FractionalUnit as Fraction4_9_0_, currency0_.Sign as Sign5_9_0_ from Currency currency0_ where currency0_.currencyID=?
  2015-06-09 20:28:58,750 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.Currency: select currency0_.currencyID as currency1_9_1_, currency0_.CurrSymbol as CurrSymb2_9_1_, currency0_.Description as Descript3_9_1_, currency0_.FractionalUnit as Fraction4_9_1_, currency0_.Sign as Sign5_9_1_, accountset1_.currencyID as currency9_9_3_, accountset1_.accountID as accountI1_0_3_, accountset1_.accountID as accountI1_0_0_, accountset1_.AccName as AccName2_0_0_, accountset1_.AccountCategory as AccountC3_0_0_, accountset1_.AccountType as AccountT4_0_0_, accountset1_.Balance as Balance5_0_0_, accountset1_.CreditLimit as CreditLi6_0_0_, accountset1_.currencyID as currency9_0_0_, accountset1_.Description as Descript7_0_0_, accountset1_.fatherAccountID as fatherA10_0_0_, accountset1_.Open as Open8_0_0_ from Currency currency0_ left outer join Account accountset1_ on currency0_.currencyID=accountset1_.currencyID where currency0_.currencyID=?
  2015-06-09 20:28:58,750 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.Currency: select currency0_.currencyID as currency1_9_1_, currency0_.CurrSymbol as CurrSymb2_9_1_, currency0_.Description as Descript3_9_1_, currency0_.FractionalUnit as Fraction4_9_1_, currency0_.Sign as Sign5_9_1_, accountset1_.currencyID as currency9_9_3_, accountset1_.accountID as accountI1_0_3_, accountset1_.accountID as accountI1_0_0_, accountset1_.AccName as AccName2_0_0_, accountset1_.AccountCategory as AccountC3_0_0_, accountset1_.AccountType as AccountT4_0_0_, accountset1_.Balance as Balance5_0_0_, accountset1_.CreditLimit as CreditLi6_0_0_, accountset1_.currencyID as currency9_0_0_, accountset1_.Description as Descript7_0_0_, accountset1_.fatherAccountID as fatherA10_0_0_, accountset1_.Open as Open8_0_0_ from Currency currency0_ left outer join Account accountset1_ on currency0_.currencyID=accountset1_.currencyID where currency0_.currencyID=?
  2015-06-09 20:28:58,751 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.OrderExecution
  2015-06-09 20:28:58,751 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select orderExecutionID from OrderExecution where orderExecutionID =?
  2015-06-09 20:28:58,751 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select orderexecu_.orderExecutionID, orderexecu_.ExecutionDateTime as Executio2_25_, orderexecu_.orderID as orderID5_25_, orderexecu_.Price as Price3_25_, orderexecu_.Volume as Volume4_25_ from OrderExecution orderexecu_ where orderexecu_.orderExecutionID=?
  2015-06-09 20:28:58,751 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into OrderExecution (ExecutionDateTime, orderID, Price, Volume, orderExecutionID) values (?, ?, ?, ?, ?)
  2015-06-09 20:28:58,751 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update OrderExecution set ExecutionDateTime=?, orderID=?, Price=?, Volume=? where orderExecutionID=?
  2015-06-09 20:28:58,751 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from OrderExecution where orderExecutionID=?
  2015-06-09 20:28:58,751 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70dd7e15]
  2015-06-09 20:28:58,751 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:28:58,751 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,751 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,751 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [NONE]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=?
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35beb15e]
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [READ]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=?
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ac86ba5]
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,752 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,753 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:28:58,753 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [UPGRADE]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=? for update
  2015-06-09 20:28:58,753 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c9399a4]
  2015-06-09 20:28:58,753 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:28:58,753 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,753 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,753 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,753 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,753 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,753 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:28:58,753 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [UPGRADE_NOWAIT]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=? for update nowait 
  2015-06-09 20:28:58,753 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9635fa]
  2015-06-09 20:28:58,753 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:28:58,753 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,753 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,753 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,755 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,755 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,755 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:28:58,755 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [UPGRADE_SKIPLOCKED]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=? for update
  2015-06-09 20:28:58,755 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63c5efee]
  2015-06-09 20:28:58,757 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:28:58,757 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,757 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,757 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,757 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,757 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,757 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:28:58,757 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [FORCE]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=? for update nowait 
  2015-06-09 20:28:58,758 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c98290c]
  2015-06-09 20:28:58,758 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:28:58,758 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,758 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,758 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,759 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,759 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,759 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:28:58,759 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [PESSIMISTIC_READ]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=? for share
  2015-06-09 20:28:58,759 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bda80bf]
  2015-06-09 20:28:58,759 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [PESSIMISTIC_WRITE]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=? for update
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ce86164]
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [PESSIMISTIC_FORCE_INCREMENT]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=? for update nowait 
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51df223b]
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,760 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,761 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,761 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:28:58,761 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [OPTIMISTIC]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=?
  2015-06-09 20:28:58,761 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60d8c0dc]
  2015-06-09 20:28:58,761 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:28:58,761 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,761 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,761 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,761 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,761 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,761 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderExecution)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderExecution)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderExecution)
          - SQL table alias mapping - orderexecu0_
          - alias suffix - 0_
          - suffixed key columns - {orderExe1_25_0_}

  2015-06-09 20:28:58,761 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderExecution [OPTIMISTIC_FORCE_INCREMENT]: select orderexecu0_.orderExecutionID as orderExe1_25_0_, orderexecu0_.ExecutionDateTime as Executio2_25_0_, orderexecu0_.orderID as orderID5_25_0_, orderexecu0_.Price as Price3_25_0_, orderexecu0_.Volume as Volume4_25_0_ from OrderExecution orderexecu0_ where orderexecu0_.orderExecutionID=?
  2015-06-09 20:28:58,761 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.OrderExecution: select orderexecu0_.orderExecutionID as orderExe1_25_2_, orderexecu0_.ExecutionDateTime as Executio2_25_2_, orderexecu0_.orderID as orderID5_25_2_, orderexecu0_.Price as Price3_25_2_, orderexecu0_.Volume as Volume4_25_2_, orders1_.orderID as orderID1_26_0_, orders1_.AveragePrice as AverageP2_26_0_, orders1_.Comment as Comment3_26_0_, orders1_.Duration as Duration4_26_0_, orders1_.ExecutedVolume as Executed5_26_0_, orders1_.OrderDateTime as OrderDat6_26_0_, orders1_.OrderSerial as OrderSer7_26_0_, orders1_.OrderStatus as OrderSta8_26_0_, orders1_.OrderType as OrderTyp9_26_0_, orders1_.Price as Price10_26_0_, orders1_.securityID as securit15_26_0_, orders1_.Side as Side11_26_0_, orders1_.StopPrice as StopPri12_26_0_, orders1_.TradeType as TradeTy13_26_0_, orders1_.Volume as Volume14_26_0_, eventslist2_.orderID as orderID5_26_4_, eventslist2_.orderEventID as orderEve1_24_4_, eventslist2_.orderEventID as orderEve1_24_1_, eventslist2_.EventDateTime as EventDat2_24_1_, eventslist2_.EventType as EventTyp3_24_1_, eventslist2_.Message as Message4_24_1_, eventslist2_.orderID as orderID5_24_1_ from OrderExecution orderexecu0_ inner join Orders orders1_ on orderexecu0_.orderID=orders1_.orderID left outer join OrderEvent eventslist2_ on orders1_.orderID=eventslist2_.orderID where orderexecu0_.orderExecutionID=?
  2015-06-09 20:28:58,762 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.OrderExecution: select orderexecu0_.orderExecutionID as orderExe1_25_2_, orderexecu0_.ExecutionDateTime as Executio2_25_2_, orderexecu0_.orderID as orderID5_25_2_, orderexecu0_.Price as Price3_25_2_, orderexecu0_.Volume as Volume4_25_2_, orders1_.orderID as orderID1_26_0_, orders1_.AveragePrice as AverageP2_26_0_, orders1_.Comment as Comment3_26_0_, orders1_.Duration as Duration4_26_0_, orders1_.ExecutedVolume as Executed5_26_0_, orders1_.OrderDateTime as OrderDat6_26_0_, orders1_.OrderSerial as OrderSer7_26_0_, orders1_.OrderStatus as OrderSta8_26_0_, orders1_.OrderType as OrderTyp9_26_0_, orders1_.Price as Price10_26_0_, orders1_.securityID as securit15_26_0_, orders1_.Side as Side11_26_0_, orders1_.StopPrice as StopPri12_26_0_, orders1_.TradeType as TradeTy13_26_0_, orders1_.Volume as Volume14_26_0_, eventslist2_.orderID as orderID5_26_4_, eventslist2_.orderEventID as orderEve1_24_4_, eventslist2_.orderEventID as orderEve1_24_1_, eventslist2_.EventDateTime as EventDat2_24_1_, eventslist2_.EventType as EventTyp3_24_1_, eventslist2_.Message as Message4_24_1_, eventslist2_.orderID as orderID5_24_1_ from OrderExecution orderexecu0_ inner join Orders orders1_ on orderexecu0_.orderID=orders1_.orderID left outer join OrderEvent eventslist2_ on orders1_.orderID=eventslist2_.orderID where orderexecu0_.orderExecutionID=?
  2015-06-09 20:28:58,762 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.CurrencyQuote
  2015-06-09 20:28:58,762 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select currencyQuoteID from CurrencyQuote where currencyQuoteID =?
  2015-06-09 20:28:58,762 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select currencyqu_.currencyQuoteID, currencyqu_.currencyID as currency4_10_, currencyqu_.QDateTime as QDateTim2_10_, currencyqu_.Value as Value3_10_ from CurrencyQuote currencyqu_ where currencyqu_.currencyQuoteID=?
  2015-06-09 20:28:58,762 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into CurrencyQuote (currencyID, QDateTime, Value, currencyQuoteID) values (?, ?, ?, ?)
  2015-06-09 20:28:58,762 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update CurrencyQuote set currencyID=?, QDateTime=?, Value=? where currencyQuoteID=?
  2015-06-09 20:28:58,762 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from CurrencyQuote where currencyQuoteID=?
  2015-06-09 20:28:58,762 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a62689d]
  2015-06-09 20:28:58,762 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,762 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,762 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,762 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,762 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,762 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:28:58,763 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [NONE]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=?
  2015-06-09 20:28:58,763 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60fa3495]
  2015-06-09 20:28:58,763 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,763 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,763 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,763 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,763 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,763 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:28:58,763 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [READ]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=?
  2015-06-09 20:28:58,763 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79e18e38]
  2015-06-09 20:28:58,763 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,763 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,763 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,763 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,763 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,764 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:28:58,764 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [UPGRADE]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=? for update
  2015-06-09 20:28:58,764 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1849db1a]
  2015-06-09 20:28:58,764 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,764 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,764 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,764 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,764 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,764 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:28:58,765 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [UPGRADE_NOWAIT]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=? for update nowait 
  2015-06-09 20:28:58,765 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ca25c47]
  2015-06-09 20:28:58,765 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,765 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,765 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,765 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,768 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,768 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:28:58,768 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [UPGRADE_SKIPLOCKED]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=? for update
  2015-06-09 20:28:58,768 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@533b266e]
  2015-06-09 20:28:58,768 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,768 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,768 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,768 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,770 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,772 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:28:58,772 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [FORCE]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=? for update nowait 
  2015-06-09 20:28:58,772 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@89ff02e]
  2015-06-09 20:28:58,772 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,772 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,772 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,772 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,772 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,773 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:28:58,773 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [PESSIMISTIC_READ]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=? for share
  2015-06-09 20:28:58,773 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62679465]
  2015-06-09 20:28:58,773 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,773 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,773 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,773 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,773 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,773 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:28:58,773 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [PESSIMISTIC_WRITE]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=? for update
  2015-06-09 20:28:58,773 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d71006f]
  2015-06-09 20:28:58,773 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,773 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,773 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,773 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,774 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,776 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:28:58,776 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [PESSIMISTIC_FORCE_INCREMENT]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=? for update nowait 
  2015-06-09 20:28:58,776 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f2606b]
  2015-06-09 20:28:58,776 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,776 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,776 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,776 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,776 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,776 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:28:58,776 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [OPTIMISTIC]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=?
  2015-06-09 20:28:58,777 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ebff828]
  2015-06-09 20:28:58,777 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,777 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,777 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,777 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,777 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,777 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.CurrencyQuote)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.CurrencyQuote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.CurrencyQuote)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency1_10_0_}

  2015-06-09 20:28:58,777 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.CurrencyQuote [OPTIMISTIC_FORCE_INCREMENT]: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=?
  2015-06-09 20:28:58,777 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.CurrencyQuote: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=?
  2015-06-09 20:28:58,777 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.CurrencyQuote: select currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyID as currency4_10_0_, currencyqu0_.QDateTime as QDateTim2_10_0_, currencyqu0_.Value as Value3_10_0_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=?
  2015-06-09 20:28:58,777 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.securities.Segment
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select segmentID from Segment where segmentID =?
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select segment_.segmentID, segment_.SegmentName as SegmentN2_32_, segment_.subsectorID as subsecto3_32_ from Segment segment_ where segment_.segmentID=?
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Segment (SegmentName, subsectorID, segmentID) values (?, ?, ?)
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Segment set SegmentName=?, subsectorID=? where segmentID=?
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Segment where segmentID=?
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33352f32]
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [NONE]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=?
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e044120]
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,778 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [READ]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=?
  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3624da92]
  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [UPGRADE]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=? for update
  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@94f6bfb]
  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:28:58,779 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [UPGRADE_NOWAIT]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=? for update nowait 
  2015-06-09 20:28:58,780 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2484f433]
  2015-06-09 20:28:58,780 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,780 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:28:58,780 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:28:58,780 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,780 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,780 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:28:58,780 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [UPGRADE_SKIPLOCKED]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=? for update
  2015-06-09 20:28:58,780 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1255b1d1]
  2015-06-09 20:28:58,780 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,780 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:28:58,780 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:28:58,780 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,780 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,780 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:28:58,780 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [FORCE]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=? for update nowait 
  2015-06-09 20:28:58,780 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c22d4f]
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [PESSIMISTIC_READ]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=? for share
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60bdf15d]
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [PESSIMISTIC_WRITE]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=? for update
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51e4ccb3]
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,781 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,782 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:28:58,782 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [PESSIMISTIC_FORCE_INCREMENT]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=? for update nowait 
  2015-06-09 20:28:58,782 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@495083a0]
  2015-06-09 20:28:58,783 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,784 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:28:58,784 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:28:58,784 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,784 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,784 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:28:58,784 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [OPTIMISTIC]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=?
  2015-06-09 20:28:58,784 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28a0fd6c]
  2015-06-09 20:28:58,784 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,784 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:28:58,784 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:28:58,784 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,784 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,786 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.securities.Segment)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.securities.Segment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.securities.Segment)
          - SQL table alias mapping - segment0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI1_32_0_}

  2015-06-09 20:28:58,786 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.securities.Segment [OPTIMISTIC_FORCE_INCREMENT]: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=?
  2015-06-09 20:28:58,786 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.securities.Segment: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=?
  2015-06-09 20:28:58,786 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.securities.Segment: select segment0_.segmentID as segmentI1_32_0_, segment0_.SegmentName as SegmentN2_32_0_, segment0_.subsectorID as subsecto3_32_0_ from Segment segment0_ where segment0_.segmentID=?
  2015-06-09 20:28:58,787 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.Tax
  2015-06-09 20:28:58,787 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select taxID from Tax where taxID =?
  2015-06-09 20:28:58,787 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select tax_.taxID, tax_.TaxName as TaxName2_35_ from Tax tax_ where tax_.taxID=?
  2015-06-09 20:28:58,787 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Tax (TaxName, taxID) values (?, ?)
  2015-06-09 20:28:58,787 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Tax set TaxName=? where taxID=?
  2015-06-09 20:28:58,787 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Tax where taxID=?
  2015-06-09 20:28:58,787 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66629f63]
  2015-06-09 20:28:58,787 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,787 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:28:58,787 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,787 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,787 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:28:58,787 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [NONE]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=?
  2015-06-09 20:28:58,787 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27a5328c]
  2015-06-09 20:28:58,787 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,787 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:28:58,790 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,791 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,791 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:28:58,791 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [READ]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=?
  2015-06-09 20:28:58,791 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c345c5f]
  2015-06-09 20:28:58,791 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,791 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:28:58,791 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,791 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,791 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:28:58,792 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [UPGRADE]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=? for update
  2015-06-09 20:28:58,792 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65e61854]
  2015-06-09 20:28:58,792 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,792 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:28:58,792 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,792 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,792 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:28:58,792 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [UPGRADE_NOWAIT]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=? for update nowait 
  2015-06-09 20:28:58,792 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fcee388]
  2015-06-09 20:28:58,792 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,792 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:28:58,792 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,792 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [UPGRADE_SKIPLOCKED]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=? for update
  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3af17be2]
  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [FORCE]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=? for update nowait 
  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37f21974]
  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [PESSIMISTIC_READ]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=? for share
  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e521c1e]
  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:28:58,793 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,803 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,803 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:28:58,803 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [PESSIMISTIC_WRITE]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=? for update
  2015-06-09 20:28:58,803 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d5d9e5]
  2015-06-09 20:28:58,803 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,803 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:28:58,803 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,803 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,804 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:28:58,804 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [PESSIMISTIC_FORCE_INCREMENT]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=? for update nowait 
  2015-06-09 20:28:58,804 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ef27d66]
  2015-06-09 20:28:58,804 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,804 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:28:58,804 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,804 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,804 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:28:58,804 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [OPTIMISTIC]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=?
  2015-06-09 20:28:58,804 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d9bec4d]
  2015-06-09 20:28:58,804 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,804 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupSet
  2015-06-09 20:28:58,804 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,804 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,804 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Tax)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Tax, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Tax)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Tax)
          - SQL table alias mapping - tax0_
          - alias suffix - 0_
          - suffixed key columns - {taxID1_35_0_}

  2015-06-09 20:28:58,805 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Tax [OPTIMISTIC_FORCE_INCREMENT]: select tax0_.taxID as taxID1_35_0_, tax0_.TaxName as TaxName2_35_0_ from Tax tax0_ where tax0_.taxID=?
  2015-06-09 20:28:58,805 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.Tax: select tax0_.taxID as taxID1_35_1_, tax0_.TaxName as TaxName2_35_1_, taxsetupse1_.taxID as taxID5_35_3_, taxsetupse1_.taxSetupID as taxSetup1_36_3_, taxsetupse1_.taxSetupID as taxSetup1_36_0_, taxsetupse1_.Aliquota as Aliquota2_36_0_, taxsetupse1_.SetupName as SetupNam3_36_0_, taxsetupse1_.taxID as taxID5_36_0_, taxsetupse1_.TaxValue as TaxValue4_36_0_ from Tax tax0_ left outer join TaxSetup taxsetupse1_ on tax0_.taxID=taxsetupse1_.taxID where tax0_.taxID=?
  2015-06-09 20:28:58,805 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.Tax: select tax0_.taxID as taxID1_35_1_, tax0_.TaxName as TaxName2_35_1_, taxsetupse1_.taxID as taxID5_35_3_, taxsetupse1_.taxSetupID as taxSetup1_36_3_, taxsetupse1_.taxSetupID as taxSetup1_36_0_, taxsetupse1_.Aliquota as Aliquota2_36_0_, taxsetupse1_.SetupName as SetupNam3_36_0_, taxsetupse1_.taxID as taxID5_36_0_, taxsetupse1_.TaxValue as TaxValue4_36_0_ from Tax tax0_ left outer join TaxSetup taxsetupse1_ on tax0_.taxID=taxsetupse1_.taxID where tax0_.taxID=?
  2015-06-09 20:28:58,805 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.Account
  2015-06-09 20:28:58,805 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select accountID from Account where accountID =?
  2015-06-09 20:28:58,805 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select account_.accountID, account_.AccName as AccName2_0_, account_.AccountCategory as AccountC3_0_, account_.AccountType as AccountT4_0_, account_.Balance as Balance5_0_, account_.CreditLimit as CreditLi6_0_, account_.currencyID as currency9_0_, account_.Description as Descript7_0_, account_.fatherAccountID as fatherA10_0_, account_.Open as Open8_0_ from Account account_ where account_.accountID=?
  2015-06-09 20:28:58,805 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into Account (AccName, AccountCategory, AccountType, Balance, CreditLimit, currencyID, Description, fatherAccountID, Open, accountID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
  2015-06-09 20:28:58,805 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update Account set AccName=?, AccountCategory=?, AccountType=?, Balance=?, CreditLimit=?, currencyID=?, Description=?, fatherAccountID=?, Open=? where accountID=?
  2015-06-09 20:28:58,805 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from Account where accountID=?
  2015-06-09 20:28:58,805 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10c8f62]
  2015-06-09 20:28:58,806 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:28:58,806 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:28:58,806 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:28:58,806 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:28:58,806 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:28:58,806 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:28:58,806 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,806 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:28:58,806 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,806 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:28:58,806 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:28:58,806 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:28:58,806 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,806 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:28:58,807 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:28:58,807 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,807 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,807 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:28:58,807 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [NONE]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=?
  2015-06-09 20:28:58,807 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25f7391e]
  2015-06-09 20:28:58,807 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:28:58,807 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:28:58,807 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:28:58,807 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:28:58,807 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [READ]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=?
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab14cb9]
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:28:58,808 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [UPGRADE]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=? for update
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@439a8f59]
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:28:58,809 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [UPGRADE_NOWAIT]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=? for update nowait 
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31024624]
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [UPGRADE_SKIPLOCKED]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=? for update
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32cb636e]
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:28:58,810 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [FORCE]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=? for update nowait 
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40dd3977]
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:28:58,811 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [PESSIMISTIC_READ]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=? for share
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a1d204a]
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,814 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [PESSIMISTIC_WRITE]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=? for update
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b6579e8]
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [PESSIMISTIC_FORCE_INCREMENT]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=? for update nowait 
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c6357f9]
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:28:58,815 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [OPTIMISTIC]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=?
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3954d008]
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:28:58,816 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,818 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,818 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.Account)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountI1_0_0_}

  2015-06-09 20:28:58,818 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.Account [OPTIMISTIC_FORCE_INCREMENT]: select account0_.accountID as accountI1_0_0_, account0_.AccName as AccName2_0_0_, account0_.AccountCategory as AccountC3_0_0_, account0_.AccountType as AccountT4_0_0_, account0_.Balance as Balance5_0_0_, account0_.CreditLimit as CreditLi6_0_0_, account0_.currencyID as currency9_0_0_, account0_.Description as Descript7_0_0_, account0_.fatherAccountID as fatherA10_0_0_, account0_.Open as Open8_0_0_ from Account account0_ where account0_.accountID=?
  2015-06-09 20:28:58,819 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.Account: select account0_.accountID as accountI1_0_1_, account0_.AccName as AccName2_0_1_, account0_.AccountCategory as AccountC3_0_1_, account0_.AccountType as AccountT4_0_1_, account0_.Balance as Balance5_0_1_, account0_.CreditLimit as CreditLi6_0_1_, account0_.currencyID as currency9_0_1_, account0_.Description as Descript7_0_1_, account0_.fatherAccountID as fatherA10_0_1_, account0_.Open as Open8_0_1_, childaccou1_.fatherAccountID as fatherA10_0_3_, childaccou1_.accountID as accountI1_0_3_, childaccou1_.accountID as accountI1_0_0_, childaccou1_.AccName as AccName2_0_0_, childaccou1_.AccountCategory as AccountC3_0_0_, childaccou1_.AccountType as AccountT4_0_0_, childaccou1_.Balance as Balance5_0_0_, childaccou1_.CreditLimit as CreditLi6_0_0_, childaccou1_.currencyID as currency9_0_0_, childaccou1_.Description as Descript7_0_0_, childaccou1_.fatherAccountID as fatherA10_0_0_, childaccou1_.Open as Open8_0_0_ from Account account0_ left outer join Account childaccou1_ on account0_.accountID=childaccou1_.fatherAccountID where account0_.accountID=?
  2015-06-09 20:28:58,820 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.Account: select account0_.accountID as accountI1_0_1_, account0_.AccName as AccName2_0_1_, account0_.AccountCategory as AccountC3_0_1_, account0_.AccountType as AccountT4_0_1_, account0_.Balance as Balance5_0_1_, account0_.CreditLimit as CreditLi6_0_1_, account0_.currencyID as currency9_0_1_, account0_.Description as Descript7_0_1_, account0_.fatherAccountID as fatherA10_0_1_, account0_.Open as Open8_0_1_, childaccou1_.fatherAccountID as fatherA10_0_3_, childaccou1_.accountID as accountI1_0_3_, childaccou1_.accountID as accountI1_0_0_, childaccou1_.AccName as AccName2_0_0_, childaccou1_.AccountCategory as AccountC3_0_0_, childaccou1_.AccountType as AccountT4_0_0_, childaccou1_.Balance as Balance5_0_0_, childaccou1_.CreditLimit as CreditLi6_0_0_, childaccou1_.currencyID as currency9_0_0_, childaccou1_.Description as Descript7_0_0_, childaccou1_.fatherAccountID as fatherA10_0_0_, childaccou1_.Open as Open8_0_0_ from Account account0_ left outer join Account childaccou1_ on account0_.accountID=childaccou1_.fatherAccountID where account0_.accountID=?
  2015-06-09 20:28:58,820 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.marketdata.MarketTrade
  2015-06-09 20:28:58,820 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select marketTradeID from MarketTrade where marketTradeID =?
  2015-06-09 20:28:58,820 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select markettrad_.marketTradeID, markettrad_.buyOrderID as buyOrder5_23_, markettrad_.Price as Price2_23_, markettrad_.sellOrderID as sellOrde6_23_, markettrad_.TradeDateTime as TradeDat3_23_, markettrad_.Volume as Volume4_23_ from MarketTrade markettrad_ where markettrad_.marketTradeID=?
  2015-06-09 20:28:58,820 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into MarketTrade (buyOrderID, Price, sellOrderID, TradeDateTime, Volume, marketTradeID) values (?, ?, ?, ?, ?, ?)
  2015-06-09 20:28:58,820 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update MarketTrade set buyOrderID=?, Price=?, sellOrderID=?, TradeDateTime=?, Volume=? where marketTradeID=?
  2015-06-09 20:28:58,820 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from MarketTrade where marketTradeID=?
  2015-06-09 20:28:58,820 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@593e824f]
  2015-06-09 20:28:58,820 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:28:58,820 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,820 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:28:58,820 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:28:58,820 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,820 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,820 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [NONE]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=?
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d8792db]
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [READ]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=?
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@493dfb8e]
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,821 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [UPGRADE]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=? for update
  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ce5a68e]
  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [UPGRADE_NOWAIT]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=? for update nowait 
  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f162cc0]
  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,822 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,824 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,824 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:28:58,824 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [UPGRADE_SKIPLOCKED]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=? for update
  2015-06-09 20:28:58,824 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c041b41]
  2015-06-09 20:28:58,824 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:28:58,824 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,824 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:28:58,824 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:28:58,824 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,824 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,824 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [FORCE]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=? for update nowait 
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61078690]
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [PESSIMISTIC_READ]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=? for share
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@403132fc]
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,825 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,826 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:28:58,826 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [PESSIMISTIC_WRITE]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=? for update
  2015-06-09 20:28:58,826 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cab9998]
  2015-06-09 20:28:58,826 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:28:58,826 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,826 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:28:58,826 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:28:58,826 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,826 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,826 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,829 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:28:58,829 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [PESSIMISTIC_FORCE_INCREMENT]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=? for update nowait 
  2015-06-09 20:28:58,829 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@669513d8]
  2015-06-09 20:28:58,830 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:28:58,830 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,830 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:28:58,830 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:28:58,830 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,830 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,830 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,830 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:28:58,830 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [OPTIMISTIC]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=?
  2015-06-09 20:28:58,830 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a8a60bc]
  2015-06-09 20:28:58,830 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:28:58,830 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,831 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:28:58,831 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:28:58,831 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,831 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,831 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,831 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.marketdata.MarketTrade)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.marketdata.MarketTrade)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
          - SQL table alias mapping - markettrad0_
          - alias suffix - 0_
          - suffixed key columns - {marketTr1_23_0_}

  2015-06-09 20:28:58,831 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.marketdata.MarketTrade [OPTIMISTIC_FORCE_INCREMENT]: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=?
  2015-06-09 20:28:58,831 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.marketdata.MarketTrade: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=?
  2015-06-09 20:28:58,831 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.marketdata.MarketTrade: select markettrad0_.marketTradeID as marketTr1_23_0_, markettrad0_.buyOrderID as buyOrder5_23_0_, markettrad0_.Price as Price2_23_0_, markettrad0_.sellOrderID as sellOrde6_23_0_, markettrad0_.TradeDateTime as TradeDat3_23_0_, markettrad0_.Volume as Volume4_23_0_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=?
  2015-06-09 20:28:58,831 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.financial.JournalEntry
  2015-06-09 20:28:58,831 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select entryID from JournalEntry where entryID =?
  2015-06-09 20:28:58,832 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select journalent_.entryID, journalent_.Description as Descript2_20_, journalent_.EntryClose as EntryClo3_20_, journalent_.JournalStatus as JournalS5_20_ from JournalEntry journalent_ where journalent_.entryID=?
  2015-06-09 20:28:58,832 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into JournalEntry (Description, EntryClose, EntryDate, JournalStatus, entryID) values (?, ?, ?, ?, ?)
  2015-06-09 20:28:58,832 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update JournalEntry set Description=?, EntryClose=?, JournalStatus=? where entryID=?
  2015-06-09 20:28:58,832 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from JournalEntry where entryID=?
  2015-06-09 20:28:58,832 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7859e786]
  2015-06-09 20:28:58,832 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,832 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:28:58,832 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:28:58,832 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,832 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:28:58,832 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,832 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,832 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:28:58,832 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [NONE]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=?
  2015-06-09 20:28:58,832 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@314b8f2d]
  2015-06-09 20:28:58,833 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,834 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:28:58,834 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:28:58,834 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,834 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:28:58,835 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,835 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,835 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:28:58,835 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [READ]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=?
  2015-06-09 20:28:58,835 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5118388b]
  2015-06-09 20:28:58,836 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,836 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:28:58,836 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:28:58,836 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,836 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:28:58,836 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,836 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,837 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:28:58,837 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [UPGRADE]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=? for update
  2015-06-09 20:28:58,837 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7876d598]
  2015-06-09 20:28:58,837 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,837 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:28:58,837 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:28:58,837 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,837 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:28:58,837 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,837 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,838 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:28:58,838 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [UPGRADE_NOWAIT]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=? for update nowait 
  2015-06-09 20:28:58,839 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5af28b27]
  2015-06-09 20:28:58,839 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,839 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:28:58,839 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:28:58,839 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,839 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:28:58,839 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,839 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,840 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:28:58,840 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [UPGRADE_SKIPLOCKED]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=? for update
  2015-06-09 20:28:58,840 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4985cbcb]
  2015-06-09 20:28:58,840 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,840 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:28:58,840 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:28:58,840 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,840 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:28:58,840 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,841 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,841 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:28:58,841 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [FORCE]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=? for update nowait 
  2015-06-09 20:28:58,841 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9168dc]
  2015-06-09 20:28:58,841 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,841 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:28:58,841 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:28:58,841 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,841 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:28:58,841 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,842 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,843 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:28:58,843 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [PESSIMISTIC_READ]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=? for share
  2015-06-09 20:28:58,843 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@549621f3]
  2015-06-09 20:28:58,843 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,843 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:28:58,843 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:28:58,843 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,843 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:28:58,843 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,843 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,843 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:28:58,843 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [PESSIMISTIC_WRITE]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=? for update
  2015-06-09 20:28:58,849 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32232e55]
  2015-06-09 20:28:58,849 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,849 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:28:58,849 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:28:58,850 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,850 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:28:58,850 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,854 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,866 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:28:58,866 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [PESSIMISTIC_FORCE_INCREMENT]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=? for update nowait 
  2015-06-09 20:28:58,867 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37ebc9d8]
  2015-06-09 20:28:58,867 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,867 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:28:58,867 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:28:58,867 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,867 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:28:58,867 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,867 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,867 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:28:58,867 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [OPTIMISTIC]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=?
  2015-06-09 20:28:58,867 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2416a51]
  2015-06-09 20:28:58,867 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,867 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryClose
  2015-06-09 20:28:58,867 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryDate
  2015-06-09 20:28:58,867 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterSet
  2015-06-09 20:28:58,867 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : journalStatus
  2015-06-09 20:28:58,867 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,868 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,868 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.financial.JournalEntry)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.financial.JournalEntry, querySpaceUid=<gen:0>, path=com.cmm.jft.financial.JournalEntry)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.financial.JournalEntry)
          - SQL table alias mapping - journalent0_
          - alias suffix - 0_
          - suffixed key columns - {entryID1_20_0_}

  2015-06-09 20:28:58,869 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.financial.JournalEntry [OPTIMISTIC_FORCE_INCREMENT]: select journalent0_.entryID as entryID1_20_0_, journalent0_.Description as Descript2_20_0_, journalent0_.EntryClose as EntryClo3_20_0_, journalent0_.EntryDate as EntryDat4_20_0_, journalent0_.JournalStatus as JournalS5_20_0_ from JournalEntry journalent0_ where journalent0_.entryID=?
  2015-06-09 20:28:58,869 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.financial.JournalEntry: select journalent0_.entryID as entryID1_20_1_, journalent0_.Description as Descript2_20_1_, journalent0_.EntryClose as EntryClo3_20_1_, journalent0_.EntryDate as EntryDat4_20_1_, journalent0_.JournalStatus as JournalS5_20_1_, entryregis1_.entryID as entryID10_20_3_, entryregis1_.entryRegisterID as entryReg1_14_3_, entryregis1_.entryRegisterID as entryReg1_14_0_, entryregis1_.Credit as Credit2_14_0_, entryregis1_.creditAccountID as creditAc7_14_0_, entryregis1_.currencyID as currency8_14_0_, entryregis1_.Debit as Debit3_14_0_, entryregis1_.debitAccountID as debitAcc9_14_0_, entryregis1_.Description as Descript4_14_0_, entryregis1_.entryID as entryID10_14_0_, entryregis1_.EntryType as EntryTyp5_14_0_, entryregis1_.OperationID as Operatio6_14_0_ from JournalEntry journalent0_ left outer join EntryRegister entryregis1_ on journalent0_.entryID=entryregis1_.entryID where journalent0_.entryID=?
  2015-06-09 20:28:58,869 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.financial.JournalEntry: select journalent0_.entryID as entryID1_20_1_, journalent0_.Description as Descript2_20_1_, journalent0_.EntryClose as EntryClo3_20_1_, journalent0_.EntryDate as EntryDat4_20_1_, journalent0_.JournalStatus as JournalS5_20_1_, entryregis1_.entryID as entryID10_20_3_, entryregis1_.entryRegisterID as entryReg1_14_3_, entryregis1_.entryRegisterID as entryReg1_14_0_, entryregis1_.Credit as Credit2_14_0_, entryregis1_.creditAccountID as creditAc7_14_0_, entryregis1_.currencyID as currency8_14_0_, entryregis1_.Debit as Debit3_14_0_, entryregis1_.debitAccountID as debitAcc9_14_0_, entryregis1_.Description as Descript4_14_0_, entryregis1_.entryID as entryID10_14_0_, entryregis1_.EntryType as EntryTyp5_14_0_, entryregis1_.OperationID as Operatio6_14_0_ from JournalEntry journalent0_ left outer join EntryRegister entryregis1_ on journalent0_.entryID=entryregis1_.entryID where journalent0_.entryID=?
  2015-06-09 20:28:58,870 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister -> Static SQL for entity: com.cmm.jft.trading.OrderEvent
  2015-06-09 20:28:58,870 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Version select: select orderEventID from OrderEvent where orderEventID =?
  2015-06-09 20:28:58,870 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Snapshot select: select orderevent_.orderEventID, orderevent_.EventDateTime as EventDat2_24_, orderevent_.EventType as EventTyp3_24_, orderevent_.Message as Message4_24_, orderevent_.orderID as orderID5_24_ from OrderEvent orderevent_ where orderevent_.orderEventID=?
  2015-06-09 20:28:58,870 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Insert 0: insert into OrderEvent (EventDateTime, EventType, Message, orderID, orderEventID) values (?, ?, ?, ?, ?)
  2015-06-09 20:28:58,870 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Update 0: update OrderEvent set EventDateTime=?, EventType=?, Message=?, orderID=? where orderEventID=?
  2015-06-09 20:28:58,870 [main] (DEBUG) org.hibernate.persister.entity.AbstractEntityPersister ->  Delete 0: delete from OrderEvent where orderEventID=?
  2015-06-09 20:28:58,870 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e9319f]
  2015-06-09 20:28:58,870 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,870 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,870 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,870 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,870 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,870 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,870 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:28:58,870 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [NONE]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=?
  2015-06-09 20:28:58,870 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bf9b098]
  2015-06-09 20:28:58,870 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [READ]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=?
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77307458]
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [UPGRADE]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=? for update
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@290b1b2e]
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,871 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [UPGRADE_NOWAIT]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=? for update nowait 
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33617539]
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [UPGRADE_SKIPLOCKED]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=? for update
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5db4c359]
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [FORCE]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=? for update nowait 
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18e7143f]
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,872 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,888 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:28:58,888 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [PESSIMISTIC_READ]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=? for share
  2015-06-09 20:28:58,888 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74cec793]
  2015-06-09 20:28:58,888 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,888 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,888 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,888 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,888 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,888 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,888 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:28:58,888 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [PESSIMISTIC_WRITE]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=? for update
  2015-06-09 20:28:58,888 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f8969b0]
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [PESSIMISTIC_FORCE_INCREMENT]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=? for update nowait 
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@192f2f27]
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [OPTIMISTIC]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=?
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c65a5ef]
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,889 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,890 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(entity=com.cmm.jft.trading.OrderEvent)
    - Returns
       - EntityReturnImpl(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:0>, path=com.cmm.jft.trading.OrderEvent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cmm.jft.trading.OrderEvent)
          - SQL table alias mapping - orderevent0_
          - alias suffix - 0_
          - suffixed key columns - {orderEve1_24_0_}

  2015-06-09 20:28:58,890 [main] (DEBUG) org.hibernate.loader.entity.plan.EntityLoader -> Static select for entity com.cmm.jft.trading.OrderEvent [OPTIMISTIC_FORCE_INCREMENT]: select orderevent0_.orderEventID as orderEve1_24_0_, orderevent0_.EventDateTime as EventDat2_24_0_, orderevent0_.EventType as EventTyp3_24_0_, orderevent0_.Message as Message4_24_0_, orderevent0_.orderID as orderID5_24_0_ from OrderEvent orderevent0_ where orderevent0_.orderEventID=?
  2015-06-09 20:28:58,890 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_MERGE on entity com.cmm.jft.trading.OrderEvent: select orderevent0_.orderEventID as orderEve1_24_2_, orderevent0_.EventDateTime as EventDat2_24_2_, orderevent0_.EventType as EventTyp3_24_2_, orderevent0_.Message as Message4_24_2_, orderevent0_.orderID as orderID5_24_2_, orders1_.orderID as orderID1_26_0_, orders1_.AveragePrice as AverageP2_26_0_, orders1_.Comment as Comment3_26_0_, orders1_.Duration as Duration4_26_0_, orders1_.ExecutedVolume as Executed5_26_0_, orders1_.OrderDateTime as OrderDat6_26_0_, orders1_.OrderSerial as OrderSer7_26_0_, orders1_.OrderStatus as OrderSta8_26_0_, orders1_.OrderType as OrderTyp9_26_0_, orders1_.Price as Price10_26_0_, orders1_.securityID as securit15_26_0_, orders1_.Side as Side11_26_0_, orders1_.StopPrice as StopPri12_26_0_, orders1_.TradeType as TradeTy13_26_0_, orders1_.Volume as Volume14_26_0_, executions2_.orderID as orderID5_26_4_, executions2_.orderExecutionID as orderExe1_25_4_, executions2_.orderExecutionID as orderExe1_25_1_, executions2_.ExecutionDateTime as Executio2_25_1_, executions2_.orderID as orderID5_25_1_, executions2_.Price as Price3_25_1_, executions2_.Volume as Volume4_25_1_ from OrderEvent orderevent0_ inner join Orders orders1_ on orderevent0_.orderID=orders1_.orderID left outer join OrderExecution executions2_ on orders1_.orderID=executions2_.orderID where orderevent0_.orderEventID=?
  2015-06-09 20:28:58,890 [main] (DEBUG) org.hibernate.loader.Loader -> Static select for action ACTION_REFRESH on entity com.cmm.jft.trading.OrderEvent: select orderevent0_.orderEventID as orderEve1_24_2_, orderevent0_.EventDateTime as EventDat2_24_2_, orderevent0_.EventType as EventTyp3_24_2_, orderevent0_.Message as Message4_24_2_, orderevent0_.orderID as orderID5_24_2_, orders1_.orderID as orderID1_26_0_, orders1_.AveragePrice as AverageP2_26_0_, orders1_.Comment as Comment3_26_0_, orders1_.Duration as Duration4_26_0_, orders1_.ExecutedVolume as Executed5_26_0_, orders1_.OrderDateTime as OrderDat6_26_0_, orders1_.OrderSerial as OrderSer7_26_0_, orders1_.OrderStatus as OrderSta8_26_0_, orders1_.OrderType as OrderTyp9_26_0_, orders1_.Price as Price10_26_0_, orders1_.securityID as securit15_26_0_, orders1_.Side as Side11_26_0_, orders1_.StopPrice as StopPri12_26_0_, orders1_.TradeType as TradeTy13_26_0_, orders1_.Volume as Volume14_26_0_, executions2_.orderID as orderID5_26_4_, executions2_.orderExecutionID as orderExe1_25_4_, executions2_.orderExecutionID as orderExe1_25_1_, executions2_.ExecutionDateTime as Executio2_25_1_, executions2_.orderID as orderID5_25_1_, executions2_.Price as Price3_25_1_, executions2_.Volume as Volume4_25_1_ from OrderEvent orderevent0_ inner join Orders orders1_ on orderevent0_.orderID=orders1_.orderID left outer join OrderExecution executions2_ on orders1_.orderID=executions2_.orderID where orderevent0_.orderEventID=?
  2015-06-09 20:28:58,916 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b91d8c4]
  2015-06-09 20:28:58,916 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b6166aa]
  2015-06-09 20:28:58,916 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionDateTime
  2015-06-09 20:28:58,916 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,916 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : orderID
  2015-06-09 20:28:58,916 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,916 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,916 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,918 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,919 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.Orders.executionsList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.Orders.executionsList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.Orders.executionsList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.OrderExecution, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.Orders.executionsList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.Orders.executionsList)
          - SQL table alias mapping - executions0_
          - alias suffix - 0_
          - suffixed key columns - {orderID5_26_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - orderExe1_25_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.OrderExecution)
                - SQL table alias mapping - executions0_
                - alias suffix - 1_
                - suffixed key columns - {orderExe1_25_1_}

  2015-06-09 20:28:58,920 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.Orders.executionsList: select executions0_.orderID as orderID5_26_0_, executions0_.orderExecutionID as orderExe1_25_0_, executions0_.orderExecutionID as orderExe1_25_1_, executions0_.ExecutionDateTime as Executio2_25_1_, executions0_.orderID as orderID5_25_1_, executions0_.Price as Price3_25_1_, executions0_.Volume as Volume4_25_1_ from OrderExecution executions0_ where executions0_.orderID=?
  2015-06-09 20:28:58,920 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@791cbf87]
  2015-06-09 20:28:58,920 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7e2d9d]
  2015-06-09 20:28:58,920 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:28:58,920 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:28:58,920 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,920 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,920 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:28:58,920 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:28:58,920 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:28:58,920 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:28:58,920 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : taxSetupID
  2015-06-09 20:28:58,920 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,921 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,921 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.TaxSetup.ruleSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.TaxSetup.ruleSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.TaxSetup.ruleSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.TaxSetup.ruleSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.TaxSetup.ruleSet)
          - SQL table alias mapping - ruleset0_
          - alias suffix - 0_
          - suffixed key columns - {taxSetup9_36_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ruleID1_27_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.Rule)
                - SQL table alias mapping - ruleset0_
                - alias suffix - 1_
                - suffixed key columns - {ruleID1_27_1_}

  2015-06-09 20:28:58,921 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.TaxSetup.ruleSet: select ruleset0_.taxSetupID as taxSetup9_36_0_, ruleset0_.ruleID as ruleID1_27_0_, ruleset0_.ruleID as ruleID1_27_1_, ruleset0_.ApplyTax as ApplyTax2_27_1_, ruleset0_.ApplyValue as ApplyVal3_27_1_, ruleset0_.creditAccountID as creditAc5_27_1_, ruleset0_.debitAccountID as debitAcc6_27_1_, ruleset0_.distributionRuleID as distribu7_27_1_, ruleset0_.Object as Object4_27_1_, ruleset0_.ruleFormulaID as ruleForm8_27_1_, ruleset0_.taxSetupID as taxSetup9_27_1_ from Rule ruleset0_ where ruleset0_.taxSetupID=?
  2015-06-09 20:28:58,921 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@372ea2bc]
  2015-06-09 20:28:58,921 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cc76301]
  2015-06-09 20:28:58,922 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:28:58,922 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,922 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:28:58,922 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : sellOrderID
  2015-06-09 20:28:58,922 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:28:58,922 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,922 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,922 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,922 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.marketdata.MarketOrder.sellTradeList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.marketdata.MarketOrder.sellTradeList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.marketdata.MarketOrder.sellTradeList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.marketdata.MarketOrder.sellTradeList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.marketdata.MarketOrder.sellTradeList)
          - SQL table alias mapping - selltradel0_
          - alias suffix - 0_
          - suffixed key columns - {sellOrde6_22_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marketTr1_23_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
                - SQL table alias mapping - selltradel0_
                - alias suffix - 1_
                - suffixed key columns - {marketTr1_23_1_}

  2015-06-09 20:28:58,922 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.marketdata.MarketOrder.sellTradeList: select selltradel0_.sellOrderID as sellOrde6_22_0_, selltradel0_.marketTradeID as marketTr1_23_0_, selltradel0_.marketTradeID as marketTr1_23_1_, selltradel0_.buyOrderID as buyOrder5_23_1_, selltradel0_.Price as Price2_23_1_, selltradel0_.sellOrderID as sellOrde6_23_1_, selltradel0_.TradeDateTime as TradeDat3_23_1_, selltradel0_.Volume as Volume4_23_1_ from MarketTrade selltradel0_ where selltradel0_.sellOrderID=?
  2015-06-09 20:28:58,922 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7de0c6ae]
  2015-06-09 20:28:58,922 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a486d78]
  2015-06-09 20:28:58,922 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,922 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : companySet
  2015-06-09 20:28:58,923 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:28:58,923 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:28:58,923 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,924 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,924 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Company.segmentSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Company.segmentSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Company.segmentSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Company.segmentSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Company.segmentSet)
          - SQL table alias mapping - segmentset0_
          - alias suffix - 0_
          - suffixed key columns - {companyI1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - segmentI1_32_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.Segment)
                - SQL table alias mapping - segment1_
                - alias suffix - 1_
                - suffixed key columns - {segmentI1_32_1_}

  2015-06-09 20:28:58,924 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Company.segmentSet: select segmentset0_.companyID as companyI1_4_0_, segmentset0_.segmentID as segmentI2_5_0_, segment1_.segmentID as segmentI1_32_1_, segment1_.SegmentName as SegmentN2_32_1_, segment1_.subsectorID as subsecto3_32_1_ from CompanySegment segmentset0_ inner join Segment segment1_ on segmentset0_.segmentID=segment1_.segmentID where segmentset0_.companyID=?
  2015-06-09 20:28:58,924 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21526f6c]
  2015-06-09 20:28:58,924 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49f5c307]
  2015-06-09 20:28:58,925 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositAccount
  2015-06-09 20:28:58,925 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : depositAccount
  2015-06-09 20:28:58,925 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositDate
  2015-06-09 20:28:58,925 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,925 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,925 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,925 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,925 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Account.depositSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Account.depositSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Account.depositSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Deposit, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Account.depositSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Account.depositSet)
          - SQL table alias mapping - depositset0_
          - alias suffix - 0_
          - suffixed key columns - {DepositA5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - depositI1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.Deposit)
                - SQL table alias mapping - depositset0_
                - alias suffix - 1_
                - suffixed key columns - {depositI1_11_1_}

  2015-06-09 20:28:58,925 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Account.depositSet: select depositset0_.DepositAccount as DepositA5_0_0_, depositset0_.depositID as depositI1_11_0_, depositset0_.depositID as depositI1_11_1_, depositset0_.DepositAccount as DepositA5_11_1_, depositset0_.DepositDate as DepositD2_11_1_, depositset0_.Description as Descript3_11_1_, depositset0_.Value as Value4_11_1_ from Deposit depositset0_ where depositset0_.DepositAccount=?
  2015-06-09 20:28:58,925 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66ea1466]
  2015-06-09 20:28:58,925 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1601e47]
  2015-06-09 20:28:58,925 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,925 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,925 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,925 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderID
  2015-06-09 20:28:58,925 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : orderID
  2015-06-09 20:28:58,925 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,926 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,926 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.Orders.eventsList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.Orders.eventsList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.Orders.eventsList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.OrderEvent, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.Orders.eventsList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.Orders.eventsList)
          - SQL table alias mapping - eventslist0_
          - alias suffix - 0_
          - suffixed key columns - {orderID5_26_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - orderEve1_24_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.OrderEvent)
                - SQL table alias mapping - eventslist0_
                - alias suffix - 1_
                - suffixed key columns - {orderEve1_24_1_}

  2015-06-09 20:28:58,926 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.Orders.eventsList: select eventslist0_.orderID as orderID5_26_0_, eventslist0_.orderEventID as orderEve1_24_0_, eventslist0_.orderEventID as orderEve1_24_1_, eventslist0_.EventDateTime as EventDat2_24_1_, eventslist0_.EventType as EventTyp3_24_1_, eventslist0_.Message as Message4_24_1_, eventslist0_.orderID as orderID5_24_1_ from OrderEvent eventslist0_ where eventslist0_.orderID=?
  2015-06-09 20:28:58,926 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50687efb]
  2015-06-09 20:28:58,926 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@517bd097]
  2015-06-09 20:28:58,926 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : cnpj
  2015-06-09 20:28:58,926 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyDate
  2015-06-09 20:28:58,926 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyName
  2015-06-09 20:28:58,926 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketName
  2015-06-09 20:28:58,926 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : onShares
  2015-06-09 20:28:58,926 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : pnShares
  2015-06-09 20:28:58,926 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,926 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : segmentSet
  2015-06-09 20:28:58,926 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,926 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stockExchangeID
  2015-06-09 20:28:58,926 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Segment.companySet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Segment.companySet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Segment.companySet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.securities.Company, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Segment.companySet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Segment.companySet)
          - SQL table alias mapping - companyset0_
          - alias suffix - 0_
          - suffixed key columns - {segmentI2_32_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - companyI1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.Company)
                - SQL table alias mapping - company1_
                - alias suffix - 1_
                - suffixed key columns - {companyI1_4_1_}

  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Segment.companySet: select companyset0_.segmentID as segmentI2_32_0_, companyset0_.companyID as companyI1_5_0_, company1_.companyID as companyI1_4_1_, company1_.CNPJ as CNPJ2_4_1_, company1_.CompanyDate as CompanyD3_4_1_, company1_.CompanyName as CompanyN4_4_1_, company1_.MarketName as MarketNa5_4_1_, company1_.OnShares as OnShares6_4_1_, company1_.PnShares as PnShares7_4_1_, company1_.Status as Status8_4_1_, company1_.stockExchangeID as stockExc9_4_1_ from CompanySegment companyset0_ inner join Company company1_ on companyset0_.companyID=company1_.companyID where companyset0_.segmentID=?
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5990e6c5]
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56e07a08]
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : currencyID
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:28:58,927 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,928 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:28:58,928 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:28:58,928 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,928 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,928 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Currency.accountSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Currency.accountSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Currency.accountSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Currency.accountSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Currency.accountSet)
          - SQL table alias mapping - accountset0_
          - alias suffix - 0_
          - suffixed key columns - {currency9_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - accountI1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.Account)
                - SQL table alias mapping - accountset0_
                - alias suffix - 1_
                - suffixed key columns - {accountI1_0_1_}

  2015-06-09 20:28:58,928 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Currency.accountSet: select accountset0_.currencyID as currency9_9_0_, accountset0_.accountID as accountI1_0_0_, accountset0_.accountID as accountI1_0_1_, accountset0_.AccName as AccName2_0_1_, accountset0_.AccountCategory as AccountC3_0_1_, accountset0_.AccountType as AccountT4_0_1_, accountset0_.Balance as Balance5_0_1_, accountset0_.CreditLimit as CreditLi6_0_1_, accountset0_.currencyID as currency9_0_1_, accountset0_.Description as Descript7_0_1_, accountset0_.fatherAccountID as fatherA10_0_1_, accountset0_.Open as Open8_0_1_ from Account accountset0_ where accountset0_.currencyID=?
  2015-06-09 20:28:58,928 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47289387]
  2015-06-09 20:28:58,929 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12cd9150]
  2015-06-09 20:28:58,929 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : aliquota
  2015-06-09 20:28:58,929 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleSet
  2015-06-09 20:28:58,929 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : setupName
  2015-06-09 20:28:58,929 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxID
  2015-06-09 20:28:58,929 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : taxID
  2015-06-09 20:28:58,929 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxValue
  2015-06-09 20:28:58,929 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,929 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,929 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Tax.taxSetupSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Tax.taxSetupSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Tax.taxSetupSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.TaxSetup, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Tax.taxSetupSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Tax.taxSetupSet)
          - SQL table alias mapping - taxsetupse0_
          - alias suffix - 0_
          - suffixed key columns - {taxID5_35_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - taxSetup1_36_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.TaxSetup)
                - SQL table alias mapping - taxsetupse0_
                - alias suffix - 1_
                - suffixed key columns - {taxSetup1_36_1_}

  2015-06-09 20:28:58,929 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Tax.taxSetupSet: select taxsetupse0_.taxID as taxID5_35_0_, taxsetupse0_.taxSetupID as taxSetup1_36_0_, taxsetupse0_.taxSetupID as taxSetup1_36_1_, taxsetupse0_.Aliquota as Aliquota2_36_1_, taxsetupse0_.SetupName as SetupNam3_36_1_, taxsetupse0_.taxID as taxID5_36_1_, taxsetupse0_.TaxValue as TaxValue4_36_1_ from TaxSetup taxsetupse0_ where taxsetupse0_.taxID=?
  2015-06-09 20:28:58,929 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cf65451]
  2015-06-09 20:28:58,929 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@724f138e]
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : debitAccountID
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Account.entryRegisterDbtSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Account.entryRegisterDbtSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Account.entryRegisterDbtSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Account.entryRegisterDbtSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Account.entryRegisterDbtSet)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {debitAcc9_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - entryReg1_14_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.EntryRegister)
                - SQL table alias mapping - entryregis0_
                - alias suffix - 1_
                - suffixed key columns - {entryReg1_14_1_}

  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Account.entryRegisterDbtSet: select entryregis0_.debitAccountID as debitAcc9_0_0_, entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.entryRegisterID as entryReg1_14_1_, entryregis0_.Credit as Credit2_14_1_, entryregis0_.creditAccountID as creditAc7_14_1_, entryregis0_.currencyID as currency8_14_1_, entryregis0_.Debit as Debit3_14_1_, entryregis0_.debitAccountID as debitAcc9_14_1_, entryregis0_.Description as Descript4_14_1_, entryregis0_.entryID as entryID10_14_1_, entryregis0_.EntryType as EntryTyp5_14_1_, entryregis0_.OperationID as Operatio6_14_1_ from EntryRegister entryregis0_ where entryregis0_.debitAccountID=?
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c9413d8]
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64da2a7]
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : creditAccountID
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:28:58,930 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Account.entryRegisterCrdtSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Account.entryRegisterCrdtSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Account.entryRegisterCrdtSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Account.entryRegisterCrdtSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Account.entryRegisterCrdtSet)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {creditAc7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - entryReg1_14_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.EntryRegister)
                - SQL table alias mapping - entryregis0_
                - alias suffix - 1_
                - suffixed key columns - {entryReg1_14_1_}

  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Account.entryRegisterCrdtSet: select entryregis0_.creditAccountID as creditAc7_0_0_, entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.entryRegisterID as entryReg1_14_1_, entryregis0_.Credit as Credit2_14_1_, entryregis0_.creditAccountID as creditAc7_14_1_, entryregis0_.currencyID as currency8_14_1_, entryregis0_.Debit as Debit3_14_1_, entryregis0_.debitAccountID as debitAcc9_14_1_, entryregis0_.Description as Descript4_14_1_, entryregis0_.entryID as entryID10_14_1_, entryregis0_.EntryType as EntryTyp5_14_1_, entryregis0_.OperationID as Operatio6_14_1_ from EntryRegister entryregis0_ where entryregis0_.creditAccountID=?
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c715e84]
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47428937]
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accName
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountCategory
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : accountType
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : balance
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : childAccounts
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : childAccounts
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditLimit
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : depositSet
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterCrdtSet
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryRegisterDbtSet
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : fatherAccountID
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : fatherAccountID
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleCrdtAccSet
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleDbtAccSet
  2015-06-09 20:28:58,931 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,932 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,932 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Account.childAccounts)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Account.childAccounts, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Account.childAccounts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Account, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Account.childAccounts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Account.childAccounts)
          - SQL table alias mapping - childaccou0_
          - alias suffix - 0_
          - suffixed key columns - {fatherA10_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - accountI1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.Account)
                - SQL table alias mapping - childaccou0_
                - alias suffix - 1_
                - suffixed key columns - {accountI1_0_1_}

  2015-06-09 20:28:58,932 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Account.childAccounts: select childaccou0_.fatherAccountID as fatherA10_0_0_, childaccou0_.accountID as accountI1_0_0_, childaccou0_.accountID as accountI1_0_1_, childaccou0_.AccName as AccName2_0_1_, childaccou0_.AccountCategory as AccountC3_0_1_, childaccou0_.AccountType as AccountT4_0_1_, childaccou0_.Balance as Balance5_0_1_, childaccou0_.CreditLimit as CreditLi6_0_1_, childaccou0_.currencyID as currency9_0_1_, childaccou0_.Description as Descript7_0_1_, childaccou0_.fatherAccountID as fatherA10_0_1_, childaccou0_.Open as Open8_0_1_ from Account childaccou0_ where childaccou0_.fatherAccountID=?
  2015-06-09 20:28:58,932 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21694e53]
  2015-06-09 20:28:58,932 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72b16078]
  2015-06-09 20:28:58,932 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventDateTime
  2015-06-09 20:28:58,932 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventType
  2015-06-09 20:28:58,932 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketOrderID
  2015-06-09 20:28:58,932 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : message
  2015-06-09 20:28:58,932 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,932 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,933 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.marketdata.MarketOrder.eventsList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.marketdata.MarketOrder.eventsList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.marketdata.MarketOrder.eventsList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.marketdata.MarketEvent, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.marketdata.MarketOrder.eventsList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.marketdata.MarketOrder.eventsList)
          - SQL table alias mapping - eventslist0_
          - alias suffix - 0_
          - suffixed key columns - {marketEv1_22_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marketEv1_21_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.marketdata.MarketEvent)
                - SQL table alias mapping - eventslist0_
                - alias suffix - 1_
                - suffixed key columns - {marketEv1_21_1_}

  2015-06-09 20:28:58,933 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.marketdata.MarketOrder.eventsList: select eventslist0_.marketEventID as marketEv1_22_0_, eventslist0_.marketEventID as marketEv1_21_0_, eventslist0_.marketEventID as marketEv1_21_1_, eventslist0_.EventDateTime as EventDat2_21_1_, eventslist0_.EventType as EventTyp3_21_1_, eventslist0_.marketOrderID as marketOr5_21_1_, eventslist0_.Message as Message4_21_1_ from MarketEvent eventslist0_ where eventslist0_.marketEventID=?
  2015-06-09 20:28:58,933 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b0a7baf]
  2015-06-09 20:28:58,933 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62417a16]
  2015-06-09 20:28:58,933 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:28:58,933 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:28:58,933 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,933 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : creditAccountID
  2015-06-09 20:28:58,933 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,933 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:28:58,933 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:28:58,933 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:28:58,933 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:28:58,933 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,933 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,933 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Account.ruleCrdtAccSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Account.ruleCrdtAccSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Account.ruleCrdtAccSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Account.ruleCrdtAccSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Account.ruleCrdtAccSet)
          - SQL table alias mapping - rulecrdtac0_
          - alias suffix - 0_
          - suffixed key columns - {creditAc5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ruleID1_27_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.Rule)
                - SQL table alias mapping - rulecrdtac0_
                - alias suffix - 1_
                - suffixed key columns - {ruleID1_27_1_}

  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Account.ruleCrdtAccSet: select rulecrdtac0_.creditAccountID as creditAc5_0_0_, rulecrdtac0_.ruleID as ruleID1_27_0_, rulecrdtac0_.ruleID as ruleID1_27_1_, rulecrdtac0_.ApplyTax as ApplyTax2_27_1_, rulecrdtac0_.ApplyValue as ApplyVal3_27_1_, rulecrdtac0_.creditAccountID as creditAc5_27_1_, rulecrdtac0_.debitAccountID as debitAcc6_27_1_, rulecrdtac0_.distributionRuleID as distribu7_27_1_, rulecrdtac0_.Object as Object4_27_1_, rulecrdtac0_.ruleFormulaID as ruleForm8_27_1_, rulecrdtac0_.taxSetupID as taxSetup9_27_1_ from Rule rulecrdtac0_ where rulecrdtac0_.creditAccountID=?
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ea1bcdc]
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759fad4]
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : currencyID
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : value
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Currency.currencyQuoteSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Currency.currencyQuoteSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Currency.currencyQuoteSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.CurrencyQuote, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Currency.currencyQuoteSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Currency.currencyQuoteSet)
          - SQL table alias mapping - currencyqu0_
          - alias suffix - 0_
          - suffixed key columns - {currency4_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - currency1_10_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.CurrencyQuote)
                - SQL table alias mapping - currencyqu0_
                - alias suffix - 1_
                - suffixed key columns - {currency1_10_1_}

  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Currency.currencyQuoteSet: select currencyqu0_.currencyID as currency4_9_0_, currencyqu0_.currencyQuoteID as currency1_10_0_, currencyqu0_.currencyQuoteID as currency1_10_1_, currencyqu0_.currencyID as currency4_10_1_, currencyqu0_.QDateTime as QDateTim2_10_1_, currencyqu0_.Value as Value3_10_1_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyID=?
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30ed9c6c]
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@782a4fff]
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : entryID
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:28:58,934 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,935 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,935 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.JournalEntry.entryRegisterSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.JournalEntry.entryRegisterSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.JournalEntry.entryRegisterSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.JournalEntry.entryRegisterSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.JournalEntry.entryRegisterSet)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {entryID10_20_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - entryReg1_14_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.EntryRegister)
                - SQL table alias mapping - entryregis0_
                - alias suffix - 1_
                - suffixed key columns - {entryReg1_14_1_}

  2015-06-09 20:28:58,935 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.JournalEntry.entryRegisterSet: select entryregis0_.entryID as entryID10_20_0_, entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.entryRegisterID as entryReg1_14_1_, entryregis0_.Credit as Credit2_14_1_, entryregis0_.creditAccountID as creditAc7_14_1_, entryregis0_.currencyID as currency8_14_1_, entryregis0_.Debit as Debit3_14_1_, entryregis0_.debitAccountID as debitAcc9_14_1_, entryregis0_.Description as Descript4_14_1_, entryregis0_.entryID as entryID10_14_1_, entryregis0_.EntryType as EntryTyp5_14_1_, entryregis0_.OperationID as Operatio6_14_1_ from EntryRegister entryregis0_ where entryregis0_.entryID=?
  2015-06-09 20:28:58,935 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ae81e1]
  2015-06-09 20:28:58,935 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fd1731c]
  2015-06-09 20:28:58,935 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyOrderID
  2015-06-09 20:28:58,935 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : buyOrderID
  2015-06-09 20:28:58,935 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,935 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellOrderID
  2015-06-09 20:28:58,935 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeDateTime
  2015-06-09 20:28:58,935 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,935 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,935 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,935 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.marketdata.MarketOrder.buyTradeList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.marketdata.MarketOrder.buyTradeList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.marketdata.MarketOrder.buyTradeList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.marketdata.MarketTrade, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.marketdata.MarketOrder.buyTradeList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.marketdata.MarketOrder.buyTradeList)
          - SQL table alias mapping - buytradeli0_
          - alias suffix - 0_
          - suffixed key columns - {buyOrder5_22_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marketTr1_23_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.marketdata.MarketTrade)
                - SQL table alias mapping - buytradeli0_
                - alias suffix - 1_
                - suffixed key columns - {marketTr1_23_1_}

  2015-06-09 20:28:58,935 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.marketdata.MarketOrder.buyTradeList: select buytradeli0_.buyOrderID as buyOrder5_22_0_, buytradeli0_.marketTradeID as marketTr1_23_0_, buytradeli0_.marketTradeID as marketTr1_23_1_, buytradeli0_.buyOrderID as buyOrder5_23_1_, buytradeli0_.Price as Price2_23_1_, buytradeli0_.sellOrderID as sellOrde6_23_1_, buytradeli0_.TradeDateTime as TradeDat3_23_1_, buytradeli0_.Volume as Volume4_23_1_ from MarketTrade buytradeli0_ where buytradeli0_.buyOrderID=?
  2015-06-09 20:28:58,936 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1133ec6e]
  2015-06-09 20:28:58,936 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@355e34c7]
  2015-06-09 20:28:58,936 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:28:58,936 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:28:58,936 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,936 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,936 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:28:58,936 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:28:58,936 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:28:58,936 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : ruleFormulaID
  2015-06-09 20:28:58,936 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:28:58,936 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,936 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,937 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.RuleFormula.ruleSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.RuleFormula.ruleSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.RuleFormula.ruleSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.RuleFormula.ruleSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.RuleFormula.ruleSet)
          - SQL table alias mapping - ruleset0_
          - alias suffix - 0_
          - suffixed key columns - {ruleForm8_28_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ruleID1_27_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.Rule)
                - SQL table alias mapping - ruleset0_
                - alias suffix - 1_
                - suffixed key columns - {ruleID1_27_1_}

  2015-06-09 20:28:58,937 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.RuleFormula.ruleSet: select ruleset0_.ruleFormulaID as ruleForm8_28_0_, ruleset0_.ruleID as ruleID1_27_0_, ruleset0_.ruleID as ruleID1_27_1_, ruleset0_.ApplyTax as ApplyTax2_27_1_, ruleset0_.ApplyValue as ApplyVal3_27_1_, ruleset0_.creditAccountID as creditAc5_27_1_, ruleset0_.debitAccountID as debitAcc6_27_1_, ruleset0_.distributionRuleID as distribu7_27_1_, ruleset0_.Object as Object4_27_1_, ruleset0_.ruleFormulaID as ruleForm8_27_1_, ruleset0_.taxSetupID as taxSetup9_27_1_ from Rule ruleset0_ where ruleset0_.ruleFormulaID=?
  2015-06-09 20:28:58,937 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24f360b2]
  2015-06-09 20:28:58,937 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60cf80e7]
  2015-06-09 20:28:58,937 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,937 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : brokerID
  2015-06-09 20:28:58,937 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,937 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commissionList
  2015-06-09 20:28:58,937 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeTaxList
  2015-06-09 20:28:58,937 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,937 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,937 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,937 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.account.Broker.brokerageList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.account.Broker.brokerageList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.account.Broker.brokerageList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.account.Brokerage, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.account.Broker.brokerageList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.account.Broker.brokerageList)
          - SQL table alias mapping - brokeragel0_
          - alias suffix - 0_
          - suffixed key columns - {brokerID4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - brokerag1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.account.Brokerage)
                - SQL table alias mapping - brokeragel0_
                - alias suffix - 1_
                - suffixed key columns - {brokerag1_2_1_}

  2015-06-09 20:28:58,937 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.account.Broker.brokerageList: select brokeragel0_.brokerID as brokerID4_1_0_, brokeragel0_.brokerageID as brokerag1_2_0_, brokeragel0_.brokerageID as brokerag1_2_1_, brokeragel0_.brokerID as brokerID4_2_1_, brokeragel0_.Category as Category2_2_1_, brokeragel0_.TradeType as TradeTyp3_2_1_ from Brokerage brokeragel0_ where brokeragel0_.brokerID=?
  2015-06-09 20:28:58,937 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48c40605]
  2015-06-09 20:28:58,937 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54107f42]
  2015-06-09 20:28:58,938 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,938 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : brokerageID
  2015-06-09 20:28:58,938 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,938 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tax
  2015-06-09 20:28:58,938 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxName
  2015-06-09 20:28:58,938 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,938 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,938 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.account.Brokerage.exchangeTaxList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.account.Brokerage.exchangeTaxList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.account.Brokerage.exchangeTaxList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.account.ExchangeTax, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.account.Brokerage.exchangeTaxList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.account.Brokerage.exchangeTaxList)
          - SQL table alias mapping - exchangeta0_
          - alias suffix - 0_
          - suffixed key columns - {brokerag5_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - exchange1_15_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.account.ExchangeTax)
                - SQL table alias mapping - exchangeta0_
                - alias suffix - 1_
                - suffixed key columns - {exchange1_15_1_}

  2015-06-09 20:28:58,938 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.account.Brokerage.exchangeTaxList: select exchangeta0_.brokerageID as brokerag5_2_0_, exchangeta0_.exchangeTaxID as exchange1_15_0_, exchangeta0_.exchangeTaxID as exchange1_15_1_, exchangeta0_.brokerageID as brokerag5_15_1_, exchangeta0_.CalcType as CalcType2_15_1_, exchangeta0_.Tax as Tax3_15_1_, exchangeta0_.TaxName as TaxName4_15_1_ from ExchangeTax exchangeta0_ where exchangeta0_.brokerageID=?
  2015-06-09 20:28:58,938 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6cea706c]
  2015-06-09 20:28:58,939 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bd7f8dc]
  2015-06-09 20:28:58,939 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,939 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : countryID
  2015-06-09 20:28:58,939 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : countryID
  2015-06-09 20:28:58,939 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exchangeName
  2015-06-09 20:28:58,939 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,940 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,940 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Country.exchangesList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Country.exchangesList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Country.exchangesList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.securities.StockExchange, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Country.exchangesList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Country.exchangesList)
          - SQL table alias mapping - exchangesl0_
          - alias suffix - 0_
          - suffixed key columns - {countryI3_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - stockExc1_33_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.StockExchange)
                - SQL table alias mapping - exchangesl0_
                - alias suffix - 1_
                - suffixed key columns - {stockExc1_33_1_}

  2015-06-09 20:28:58,940 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Country.exchangesList: select exchangesl0_.countryID as countryI3_8_0_, exchangesl0_.stockExchangeID as stockExc1_33_0_, exchangesl0_.stockExchangeID as stockExc1_33_1_, exchangesl0_.countryID as countryI3_33_1_, exchangesl0_.ExchangeName as Exchange2_33_1_ from StockExchange exchangesl0_ where exchangesl0_.countryID=?
  2015-06-09 20:28:58,940 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21ec5d87]
  2015-06-09 20:28:58,941 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25f9407e]
  2015-06-09 20:28:58,941 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : cnpj
  2015-06-09 20:28:58,941 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyDate
  2015-06-09 20:28:58,941 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companyName
  2015-06-09 20:28:58,941 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : marketName
  2015-06-09 20:28:58,941 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : onShares
  2015-06-09 20:28:58,941 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : pnShares
  2015-06-09 20:28:58,941 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,941 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : status
  2015-06-09 20:28:58,941 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stockExchangeID
  2015-06-09 20:28:58,941 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : stockExchangeID
  2015-06-09 20:28:58,941 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,941 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.StockExchange.companySet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.StockExchange.companySet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.StockExchange.companySet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.securities.Company, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.StockExchange.companySet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.StockExchange.companySet)
          - SQL table alias mapping - companyset0_
          - alias suffix - 0_
          - suffixed key columns - {stockExc9_33_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - companyI1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.Company)
                - SQL table alias mapping - companyset0_
                - alias suffix - 1_
                - suffixed key columns - {companyI1_4_1_}

  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.StockExchange.companySet: select companyset0_.stockExchangeID as stockExc9_33_0_, companyset0_.companyID as companyI1_4_0_, companyset0_.companyID as companyI1_4_1_, companyset0_.CNPJ as CNPJ2_4_1_, companyset0_.CompanyDate as CompanyD3_4_1_, companyset0_.CompanyName as CompanyN4_4_1_, companyset0_.MarketName as MarketNa5_4_1_, companyset0_.OnShares as OnShares6_4_1_, companyset0_.PnShares as PnShares7_4_1_, companyset0_.Status as Status8_4_1_, companyset0_.stockExchangeID as stockExc9_4_1_ from Company companyset0_ where companyset0_.stockExchangeID=?
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59aa20b3]
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@363f6148]
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : adjClose
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ask
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : avgPrice
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : bid
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : close
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : high
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : low
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : open
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : qDateTime
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : securityID
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedQuantity
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradedUnits
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,942 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Security.historicalQuoteSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Security.historicalQuoteSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Security.historicalQuoteSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.marketdata.HistoricalQuote, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Security.historicalQuoteSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Security.historicalQuoteSet)
          - SQL table alias mapping - historical0_
          - alias suffix - 0_
          - suffixed key columns - {securit15_30_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - historic1_16_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.marketdata.HistoricalQuote)
                - SQL table alias mapping - historical0_
                - alias suffix - 1_
                - suffixed key columns - {historic1_16_1_}

  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Security.historicalQuoteSet: select historical0_.securityID as securit15_30_0_, historical0_.historicalQuoteID as historic1_16_0_, historical0_.historicalQuoteID as historic1_16_1_, historical0_.AdjClose as AdjClose2_16_1_, historical0_.Ask as Ask3_16_1_, historical0_.AvgPrice as AvgPrice4_16_1_, historical0_.Bid as Bid5_16_1_, historical0_.Close as Close6_16_1_, historical0_.High as High7_16_1_, historical0_.Low as Low8_16_1_, historical0_.Open as Open9_16_1_, historical0_.QDateTime as QDateTi10_16_1_, historical0_.QuoteFactor as QuoteFa11_16_1_, historical0_.securityID as securit15_16_1_, historical0_.TradedQuantity as TradedQ12_16_1_, historical0_.TradedUnits as TradedU13_16_1_, historical0_.Volume as Volume14_16_1_ from HistoricalQuote historical0_ where historical0_.securityID=? order by historical0_.QDateTime
  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@138fe6ec]
  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e77f0f4]
  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyTradeList
  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : externalID
  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : securityID
  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellTradeList
  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,943 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,946 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,947 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Security.marketOrderSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Security.marketOrderSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Security.marketOrderSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.marketdata.MarketOrder, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Security.marketOrderSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Security.marketOrderSet)
          - SQL table alias mapping - marketorde0_
          - alias suffix - 0_
          - suffixed key columns - {securit10_30_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marketOr1_22_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.marketdata.MarketOrder)
                - SQL table alias mapping - marketorde0_
                - alias suffix - 1_
                - suffixed key columns - {marketOr1_22_1_}

  2015-06-09 20:28:58,947 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Security.marketOrderSet: select marketorde0_.securityID as securit10_30_0_, marketorde0_.marketOrderID as marketOr1_22_0_, marketorde0_.marketOrderID as marketOr1_22_1_, marketorde0_.brokerID as brokerID9_22_1_, marketorde0_.ExpirationDate as Expirati2_22_1_, marketorde0_.ExternalID as External3_22_1_, marketorde0_.OrderDateTime as OrderDat4_22_1_, marketorde0_.OrderStatus as OrderSta5_22_1_, marketorde0_.Price as Price6_22_1_, marketorde0_.securityID as securit10_22_1_, marketorde0_.Side as Side7_22_1_, marketorde0_.Volume as Volume8_22_1_ from MarketOrder marketorde0_ where marketorde0_.securityID=?
  2015-06-09 20:28:58,947 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@29876704]
  2015-06-09 20:28:58,947 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4816c290]
  2015-06-09 20:28:58,947 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexDate
  2015-06-09 20:28:58,947 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : indexID
  2015-06-09 20:28:58,947 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : indexID
  2015-06-09 20:28:58,947 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,947 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,947 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Index.indexCompositionSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Index.indexCompositionSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Index.indexCompositionSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.securities.IndexComposition, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Index.indexCompositionSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Index.indexCompositionSet)
          - SQL table alias mapping - indexcompo0_
          - alias suffix - 0_
          - suffixed key columns - {indexID3_17_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - indexCom1_18_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.IndexComposition)
                - SQL table alias mapping - indexcompo0_
                - alias suffix - 1_
                - suffixed key columns - {indexCom1_18_1_}

  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Index.indexCompositionSet: select indexcompo0_.indexID as indexID3_17_0_, indexcompo0_.indexCompID as indexCom1_18_0_, indexcompo0_.indexCompID as indexCom1_18_1_, indexcompo0_.IndexDate as IndexDat2_18_1_, indexcompo0_.indexID as indexID3_18_1_, indexcompo0_.securityID as security4_18_1_ from IndexComposition indexcompo0_ where indexcompo0_.indexID=?
  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4efcf8a]
  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a138fc5]
  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : credit
  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : currencyID
  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debit
  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : description
  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryID
  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : entryType
  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : operationID
  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Currency.entryRegisterSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Currency.entryRegisterSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Currency.entryRegisterSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.EntryRegister, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Currency.entryRegisterSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Currency.entryRegisterSet)
          - SQL table alias mapping - entryregis0_
          - alias suffix - 0_
          - suffixed key columns - {currency8_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - entryReg1_14_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.EntryRegister)
                - SQL table alias mapping - entryregis0_
                - alias suffix - 1_
                - suffixed key columns - {entryReg1_14_1_}

  2015-06-09 20:28:58,948 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Currency.entryRegisterSet: select entryregis0_.currencyID as currency8_9_0_, entryregis0_.entryRegisterID as entryReg1_14_0_, entryregis0_.entryRegisterID as entryReg1_14_1_, entryregis0_.Credit as Credit2_14_1_, entryregis0_.creditAccountID as creditAc7_14_1_, entryregis0_.currencyID as currency8_14_1_, entryregis0_.Debit as Debit3_14_1_, entryregis0_.debitAccountID as debitAcc9_14_1_, entryregis0_.Description as Descript4_14_1_, entryregis0_.entryID as entryID10_14_1_, entryregis0_.EntryType as EntryTyp5_14_1_, entryregis0_.OperationID as Operatio6_14_1_ from EntryRegister entryregis0_ where entryregis0_.currencyID=?
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a9e6faf]
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c95ac9e]
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : averagePrice
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : comment
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : duration
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executedVolume
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : executionsList
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderSerial
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderType
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : securityID
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : stopPrice
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : tradeType
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,949 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,950 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Security.ordersSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Security.ordersSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Security.ordersSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.Orders, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Security.ordersSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Security.ordersSet)
          - SQL table alias mapping - ordersset0_
          - alias suffix - 0_
          - suffixed key columns - {securit15_30_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - orderID1_26_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.Orders)
                - SQL table alias mapping - ordersset0_
                - alias suffix - 1_
                - suffixed key columns - {orderID1_26_1_}

  2015-06-09 20:28:58,950 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Security.ordersSet: select ordersset0_.securityID as securit15_30_0_, ordersset0_.orderID as orderID1_26_0_, ordersset0_.orderID as orderID1_26_1_, ordersset0_.AveragePrice as AverageP2_26_1_, ordersset0_.Comment as Comment3_26_1_, ordersset0_.Duration as Duration4_26_1_, ordersset0_.ExecutedVolume as Executed5_26_1_, ordersset0_.OrderDateTime as OrderDat6_26_1_, ordersset0_.OrderSerial as OrderSer7_26_1_, ordersset0_.OrderStatus as OrderSta8_26_1_, ordersset0_.OrderType as OrderTyp9_26_1_, ordersset0_.Price as Price10_26_1_, ordersset0_.securityID as securit15_26_1_, ordersset0_.Side as Side11_26_1_, ordersset0_.StopPrice as StopPri12_26_1_, ordersset0_.TradeType as TradeTy13_26_1_, ordersset0_.Volume as Volume14_26_1_ from Orders ordersset0_ where ordersset0_.securityID=?
  2015-06-09 20:28:58,950 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cc586a8]
  2015-06-09 20:28:58,950 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7db534f2]
  2015-06-09 20:28:58,950 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerageID
  2015-06-09 20:28:58,950 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : brokerageID
  2015-06-09 20:28:58,950 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : calcType
  2015-06-09 20:28:58,950 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : commValue
  2015-06-09 20:28:58,950 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMax
  2015-06-09 20:28:58,950 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : valueMin
  2015-06-09 20:28:58,950 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,950 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.account.Brokerage.commissionList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.account.Brokerage.commissionList, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.account.Brokerage.commissionList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.account.Commission, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.account.Brokerage.commissionList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.account.Brokerage.commissionList)
          - SQL table alias mapping - commission0_
          - alias suffix - 0_
          - suffixed key columns - {brokerag6_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - commissi1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.account.Commission)
                - SQL table alias mapping - commission0_
                - alias suffix - 1_
                - suffixed key columns - {commissi1_3_1_}

  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.account.Brokerage.commissionList: select commission0_.brokerageID as brokerag6_2_0_, commission0_.commissionID as commissi1_3_0_, commission0_.commissionID as commissi1_3_1_, commission0_.brokerageID as brokerag6_3_1_, commission0_.CalcTypes as CalcType2_3_1_, commission0_.CommValue as CommValu3_3_1_, commission0_.ValueMax as ValueMax4_3_1_, commission0_.ValueMin as ValueMin5_3_1_ from Commission commission0_ where commission0_.brokerageID=?
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a76b80a]
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7eb01b12]
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : brokerID
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : brokerID
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : buyTradeList
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : eventsList
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : externalID
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderDateTime
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : orderStatus
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : price
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sellTradeList
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : side
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : volume
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,951 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,952 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.account.Broker.marketOrderSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.account.Broker.marketOrderSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.account.Broker.marketOrderSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.marketdata.MarketOrder, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.account.Broker.marketOrderSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.account.Broker.marketOrderSet)
          - SQL table alias mapping - marketorde0_
          - alias suffix - 0_
          - suffixed key columns - {brokerID9_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - marketOr1_22_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.marketdata.MarketOrder)
                - SQL table alias mapping - marketorde0_
                - alias suffix - 1_
                - suffixed key columns - {marketOr1_22_1_}

  2015-06-09 20:28:58,952 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.account.Broker.marketOrderSet: select marketorde0_.brokerID as brokerID9_1_0_, marketorde0_.marketOrderID as marketOr1_22_0_, marketorde0_.marketOrderID as marketOr1_22_1_, marketorde0_.brokerID as brokerID9_22_1_, marketorde0_.ExpirationDate as Expirati2_22_1_, marketorde0_.ExternalID as External3_22_1_, marketorde0_.OrderDateTime as OrderDat4_22_1_, marketorde0_.OrderStatus as OrderSta5_22_1_, marketorde0_.Price as Price6_22_1_, marketorde0_.securityID as securit10_22_1_, marketorde0_.Side as Side7_22_1_, marketorde0_.Volume as Volume8_22_1_ from MarketOrder marketorde0_ where marketorde0_.brokerID=?
  2015-06-09 20:28:58,952 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e70bd39]
  2015-06-09 20:28:58,952 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e6516e]
  2015-06-09 20:28:58,952 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:28:58,952 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:28:58,952 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,952 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,952 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : debitAccountID
  2015-06-09 20:28:58,952 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:28:58,952 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:28:58,952 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:28:58,952 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:28:58,952 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,952 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,953 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Account.ruleDbtAccSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Account.ruleDbtAccSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Account.ruleDbtAccSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Account.ruleDbtAccSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Account.ruleDbtAccSet)
          - SQL table alias mapping - ruledbtacc0_
          - alias suffix - 0_
          - suffixed key columns - {debitAcc6_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ruleID1_27_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.Rule)
                - SQL table alias mapping - ruledbtacc0_
                - alias suffix - 1_
                - suffixed key columns - {ruleID1_27_1_}

  2015-06-09 20:28:58,953 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Account.ruleDbtAccSet: select ruledbtacc0_.debitAccountID as debitAcc6_0_0_, ruledbtacc0_.ruleID as ruleID1_27_0_, ruledbtacc0_.ruleID as ruleID1_27_1_, ruledbtacc0_.ApplyTax as ApplyTax2_27_1_, ruledbtacc0_.ApplyValue as ApplyVal3_27_1_, ruledbtacc0_.creditAccountID as creditAc5_27_1_, ruledbtacc0_.debitAccountID as debitAcc6_27_1_, ruledbtacc0_.distributionRuleID as distribu7_27_1_, ruledbtacc0_.Object as Object4_27_1_, ruledbtacc0_.ruleFormulaID as ruleForm8_27_1_, ruledbtacc0_.taxSetupID as taxSetup9_27_1_ from Rule ruledbtacc0_ where ruledbtacc0_.debitAccountID=?
  2015-06-09 20:28:58,953 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@388ffbc2]
  2015-06-09 20:28:58,953 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a50b09c]
  2015-06-09 20:28:58,953 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : companySet
  2015-06-09 20:28:58,953 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentName
  2015-06-09 20:28:58,953 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorID
  2015-06-09 20:28:58,953 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : subsectorID
  2015-06-09 20:28:58,953 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,953 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,953 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Subsector.segmentSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Subsector.segmentSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Subsector.segmentSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.securities.Segment, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Subsector.segmentSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Subsector.segmentSet)
          - SQL table alias mapping - segmentset0_
          - alias suffix - 0_
          - suffixed key columns - {subsecto3_34_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - segmentI1_32_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.Segment)
                - SQL table alias mapping - segmentset0_
                - alias suffix - 1_
                - suffixed key columns - {segmentI1_32_1_}

  2015-06-09 20:28:58,953 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Subsector.segmentSet: select segmentset0_.subsectorID as subsecto3_34_0_, segmentset0_.segmentID as segmentI1_32_0_, segmentset0_.segmentID as segmentI1_32_1_, segmentset0_.SegmentName as SegmentN2_32_1_, segmentset0_.subsectorID as subsecto3_32_1_ from Segment segmentset0_ where segmentset0_.subsectorID=?
  2015-06-09 20:28:58,953 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2187fff7]
  2015-06-09 20:28:58,953 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e5c7f0b]
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : category
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : currencyID
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : currencyID
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : emissionDate
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : exercisePrice
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : expirationDate
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : futureSerie
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : minimalVolume
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : objectAsset
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionSerie
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : optionStyle
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : quoteFactor
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : symbolDate
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@538613b3]
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.description
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.historicalQuoteSet
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.marketOrderSet
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.ordersSet
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.securityInfoID
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : securityID.securityInfoID
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : securityID.symbol
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,954 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,955 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.Currency.securityInfoList)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.Currency.securityInfoList, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.Currency.securityInfoList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.securities.SecurityInfo, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.Currency.securityInfoList].<elements>)
             - EntityAttributeFetchImpl(entity=com.cmm.jft.trading.securities.Security, querySpaceUid=<gen:2>, path=[com.cmm.jft.financial.Currency.securityInfoList].<elements>.securityID)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.Currency.securityInfoList)
          - SQL table alias mapping - securityin0_
          - alias suffix - 0_
          - suffixed key columns - {currenc13_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - security1_31_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.SecurityInfo)
                - SQL table alias mapping - securityin0_
                - alias suffix - 1_
                - suffixed key columns - {security1_31_1_}
                - JOIN (JoinDefinedByMetadata(securityID)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.cmm.jft.trading.securities.Security)
                      - SQL table alias mapping - security1_
                      - alias suffix - 2_
                      - suffixed key columns - {security1_30_2_}

  2015-06-09 20:28:58,955 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.Currency.securityInfoList: select securityin0_.currencyID as currenc13_9_0_, securityin0_.securityInfoID as security1_31_0_, securityin0_.securityInfoID as security1_31_1_, securityin0_.Category as Category2_31_1_, securityin0_.currencyID as currenc13_31_1_, securityin0_.EmissionDate as Emission3_31_1_, securityin0_.ExcercisePrice as Excercis4_31_1_, securityin0_.ExpirationDate as Expirati5_31_1_, securityin0_.FutureSerie as FutureSe6_31_1_, securityin0_.MinimalVolume as MinimalV7_31_1_, securityin0_.ObjectAsset as ObjectAs8_31_1_, securityin0_.OptionSerie as OptionSe9_31_1_, securityin0_.OptionStyle as OptionS10_31_1_, securityin0_.QuoteFactor as QuoteFa11_31_1_, securityin0_.SymbolDate as SymbolD12_31_1_, security1_.securityID as security1_30_2_, security1_.Description as Descript2_30_2_, security1_.securityInfoID_securityInfoID as security4_30_2_, security1_.Symbol as Symbol3_30_2_ from SecurityInfo securityin0_ left outer join Security security1_ on securityin0_.securityInfoID=security1_.securityInfoID_securityInfoID where securityin0_.currencyID=?
  2015-06-09 20:28:58,955 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11389053]
  2015-06-09 20:28:58,955 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5db99216]
  2015-06-09 20:28:58,955 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyTax
  2015-06-09 20:28:58,955 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : applyValue
  2015-06-09 20:28:58,955 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : creditAccountID
  2015-06-09 20:28:58,955 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : debitAccountID
  2015-06-09 20:28:58,955 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : distributionRuleID
  2015-06-09 20:28:58,955 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : distributionRuleID
  2015-06-09 20:28:58,955 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : object
  2015-06-09 20:28:58,955 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : ruleFormulaID
  2015-06-09 20:28:58,955 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : taxSetupID
  2015-06-09 20:28:58,955 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,955 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,956 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.financial.DistributionRule.ruleSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.financial.DistributionRule.ruleSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.financial.DistributionRule.ruleSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.financial.Rule, querySpaceUid=<gen:1>, path=[com.cmm.jft.financial.DistributionRule.ruleSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.financial.DistributionRule.ruleSet)
          - SQL table alias mapping - ruleset0_
          - alias suffix - 0_
          - suffixed key columns - {distribu7_12_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ruleID1_27_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.financial.Rule)
                - SQL table alias mapping - ruleset0_
                - alias suffix - 1_
                - suffixed key columns - {ruleID1_27_1_}

  2015-06-09 20:28:58,956 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.financial.DistributionRule.ruleSet: select ruleset0_.distributionRuleID as distribu7_12_0_, ruleset0_.ruleID as ruleID1_27_0_, ruleset0_.ruleID as ruleID1_27_1_, ruleset0_.ApplyTax as ApplyTax2_27_1_, ruleset0_.ApplyValue as ApplyVal3_27_1_, ruleset0_.creditAccountID as creditAc5_27_1_, ruleset0_.debitAccountID as debitAcc6_27_1_, ruleset0_.distributionRuleID as distribu7_27_1_, ruleset0_.Object as Object4_27_1_, ruleset0_.ruleFormulaID as ruleForm8_27_1_, ruleset0_.taxSetupID as taxSetup9_27_1_ from Rule ruleset0_ where ruleset0_.distributionRuleID=?
  2015-06-09 20:28:58,956 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9f46d94]
  2015-06-09 20:28:58,956 [main] (DEBUG) org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl -> Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18cc679e]
  2015-06-09 20:28:58,956 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : sectorID
  2015-06-09 20:28:58,956 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Property path deemed to be circular : sectorID
  2015-06-09 20:28:58,956 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : segmentSet
  2015-06-09 20:28:58,956 [main] (DEBUG) org.hibernate.persister.walking.spi.MetamodelGraphWalker -> Visiting attribute path : subsectorName
  2015-06-09 20:28:58,956 [main] (DEBUG) org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -> Building LoadPlan...
  2015-06-09 20:28:58,957 [main] (DEBUG) org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor -> processing queryspace <gen:0>
  2015-06-09 20:28:58,957 [main] (DEBUG) org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter -> LoadPlan(collection=com.cmm.jft.trading.securities.Sector.subsectorSet)
    - Returns
       - CollectionReturnImpl(collection=com.cmm.jft.trading.securities.Sector.subsectorSet, querySpaceUid=<gen:0>, path=[com.cmm.jft.trading.securities.Sector.subsectorSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cmm.jft.trading.securities.Subsector, querySpaceUid=<gen:1>, path=[com.cmm.jft.trading.securities.Sector.subsectorSet].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cmm.jft.trading.securities.Sector.subsectorSet)
          - SQL table alias mapping - subsectors0_
          - alias suffix - 0_
          - suffixed key columns - {sectorID3_29_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - subsecto1_34_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cmm.jft.trading.securities.Subsector)
                - SQL table alias mapping - subsectors0_
                - alias suffix - 1_
                - suffixed key columns - {subsecto1_34_1_}

  2015-06-09 20:28:58,957 [main] (DEBUG) org.hibernate.loader.collection.plan.CollectionLoader -> Static select for collection com.cmm.jft.trading.securities.Sector.subsectorSet: select subsectors0_.sectorID as sectorID3_29_0_, subsectors0_.subsectorID as subsecto1_34_0_, subsectors0_.subsectorID as subsecto1_34_1_, subsectors0_.sectorID as sectorID3_34_1_, subsectors0_.SubsectorName as Subsecto2_34_1_ from Subsector subsectors0_ where subsectors0_.sectorID=?
  2015-06-09 20:28:58,960 [main] (DEBUG) org.hibernate.internal.SessionFactoryRegistry -> Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@56db847e
  2015-06-09 20:28:58,964 [main] (DEBUG) org.hibernate.internal.SessionFactoryRegistry -> Registering SessionFactory: 08c49da4-dc9d-4895-9c44-b8573a579155 (<unnamed>)
  2015-06-09 20:28:58,964 [main] (DEBUG) org.hibernate.internal.SessionFactoryRegistry -> Not binding SessionFactory to JNDI, no JNDI name configured
  2015-06-09 20:28:58,964 [main] (DEBUG) org.hibernate.internal.SessionFactoryImpl -> Instantiated session factory
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing hbm.xml files
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Process annotated classes
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing fk mappings (*ToOne and JoinedSubclass)
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing collection mappings
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing native query and ResultSetMapping mappings
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing association property references
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Creating tables' unique integer identifiers
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing foreign key constraints
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.StockExchange
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Segment
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Company
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.JournalEntry
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Index
  2015-06-09 20:28:58,972 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.DistributionRule
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.RuleFormula
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.TaxSetup
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.SecurityInfo
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Subsector
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Country
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Sector
  2015-06-09 20:28:58,973 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Tax
  2015-06-09 20:28:58,987 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,987 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,987 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,987 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,987 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,987 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,987 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,987 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,987 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,990 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,990 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,990 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,990 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,990 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,990 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,990 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,990 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,991 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,991 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,992 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,992 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,993 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,993 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,993 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,993 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,993 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,993 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,993 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,993 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,993 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing hbm.xml files
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Process annotated classes
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing fk mappings (*ToOne and JoinedSubclass)
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing collection mappings
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing native query and ResultSetMapping mappings
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing association property references
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Creating tables' unique integer identifiers
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing foreign key constraints
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.StockExchange
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Segment
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Company
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:28:58,994 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.JournalEntry
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Index
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.DistributionRule
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.RuleFormula
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.TaxSetup
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.SecurityInfo
  2015-06-09 20:28:58,995 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:28:58,996 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Subsector
  2015-06-09 20:28:58,996 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Country
  2015-06-09 20:28:58,996 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Sector
  2015-06-09 20:28:58,996 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Tax
  2015-06-09 20:28:58,997 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,997 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,997 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,997 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:58,997 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,000 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,000 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,000 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,000 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,000 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,001 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,001 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,001 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,002 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,002 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,002 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,003 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,003 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,003 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,004 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,004 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,004 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,004 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,004 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,005 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,005 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,005 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,005 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,005 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,005 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,005 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,006 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,007 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,007 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,007 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,007 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,014 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,014 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,014 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,014 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,014 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,015 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,015 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,015 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,015 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,016 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,016 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,016 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,016 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,016 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,016 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,016 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,016 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,016 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,016 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,017 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,017 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,017 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,017 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,017 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,017 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,017 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,017 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,017 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,017 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,017 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,017 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,036 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,036 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,036 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,036 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,036 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:28:59,038 [main] (INFO) org.hibernate.tool.hbm2ddl.SchemaExport -> HHH000227: Running hbm2ddl schema export
  2015-06-09 20:28:59,039 [main] (DEBUG) org.hibernate.tool.hbm2ddl.SchemaExport -> Import file not found: /import.sql
  2015-06-09 20:28:59,043 [main] (DEBUG) org.hibernate.SQL -> alter table Account drop constraint FK_j9a281ub4trd8flyr8xp2js77
  2015-06-09 20:28:59,102 [main] (DEBUG) org.hibernate.SQL -> alter table Account drop constraint FK_gorcvfmprkuv169e9locc1crk
  2015-06-09 20:28:59,104 [main] (DEBUG) org.hibernate.SQL -> alter table Brokerage drop constraint FK_mf8sg4j6ifsn0uinwp41jo45h
  2015-06-09 20:28:59,105 [main] (DEBUG) org.hibernate.SQL -> alter table Commission drop constraint FK_kn2t2gq6ndbivsdjfmbrbqxxo
  2015-06-09 20:28:59,106 [main] (DEBUG) org.hibernate.SQL -> alter table Company drop constraint FK_biv6ml1wj3jdk9s2bv3wjxi7y
  2015-06-09 20:28:59,108 [main] (DEBUG) org.hibernate.SQL -> alter table CompanySegment drop constraint FK_bgicmvdtr63buv5tgq3m53dkr
  2015-06-09 20:28:59,109 [main] (DEBUG) org.hibernate.SQL -> alter table CompanySegment drop constraint FK_a5101tjhewkpyq19bipiqyv6e
  2015-06-09 20:28:59,110 [main] (DEBUG) org.hibernate.SQL -> alter table CurrencyQuote drop constraint FK_kjywcly93l6mcln2rgep1dkwt
  2015-06-09 20:28:59,111 [main] (DEBUG) org.hibernate.SQL -> alter table Deposit drop constraint FK_6c51s80i2ukj6d9el25p242rp
  2015-06-09 20:28:59,112 [main] (DEBUG) org.hibernate.SQL -> alter table Earning drop constraint FK_2612awd6r9o5vbcvd278liqjr
  2015-06-09 20:28:59,113 [main] (DEBUG) org.hibernate.SQL -> alter table EntryRegister drop constraint FK_ogct9b5kokepkm47buqcd54h4
  2015-06-09 20:28:59,115 [main] (DEBUG) org.hibernate.SQL -> alter table EntryRegister drop constraint FK_a0qynfc0ao56bkps2fnynr5lf
  2015-06-09 20:28:59,119 [main] (DEBUG) org.hibernate.SQL -> alter table EntryRegister drop constraint FK_15n07eyn8sv1ewb8tjbo7wogr
  2015-06-09 20:28:59,120 [main] (DEBUG) org.hibernate.SQL -> alter table EntryRegister drop constraint FK_1sqikeghk4ijftavrpbs166jt
  2015-06-09 20:28:59,122 [main] (DEBUG) org.hibernate.SQL -> alter table ExchangeTax drop constraint FK_8726k2vvh4x3b7t2s2licibgj
  2015-06-09 20:28:59,123 [main] (DEBUG) org.hibernate.SQL -> alter table HistoricalQuote drop constraint FK_lexipjdypu6ar61c3m170t0gg
  2015-06-09 20:28:59,124 [main] (DEBUG) org.hibernate.SQL -> alter table IndexComposition drop constraint FK_8l1d15jcajd96t3bq23jissat
  2015-06-09 20:28:59,126 [main] (DEBUG) org.hibernate.SQL -> alter table IndexComposition drop constraint FK_nk7h5bm8fyn3y7h671xayke1a
  2015-06-09 20:28:59,174 [main] (DEBUG) org.hibernate.SQL -> alter table MarketEvent drop constraint FK_1nnr0e3p34ifebeqmbx6ahx7w
  2015-06-09 20:28:59,175 [main] (DEBUG) org.hibernate.SQL -> alter table MarketEvent drop constraint FK_f2qtssu1k0o8tgdyna7a4fqos
  2015-06-09 20:28:59,176 [main] (DEBUG) org.hibernate.SQL -> alter table MarketOrder drop constraint FK_949ula361f7m14ih46g8ci18s
  2015-06-09 20:28:59,178 [main] (DEBUG) org.hibernate.SQL -> alter table MarketOrder drop constraint FK_3f51yfii3mu4xgklk4id3p278
  2015-06-09 20:28:59,181 [main] (DEBUG) org.hibernate.SQL -> alter table MarketTrade drop constraint FK_4j6hp5bsv8c59rapstit01bh0
  2015-06-09 20:28:59,183 [main] (DEBUG) org.hibernate.SQL -> alter table MarketTrade drop constraint FK_mqcm78tte6b2bmlp7qb18qkux
  2015-06-09 20:28:59,184 [main] (DEBUG) org.hibernate.SQL -> alter table OrderEvent drop constraint FK_9n5qpddiwyg7g1mfhsqbpqiwm
  2015-06-09 20:28:59,186 [main] (DEBUG) org.hibernate.SQL -> alter table OrderExecution drop constraint FK_7epyl2tm3830jp91upal43twe
  2015-06-09 20:28:59,187 [main] (DEBUG) org.hibernate.SQL -> alter table Orders drop constraint FK_9knpc95t0a6j4p5f438jnuxe5
  2015-06-09 20:28:59,188 [main] (DEBUG) org.hibernate.SQL -> alter table Rule drop constraint FK_32aj6he7tm12eolvjnaxalih0
  2015-06-09 20:28:59,189 [main] (DEBUG) org.hibernate.SQL -> alter table Rule drop constraint FK_bnxop07lgblwg75pc45iiaj9b
  2015-06-09 20:28:59,191 [main] (DEBUG) org.hibernate.SQL -> alter table Rule drop constraint FK_9o658wtsgxwtqad8yfqt6alna
  2015-06-09 20:28:59,192 [main] (DEBUG) org.hibernate.SQL -> alter table Rule drop constraint FK_b1d36wq16yh60gvb6aokw3kri
  2015-06-09 20:28:59,193 [main] (DEBUG) org.hibernate.SQL -> alter table Rule drop constraint FK_koh49879dd30tnhje19we7ike
  2015-06-09 20:28:59,194 [main] (DEBUG) org.hibernate.SQL -> alter table Security drop constraint FK_imw4w23r0ncgrcn2p09rt547x
  2015-06-09 20:28:59,195 [main] (DEBUG) org.hibernate.SQL -> alter table SecurityInfo drop constraint FK_tokuwvtdvj49iq95dx47wba6q
  2015-06-09 20:28:59,196 [main] (DEBUG) org.hibernate.SQL -> alter table Segment drop constraint FK_rddqr3vy1v4847vby6twur3o0
  2015-06-09 20:28:59,198 [main] (DEBUG) org.hibernate.SQL -> alter table StockExchange drop constraint FK_4wp2kggi860gei0usdeac6x9c
  2015-06-09 20:28:59,200 [main] (DEBUG) org.hibernate.SQL -> alter table Subsector drop constraint FK_lvhbgxuk6p8ocutbni6jv3xlq
  2015-06-09 20:28:59,202 [main] (DEBUG) org.hibernate.SQL -> alter table TaxSetup drop constraint FK_p9c99uuaum9vflxuf4aaiqhin
  2015-06-09 20:28:59,203 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Account cascade
  2015-06-09 20:28:59,208 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Broker cascade
  2015-06-09 20:28:59,210 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Brokerage cascade
  2015-06-09 20:28:59,213 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Commission cascade
  2015-06-09 20:28:59,215 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Company cascade
  2015-06-09 20:28:59,218 [main] (DEBUG) org.hibernate.SQL -> drop table if exists CompanySegment cascade
  2015-06-09 20:28:59,220 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Configuration cascade
  2015-06-09 20:28:59,223 [main] (DEBUG) org.hibernate.SQL -> drop table if exists CostCenter cascade
  2015-06-09 20:28:59,228 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Country cascade
  2015-06-09 20:28:59,231 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Currency cascade
  2015-06-09 20:28:59,234 [main] (DEBUG) org.hibernate.SQL -> drop table if exists CurrencyQuote cascade
  2015-06-09 20:28:59,237 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Deposit cascade
  2015-06-09 20:28:59,240 [main] (DEBUG) org.hibernate.SQL -> drop table if exists DistributionRule cascade
  2015-06-09 20:28:59,242 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Earning cascade
  2015-06-09 20:28:59,245 [main] (DEBUG) org.hibernate.SQL -> drop table if exists EntryRegister cascade
  2015-06-09 20:28:59,248 [main] (DEBUG) org.hibernate.SQL -> drop table if exists ExchangeTax cascade
  2015-06-09 20:28:59,251 [main] (DEBUG) org.hibernate.SQL -> drop table if exists HistoricalQuote cascade
  2015-06-09 20:28:59,254 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Index cascade
  2015-06-09 20:28:59,258 [main] (DEBUG) org.hibernate.SQL -> drop table if exists IndexComposition cascade
  2015-06-09 20:28:59,261 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Isin cascade
  2015-06-09 20:28:59,263 [main] (DEBUG) org.hibernate.SQL -> drop table if exists JournalEntry cascade
  2015-06-09 20:28:59,267 [main] (DEBUG) org.hibernate.SQL -> drop table if exists MarketEvent cascade
  2015-06-09 20:28:59,270 [main] (DEBUG) org.hibernate.SQL -> drop table if exists MarketOrder cascade
  2015-06-09 20:28:59,272 [main] (DEBUG) org.hibernate.SQL -> drop table if exists MarketTrade cascade
  2015-06-09 20:28:59,275 [main] (DEBUG) org.hibernate.SQL -> drop table if exists OrderEvent cascade
  2015-06-09 20:28:59,278 [main] (DEBUG) org.hibernate.SQL -> drop table if exists OrderExecution cascade
  2015-06-09 20:28:59,280 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Orders cascade
  2015-06-09 20:28:59,285 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Rule cascade
  2015-06-09 20:28:59,287 [main] (DEBUG) org.hibernate.SQL -> drop table if exists RuleFormula cascade
  2015-06-09 20:28:59,290 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Sector cascade
  2015-06-09 20:28:59,292 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Security cascade
  2015-06-09 20:28:59,295 [main] (DEBUG) org.hibernate.SQL -> drop table if exists SecurityInfo cascade
  2015-06-09 20:28:59,298 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Segment cascade
  2015-06-09 20:28:59,302 [main] (DEBUG) org.hibernate.SQL -> drop table if exists StockExchange cascade
  2015-06-09 20:28:59,305 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Subsector cascade
  2015-06-09 20:28:59,307 [main] (DEBUG) org.hibernate.SQL -> drop table if exists Tax cascade
  2015-06-09 20:28:59,309 [main] (DEBUG) org.hibernate.SQL -> drop table if exists TaxSetup cascade
  2015-06-09 20:28:59,312 [main] (DEBUG) org.hibernate.SQL -> drop sequence BROKERAGE_SEQ
  2015-06-09 20:28:59,314 [main] (DEBUG) org.hibernate.SQL -> drop sequence BROKER_SEQ
  2015-06-09 20:28:59,315 [main] (DEBUG) org.hibernate.SQL -> drop sequence COMMISSION_SEQ
  2015-06-09 20:28:59,317 [main] (DEBUG) org.hibernate.SQL -> drop sequence COMPANY_SEQ
  2015-06-09 20:28:59,318 [main] (DEBUG) org.hibernate.SQL -> drop sequence CONFIGURATION_SEQ
  2015-06-09 20:28:59,320 [main] (DEBUG) org.hibernate.SQL -> drop sequence COSTCENTER_SEQ
  2015-06-09 20:28:59,322 [main] (DEBUG) org.hibernate.SQL -> drop sequence CURRENCY_SEQ
  2015-06-09 20:28:59,324 [main] (DEBUG) org.hibernate.SQL -> drop sequence DEPOSIT_SEQ
  2015-06-09 20:28:59,325 [main] (DEBUG) org.hibernate.SQL -> drop sequence DISTRIBUTIONRULE_SEQ
  2015-06-09 20:28:59,327 [main] (DEBUG) org.hibernate.SQL -> drop sequence EARNING_SEQ
  2015-06-09 20:28:59,329 [main] (DEBUG) org.hibernate.SQL -> drop sequence ENTRYREGISTER_SEQ
  2015-06-09 20:28:59,331 [main] (DEBUG) org.hibernate.SQL -> drop sequence EXCHANGETAX_SEQ
  2015-06-09 20:28:59,333 [main] (DEBUG) org.hibernate.SQL -> drop sequence HISTORICALQUOTE_SEQ
  2015-06-09 20:28:59,335 [main] (DEBUG) org.hibernate.SQL -> drop sequence INDEXCOMPOSITION_SEQ
  2015-06-09 20:28:59,339 [main] (DEBUG) org.hibernate.SQL -> drop sequence ISIN_SEQ
  2015-06-09 20:28:59,341 [main] (DEBUG) org.hibernate.SQL -> drop sequence JOURNALENTRY_SEQ
  2015-06-09 20:28:59,343 [main] (DEBUG) org.hibernate.SQL -> drop sequence MARKETEVENT_SEQ
  2015-06-09 20:28:59,346 [main] (DEBUG) org.hibernate.SQL -> drop sequence MARKETORDER_SEQ
  2015-06-09 20:28:59,348 [main] (DEBUG) org.hibernate.SQL -> drop sequence MARKETTRADE_SEQ
  2015-06-09 20:28:59,349 [main] (DEBUG) org.hibernate.SQL -> drop sequence ORDEREVENT_SEQ
  2015-06-09 20:28:59,351 [main] (DEBUG) org.hibernate.SQL -> drop sequence ORDEREXECUTION_SEQ
  2015-06-09 20:28:59,354 [main] (DEBUG) org.hibernate.SQL -> drop sequence ORDERS_SEQ
  2015-06-09 20:28:59,355 [main] (DEBUG) org.hibernate.SQL -> drop sequence RULEFORMULA_SEQ
  2015-06-09 20:28:59,357 [main] (DEBUG) org.hibernate.SQL -> drop sequence RULE_SEQ
  2015-06-09 20:28:59,360 [main] (DEBUG) org.hibernate.SQL -> drop sequence SECTOR_SEQ
  2015-06-09 20:28:59,361 [main] (DEBUG) org.hibernate.SQL -> drop sequence SECURITYINFO_SEQ
  2015-06-09 20:28:59,363 [main] (DEBUG) org.hibernate.SQL -> drop sequence SECURITY_SEQ
  2015-06-09 20:28:59,365 [main] (DEBUG) org.hibernate.SQL -> drop sequence SEGMENT_SEQ
  2015-06-09 20:28:59,367 [main] (DEBUG) org.hibernate.SQL -> drop table if exists SEQUENCE cascade
  2015-06-09 20:28:59,369 [main] (DEBUG) org.hibernate.SQL -> drop sequence SUBSECTOR_SEQ
  2015-06-09 20:28:59,372 [main] (DEBUG) org.hibernate.SQL -> drop sequence TAXSETUP_SEQ
  2015-06-09 20:28:59,374 [main] (DEBUG) org.hibernate.SQL -> create table Account (accountID varchar(20) not null, AccName varchar(100), AccountCategory varchar(255), AccountType varchar(255), Balance numeric(19, 6), CreditLimit numeric(19, 6), Description varchar(255), Open boolean, currencyID varchar(5) not null, fatherAccountID varchar(20), primary key (accountID))
  2015-06-09 20:28:59,678 [main] (DEBUG) org.hibernate.SQL -> create table Broker (brokerID int8 not null, BrokerCode varchar(20), BrokerName varchar(255) not null, primary key (brokerID))
  2015-06-09 20:28:59,719 [main] (DEBUG) org.hibernate.SQL -> create table Brokerage (brokerageID int8 not null, Category varchar(255), TradeType varchar(255), brokerID int8 not null, primary key (brokerageID))
  2015-06-09 20:28:59,780 [main] (DEBUG) org.hibernate.SQL -> create table Commission (commissionID int8 not null, CalcTypes varchar(30), CommValue float8, ValueMax float8, ValueMin float8, brokerageID int8 not null, primary key (commissionID))
  2015-06-09 20:28:59,830 [main] (DEBUG) org.hibernate.SQL -> create table Company (companyID int8 not null, CNPJ varchar(14), CompanyDate timestamp, CompanyName varchar(100) not null, MarketName varchar(50), OnShares int8, PnShares int8, Status varchar(255), stockExchangeID varchar(12) not null, primary key (companyID))
  2015-06-09 20:28:59,875 [main] (DEBUG) org.hibernate.SQL -> create table CompanySegment (companyID int8 not null, segmentID int8 not null, primary key (companyID, segmentID))
  2015-06-09 20:28:59,920 [main] (DEBUG) org.hibernate.SQL -> create table Configuration (configurationID int8 not null, properties bytea, primary key (configurationID))
  2015-06-09 20:29:00,000 [main] (DEBUG) org.hibernate.SQL -> create table CostCenter (costCenterID int8 not null, Name varchar(250), primary key (costCenterID))
  2015-06-09 20:29:00,042 [main] (DEBUG) org.hibernate.SQL -> create table Country (countryID varchar(3) not null, Area float8, Continent varchar(2), CountryName varchar(100) not null, Population int8, primary key (countryID))
  2015-06-09 20:29:00,098 [main] (DEBUG) org.hibernate.SQL -> create table Currency (currencyID varchar(5) not null, CurrSymbol varchar(5), Description varchar(255), FractionalUnit varchar(50), Sign varchar(255), primary key (currencyID))
  2015-06-09 20:29:00,166 [main] (DEBUG) org.hibernate.SQL -> create table CurrencyQuote (currencyQuoteID int8 not null, QDateTime timestamp not null, Value numeric(19, 6) not null, currencyID varchar(5) not null, primary key (currencyQuoteID))
  2015-06-09 20:29:00,209 [main] (DEBUG) org.hibernate.SQL -> create table Deposit (depositID int8 not null, DepositDate timestamp not null, Description varchar(255), Value numeric(19, 6) not null, DepositAccount varchar(20) not null, primary key (depositID))
  2015-06-09 20:29:00,253 [main] (DEBUG) org.hibernate.SQL -> create table DistributionRule (distributionRuleID int8 not null, ObjectRule varchar(30), RuleName varchar(100), primary key (distributionRuleID))
  2015-06-09 20:29:00,298 [main] (DEBUG) org.hibernate.SQL -> create table Earning (earningID int8 not null, EarningType varchar(50), EarningValue numeric(19, 10), ExDate timestamp, ExPrice numeric(19, 6), securityID int8 not null, primary key (earningID))
  2015-06-09 20:29:00,342 [main] (DEBUG) org.hibernate.SQL -> create table EntryRegister (entryRegisterID int8 not null, Credit numeric(19, 6) not null, Debit numeric(19, 6) not null, Description varchar(255), EntryType varchar(255) not null, OperationID varchar(20), creditAccountID varchar(20) not null, currencyID varchar(5) not null, debitAccountID varchar(20) not null, entryID int8 not null, primary key (entryRegisterID))
  2015-06-09 20:29:00,435 [main] (DEBUG) org.hibernate.SQL -> create table ExchangeTax (exchangeTaxID int8 not null, CalcType varchar(30), Tax float8, TaxName varchar(50), brokerageID int8 not null, primary key (exchangeTaxID))
  2015-06-09 20:29:00,475 [main] (DEBUG) org.hibernate.SQL -> create table HistoricalQuote (historicalQuoteID int8 not null, AdjClose numeric(19, 6), Ask numeric(19, 6) not null, AvgPrice numeric(19, 6) not null, Bid numeric(19, 6) not null, Close numeric(19, 6) not null, High numeric(19, 6) not null, Low numeric(19, 6) not null, Open numeric(19, 6) not null, QDateTime timestamp not null, QuoteFactor int4, TradedQuantity int8, TradedUnits int8, Volume numeric(19, 2) not null, securityID int8 not null, primary key (historicalQuoteID))
  2015-06-09 20:29:00,531 [main] (DEBUG) org.hibernate.SQL -> create table Index (indexID int8 not null, Index varchar(12), IndexName varchar(100), primary key (indexID))
  2015-06-09 20:29:00,620 [main] (DEBUG) org.hibernate.SQL -> create table IndexComposition (indexCompID int8 not null, IndexDate varchar(10) not null, indexID int8 not null, securityID int8 not null, primary key (indexCompID))
  2015-06-09 20:29:00,687 [main] (DEBUG) org.hibernate.SQL -> create table Isin (isinID int8 not null, Description varchar(255), ISIN varchar(12), Status varchar(50), primary key (isinID))
  2015-06-09 20:29:00,742 [main] (DEBUG) org.hibernate.SQL -> create table JournalEntry (entryID int8 not null, Description varchar(255), EntryClose timestamp, EntryDate timestamp not null, JournalStatus varchar(255), primary key (entryID))
  2015-06-09 20:29:00,911 [main] (DEBUG) org.hibernate.SQL -> create table MarketEvent (marketEventID int8 not null, EventDateTime timestamp, EventType int4, Message varchar(255), marketOrderID int8, primary key (marketEventID))
  2015-06-09 20:29:01,009 [main] (DEBUG) org.hibernate.SQL -> create table MarketOrder (marketOrderID int8 not null, ExpirationDate timestamp, ExternalID varchar(30), OrderDateTime timestamp, OrderStatus varchar(20), Price numeric(19, 6), Side varchar(10), Volume int4, brokerID int8 not null, securityID int8 not null, primary key (marketOrderID))
  2015-06-09 20:29:01,064 [main] (DEBUG) org.hibernate.SQL -> create table MarketTrade (marketTradeID int8 not null, Price numeric(19, 6), TradeDateTime timestamp, Volume int4, buyOrderID int8 not null, sellOrderID int8 not null, primary key (marketTradeID))
  2015-06-09 20:29:01,119 [main] (DEBUG) org.hibernate.SQL -> create table OrderEvent (orderEventID int8 not null, EventDateTime timestamp, EventType varchar(50), Message varchar(255), orderID int8 not null, primary key (orderEventID))
  2015-06-09 20:29:01,287 [main] (DEBUG) org.hibernate.SQL -> create table OrderExecution (orderExecutionID int8 not null, ExecutionDateTime timestamp, Price float8, Volume int4, orderID int8 not null, primary key (orderExecutionID))
  2015-06-09 20:29:01,342 [main] (DEBUG) org.hibernate.SQL -> create table Orders (orderID int8 not null, AveragePrice numeric(19, 6), Comment varchar(250), Duration timestamp not null, ExecutedVolume int4, OrderDateTime timestamp not null, OrderSerial varchar(25) not null, OrderStatus varchar(255) not null, OrderType varchar(255) not null, Price float8, Side varchar(255) not null, StopPrice float8, TradeType varchar(255) not null, Volume int4 not null, securityID int8 not null, primary key (orderID))
  2015-06-09 20:29:01,416 [main] (DEBUG) org.hibernate.SQL -> create table Rule (ruleID int8 not null, ApplyTax boolean, ApplyValue boolean, Object varchar(30), creditAccountID varchar(20) not null, debitAccountID varchar(20) not null, distributionRuleID int8 not null, ruleFormulaID int8 not null, taxSetupID int8 not null, primary key (ruleID))
  2015-06-09 20:29:01,464 [main] (DEBUG) org.hibernate.SQL -> create table RuleFormula (ruleFormulaID int8 not null, Description varchar(100), ValueFormula varchar(255), primary key (ruleFormulaID))
  2015-06-09 20:29:01,522 [main] (DEBUG) org.hibernate.SQL -> create table Sector (sectorID int8 not null, SectorName varchar(100), primary key (sectorID))
  2015-06-09 20:29:01,565 [main] (DEBUG) org.hibernate.SQL -> create table Security (securityID int8 not null, Description varchar(255), Symbol varchar(50) not null, securityInfoID_securityInfoID int8, primary key (securityID))
  2015-06-09 20:29:01,620 [main] (DEBUG) org.hibernate.SQL -> create table SecurityInfo (securityInfoID int8 not null, Category varchar(30), EmissionDate date, ExcercisePrice float8, ExpirationDate date, FutureSerie varchar(1), MinimalVolume int4, ObjectAsset varchar(1), OptionSerie varchar(1), OptionStyle varchar(25), QuoteFactor int4, SymbolDate timestamp, currencyID varchar(5), primary key (securityInfoID))
  2015-06-09 20:29:01,675 [main] (DEBUG) org.hibernate.SQL -> create table Segment (segmentID int8 not null, SegmentName varchar(100), subsectorID int8 not null, primary key (segmentID))
  2015-06-09 20:29:01,732 [main] (DEBUG) org.hibernate.SQL -> create table StockExchange (stockExchangeID varchar(12) not null, ExchangeName varchar(100), countryID varchar(3) not null, primary key (stockExchangeID))
  2015-06-09 20:29:01,775 [main] (DEBUG) org.hibernate.SQL -> create table Subsector (subsectorID int8 not null, SubsectorName varchar(100), sectorID int8 not null, primary key (subsectorID))
  2015-06-09 20:29:01,832 [main] (DEBUG) org.hibernate.SQL -> create table Tax (taxID varchar(10) not null, TaxName varchar(100) not null, primary key (taxID))
  2015-06-09 20:29:01,889 [main] (DEBUG) org.hibernate.SQL -> create table TaxSetup (taxSetupID int8 not null, Aliquota float4 not null, SetupName varchar(100), TaxValue numeric(19, 6) not null, taxID varchar(10) not null, primary key (taxSetupID))
  2015-06-09 20:29:01,961 [main] (DEBUG) org.hibernate.SQL -> alter table Index add constraint UK_fmpvs497uei7dukb3ipn37dny  unique (Index)
  2015-06-09 20:29:02,032 [main] (DEBUG) org.hibernate.SQL -> alter table IndexComposition add constraint UK_igqjee2anekxe99bhrx32sknv  unique (IndexDate, indexID, securityID)
  2015-06-09 20:29:02,097 [main] (DEBUG) org.hibernate.SQL -> alter table Isin add constraint UK_hqomram3ltdhajbdc6ogblqpq  unique (ISIN)
  2015-06-09 20:29:02,153 [main] (DEBUG) org.hibernate.SQL -> alter table MarketTrade add constraint UK_rx76goiwkhx9k3lfjp3gtvjw8  unique (TradeDateTime, Price, Volume)
  2015-06-09 20:29:02,208 [main] (DEBUG) org.hibernate.SQL -> alter table Orders add constraint UK_iuumeiyk1dat9iokybnry1acl  unique (OrderSerial)
  2015-06-09 20:29:02,264 [main] (DEBUG) org.hibernate.SQL -> alter table Account add constraint FK_j9a281ub4trd8flyr8xp2js77 foreign key (currencyID) references Currency
  2015-06-09 20:29:02,267 [main] (DEBUG) org.hibernate.SQL -> alter table Account add constraint FK_gorcvfmprkuv169e9locc1crk foreign key (fatherAccountID) references Account
  2015-06-09 20:29:02,268 [main] (DEBUG) org.hibernate.SQL -> alter table Brokerage add constraint FK_mf8sg4j6ifsn0uinwp41jo45h foreign key (brokerID) references Broker
  2015-06-09 20:29:02,270 [main] (DEBUG) org.hibernate.SQL -> alter table Commission add constraint FK_kn2t2gq6ndbivsdjfmbrbqxxo foreign key (brokerageID) references Brokerage
  2015-06-09 20:29:02,272 [main] (DEBUG) org.hibernate.SQL -> alter table Company add constraint FK_biv6ml1wj3jdk9s2bv3wjxi7y foreign key (stockExchangeID) references StockExchange
  2015-06-09 20:29:02,274 [main] (DEBUG) org.hibernate.SQL -> alter table CompanySegment add constraint FK_bgicmvdtr63buv5tgq3m53dkr foreign key (segmentID) references Segment
  2015-06-09 20:29:02,276 [main] (DEBUG) org.hibernate.SQL -> alter table CompanySegment add constraint FK_a5101tjhewkpyq19bipiqyv6e foreign key (companyID) references Company
  2015-06-09 20:29:02,278 [main] (DEBUG) org.hibernate.SQL -> alter table CurrencyQuote add constraint FK_kjywcly93l6mcln2rgep1dkwt foreign key (currencyID) references Currency
  2015-06-09 20:29:02,279 [main] (DEBUG) org.hibernate.SQL -> alter table Deposit add constraint FK_6c51s80i2ukj6d9el25p242rp foreign key (DepositAccount) references Account
  2015-06-09 20:29:02,281 [main] (DEBUG) org.hibernate.SQL -> alter table Earning add constraint FK_2612awd6r9o5vbcvd278liqjr foreign key (securityID) references Security
  2015-06-09 20:29:02,283 [main] (DEBUG) org.hibernate.SQL -> alter table EntryRegister add constraint FK_ogct9b5kokepkm47buqcd54h4 foreign key (creditAccountID) references Account
  2015-06-09 20:29:02,285 [main] (DEBUG) org.hibernate.SQL -> alter table EntryRegister add constraint FK_a0qynfc0ao56bkps2fnynr5lf foreign key (currencyID) references Currency
  2015-06-09 20:29:02,287 [main] (DEBUG) org.hibernate.SQL -> alter table EntryRegister add constraint FK_15n07eyn8sv1ewb8tjbo7wogr foreign key (debitAccountID) references Account
  2015-06-09 20:29:02,289 [main] (DEBUG) org.hibernate.SQL -> alter table EntryRegister add constraint FK_1sqikeghk4ijftavrpbs166jt foreign key (entryID) references JournalEntry
  2015-06-09 20:29:02,291 [main] (DEBUG) org.hibernate.SQL -> alter table ExchangeTax add constraint FK_8726k2vvh4x3b7t2s2licibgj foreign key (brokerageID) references Brokerage
  2015-06-09 20:29:02,293 [main] (DEBUG) org.hibernate.SQL -> alter table HistoricalQuote add constraint FK_lexipjdypu6ar61c3m170t0gg foreign key (securityID) references Security
  2015-06-09 20:29:02,295 [main] (DEBUG) org.hibernate.SQL -> alter table IndexComposition add constraint FK_8l1d15jcajd96t3bq23jissat foreign key (indexID) references Index
  2015-06-09 20:29:02,297 [main] (DEBUG) org.hibernate.SQL -> alter table IndexComposition add constraint FK_nk7h5bm8fyn3y7h671xayke1a foreign key (securityID) references Security
  2015-06-09 20:29:02,299 [main] (DEBUG) org.hibernate.SQL -> alter table MarketEvent add constraint FK_1nnr0e3p34ifebeqmbx6ahx7w foreign key (marketOrderID) references MarketOrder
  2015-06-09 20:29:02,301 [main] (DEBUG) org.hibernate.SQL -> alter table MarketEvent add constraint FK_f2qtssu1k0o8tgdyna7a4fqos foreign key (marketEventID) references MarketOrder
  2015-06-09 20:29:02,302 [main] (DEBUG) org.hibernate.SQL -> alter table MarketOrder add constraint FK_949ula361f7m14ih46g8ci18s foreign key (brokerID) references Broker
  2015-06-09 20:29:02,304 [main] (DEBUG) org.hibernate.SQL -> alter table MarketOrder add constraint FK_3f51yfii3mu4xgklk4id3p278 foreign key (securityID) references Security
  2015-06-09 20:29:02,306 [main] (DEBUG) org.hibernate.SQL -> alter table MarketTrade add constraint FK_4j6hp5bsv8c59rapstit01bh0 foreign key (buyOrderID) references MarketOrder
  2015-06-09 20:29:02,308 [main] (DEBUG) org.hibernate.SQL -> alter table MarketTrade add constraint FK_mqcm78tte6b2bmlp7qb18qkux foreign key (sellOrderID) references MarketOrder
  2015-06-09 20:29:02,310 [main] (DEBUG) org.hibernate.SQL -> alter table OrderEvent add constraint FK_9n5qpddiwyg7g1mfhsqbpqiwm foreign key (orderID) references Orders
  2015-06-09 20:29:02,312 [main] (DEBUG) org.hibernate.SQL -> alter table OrderExecution add constraint FK_7epyl2tm3830jp91upal43twe foreign key (orderID) references Orders
  2015-06-09 20:29:02,314 [main] (DEBUG) org.hibernate.SQL -> alter table Orders add constraint FK_9knpc95t0a6j4p5f438jnuxe5 foreign key (securityID) references Security
  2015-06-09 20:29:02,315 [main] (DEBUG) org.hibernate.SQL -> alter table Rule add constraint FK_32aj6he7tm12eolvjnaxalih0 foreign key (creditAccountID) references Account
  2015-06-09 20:29:02,317 [main] (DEBUG) org.hibernate.SQL -> alter table Rule add constraint FK_bnxop07lgblwg75pc45iiaj9b foreign key (debitAccountID) references Account
  2015-06-09 20:29:02,319 [main] (DEBUG) org.hibernate.SQL -> alter table Rule add constraint FK_9o658wtsgxwtqad8yfqt6alna foreign key (distributionRuleID) references DistributionRule
  2015-06-09 20:29:02,321 [main] (DEBUG) org.hibernate.SQL -> alter table Rule add constraint FK_b1d36wq16yh60gvb6aokw3kri foreign key (ruleFormulaID) references RuleFormula
  2015-06-09 20:29:02,322 [main] (DEBUG) org.hibernate.SQL -> alter table Rule add constraint FK_koh49879dd30tnhje19we7ike foreign key (taxSetupID) references TaxSetup
  2015-06-09 20:29:02,324 [main] (DEBUG) org.hibernate.SQL -> alter table Security add constraint FK_imw4w23r0ncgrcn2p09rt547x foreign key (securityInfoID_securityInfoID) references SecurityInfo
  2015-06-09 20:29:02,326 [main] (DEBUG) org.hibernate.SQL -> alter table SecurityInfo add constraint FK_tokuwvtdvj49iq95dx47wba6q foreign key (currencyID) references Currency
  2015-06-09 20:29:02,328 [main] (DEBUG) org.hibernate.SQL -> alter table Segment add constraint FK_rddqr3vy1v4847vby6twur3o0 foreign key (subsectorID) references Subsector
  2015-06-09 20:29:02,330 [main] (DEBUG) org.hibernate.SQL -> alter table StockExchange add constraint FK_4wp2kggi860gei0usdeac6x9c foreign key (countryID) references Country
  2015-06-09 20:29:02,331 [main] (DEBUG) org.hibernate.SQL -> alter table Subsector add constraint FK_lvhbgxuk6p8ocutbni6jv3xlq foreign key (sectorID) references Sector
  2015-06-09 20:29:02,333 [main] (DEBUG) org.hibernate.SQL -> alter table TaxSetup add constraint FK_p9c99uuaum9vflxuf4aaiqhin foreign key (taxID) references Tax
  2015-06-09 20:29:02,335 [main] (DEBUG) org.hibernate.SQL -> create sequence BROKERAGE_SEQ
  2015-06-09 20:29:02,337 [main] (DEBUG) org.hibernate.SQL -> create sequence BROKER_SEQ
  2015-06-09 20:29:02,339 [main] (DEBUG) org.hibernate.SQL -> create sequence COMMISSION_SEQ
  2015-06-09 20:29:02,341 [main] (DEBUG) org.hibernate.SQL -> create sequence COMPANY_SEQ
  2015-06-09 20:29:02,344 [main] (DEBUG) org.hibernate.SQL -> create sequence CONFIGURATION_SEQ
  2015-06-09 20:29:02,346 [main] (DEBUG) org.hibernate.SQL -> create sequence COSTCENTER_SEQ
  2015-06-09 20:29:02,349 [main] (DEBUG) org.hibernate.SQL -> create sequence CURRENCY_SEQ
  2015-06-09 20:29:02,351 [main] (DEBUG) org.hibernate.SQL -> create sequence DEPOSIT_SEQ
  2015-06-09 20:29:02,353 [main] (DEBUG) org.hibernate.SQL -> create sequence DISTRIBUTIONRULE_SEQ
  2015-06-09 20:29:02,356 [main] (DEBUG) org.hibernate.SQL -> create sequence EARNING_SEQ
  2015-06-09 20:29:02,358 [main] (DEBUG) org.hibernate.SQL -> create sequence ENTRYREGISTER_SEQ
  2015-06-09 20:29:02,360 [main] (DEBUG) org.hibernate.SQL -> create sequence EXCHANGETAX_SEQ
  2015-06-09 20:29:02,363 [main] (DEBUG) org.hibernate.SQL -> create sequence HISTORICALQUOTE_SEQ
  2015-06-09 20:29:02,365 [main] (DEBUG) org.hibernate.SQL -> create sequence INDEXCOMPOSITION_SEQ
  2015-06-09 20:29:02,367 [main] (DEBUG) org.hibernate.SQL -> create sequence ISIN_SEQ
  2015-06-09 20:29:02,369 [main] (DEBUG) org.hibernate.SQL -> create sequence JOURNALENTRY_SEQ
  2015-06-09 20:29:02,371 [main] (DEBUG) org.hibernate.SQL -> create sequence MARKETEVENT_SEQ
  2015-06-09 20:29:02,374 [main] (DEBUG) org.hibernate.SQL -> create sequence MARKETORDER_SEQ
  2015-06-09 20:29:02,376 [main] (DEBUG) org.hibernate.SQL -> create sequence MARKETTRADE_SEQ
  2015-06-09 20:29:02,378 [main] (DEBUG) org.hibernate.SQL -> create sequence ORDEREVENT_SEQ
  2015-06-09 20:29:02,381 [main] (DEBUG) org.hibernate.SQL -> create sequence ORDEREXECUTION_SEQ
  2015-06-09 20:29:02,383 [main] (DEBUG) org.hibernate.SQL -> create sequence ORDERS_SEQ
  2015-06-09 20:29:02,385 [main] (DEBUG) org.hibernate.SQL -> create sequence RULEFORMULA_SEQ
  2015-06-09 20:29:02,387 [main] (DEBUG) org.hibernate.SQL -> create sequence RULE_SEQ
  2015-06-09 20:29:02,389 [main] (DEBUG) org.hibernate.SQL -> create sequence SECTOR_SEQ
  2015-06-09 20:29:02,393 [main] (DEBUG) org.hibernate.SQL -> create sequence SECURITYINFO_SEQ
  2015-06-09 20:29:02,395 [main] (DEBUG) org.hibernate.SQL -> create sequence SECURITY_SEQ
  2015-06-09 20:29:02,397 [main] (DEBUG) org.hibernate.SQL -> create sequence SEGMENT_SEQ
  2015-06-09 20:29:02,400 [main] (DEBUG) org.hibernate.SQL -> create table SEQUENCE ( sequence_name varchar(255),  sequence_next_hi_value int4 )
  2015-06-09 20:29:02,402 [main] (DEBUG) org.hibernate.SQL -> create sequence SUBSECTOR_SEQ
  2015-06-09 20:29:02,403 [main] (DEBUG) org.hibernate.SQL -> create sequence TAXSETUP_SEQ
  2015-06-09 20:29:02,406 [main] (INFO) org.hibernate.tool.hbm2ddl.SchemaExport -> HHH000230: Schema export complete
  2015-06-09 20:29:02,406 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing hbm.xml files
  2015-06-09 20:29:02,406 [main] (DEBUG) org.hibernate.cfg.Configuration -> Process annotated classes
  2015-06-09 20:29:02,406 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing fk mappings (*ToOne and JoinedSubclass)
  2015-06-09 20:29:02,406 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:29:02,406 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:29:02,406 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing collection mappings
  2015-06-09 20:29:02,406 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing native query and ResultSetMapping mappings
  2015-06-09 20:29:02,406 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing association property references
  2015-06-09 20:29:02,406 [main] (DEBUG) org.hibernate.cfg.Configuration -> Creating tables' unique integer identifiers
  2015-06-09 20:29:02,406 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing foreign key constraints
  2015-06-09 20:29:02,406 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:29:02,406 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.StockExchange
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Segment
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Company
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.JournalEntry
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Index
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.DistributionRule
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.RuleFormula
  2015-06-09 20:29:02,407 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.TaxSetup
  2015-06-09 20:29:02,408 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.SecurityInfo
  2015-06-09 20:29:02,408 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:29:02,408 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Subsector
  2015-06-09 20:29:02,408 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Country
  2015-06-09 20:29:02,408 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Sector
  2015-06-09 20:29:02,408 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Tax
  2015-06-09 20:29:02,409 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,409 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,409 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,410 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,410 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,410 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,410 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,410 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,410 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,411 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing hbm.xml files
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Process annotated classes
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing fk mappings (*ToOne and JoinedSubclass)
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing extends queue
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing collection mappings
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing native query and ResultSetMapping mappings
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing association property references
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Creating tables' unique integer identifiers
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Processing foreign key constraints
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.StockExchange
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Segment
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Company
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.JournalEntry
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Brokerage
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Index
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:29:02,412 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.account.Broker
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.marketdata.MarketOrder
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.Orders
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Security
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Account
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.DistributionRule
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.RuleFormula
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.TaxSetup
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.SecurityInfo
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Currency
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Subsector
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Country
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.trading.securities.Sector
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.cfg.Configuration -> Resolving reference to class: com.cmm.jft.financial.Tax
  2015-06-09 20:29:02,413 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,414 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,415 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,415 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,415 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,415 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,415 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,415 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,415 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,415 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,415 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,415 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,415 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,415 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,415 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,415 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,416 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,416 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,417 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,418 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,418 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,418 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,418 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,418 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,418 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,418 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,418 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,418 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,418 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,418 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,418 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,418 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,418 [main] (DEBUG) org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -> Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
  2015-06-09 20:29:02,423 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking 89 named HQL queries
  2015-06-09 20:29:02,423 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Broker.findAll
  2015-06-09 20:29:02,467 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT b FROM com.cmm.jft.trading.account.Broker b
  2015-06-09 20:29:02,475 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'account'
       |     |  \-[IDENT] Node: 'Broker'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'b'

  2015-06-09 20:29:02,475 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,505 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,527 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.account.Broker (b) -> broker0_
  2015-06-09 20:29:02,528 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : b -> broker0_.brokerID
  2015-06-09 20:29:02,530 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,530 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} broker0_.brokerID ) ( FromClause{level=1} Broker broker0_ ) )
  2015-06-09 20:29:02,541 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Broker broker0_]
  2015-06-09 20:29:02,542 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,542 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Broker)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'broker0_.brokerID as brokerID1_1_' {alias=b, className=com.cmm.jft.trading.account.Broker, tableAlias=broker0_}
    |  \-[SQL_TOKEN] SqlFragment: 'broker0_.BrokerCode as BrokerCo2_1_, broker0_.BrokerName as BrokerNa3_1_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[broker0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Broker broker0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Broker,tableAlias=broker0_,origin=null,columns={,className=com.cmm.jft.trading.account.Broker}}

  2015-06-09 20:29:02,542 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,554 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT b FROM com.cmm.jft.trading.account.Broker b
  2015-06-09 20:29:02,554 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select broker0_.brokerID as brokerID1_1_, broker0_.BrokerCode as BrokerCo2_1_, broker0_.BrokerName as BrokerNa3_1_ from Broker broker0_
  2015-06-09 20:29:02,554 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,561 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: CurrencyQuote.findByValue
  2015-06-09 20:29:02,561 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.financial.CurrencyQuote c WHERE c.value = :value
  2015-06-09 20:29:02,564 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'CurrencyQuote'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'value'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'value'

  2015-06-09 20:29:02,564 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,565 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,565 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.CurrencyQuote (c) -> currencyqu0_
  2015-06-09 20:29:02,565 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currencyqu0_.currencyQuoteID
  2015-06-09 20:29:02,568 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currencyqu0_.currencyQuoteID
  2015-06-09 20:29:02,569 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : value -> org.hibernate.type.BigDecimalType@21a06946
  2015-06-09 20:29:02,570 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.value -> currencyqu0_.Value
  2015-06-09 20:29:02,572 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,573 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} currencyqu0_.currencyQuoteID ) ( FromClause{level=1} CurrencyQuote currencyqu0_ ) ( WHERE ( = ( currencyqu0_.Value currencyqu0_.currencyQuoteID value ) ? ) ) )
  2015-06-09 20:29:02,573 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [CurrencyQuote currencyqu0_]
  2015-06-09 20:29:02,573 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,573 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CurrencyQuote)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currencyqu0_.currencyQuoteID as currency1_10_' {alias=c, className=com.cmm.jft.financial.CurrencyQuote, tableAlias=currencyqu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currencyqu0_.currencyID as currency4_10_, currencyqu0_.QDateTime as QDateTim2_10_, currencyqu0_.Value as Value3_10_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currencyqu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CurrencyQuote currencyqu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CurrencyQuote,tableAlias=currencyqu0_,origin=null,columns={,className=com.cmm.jft.financial.CurrencyQuote}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'currencyqu0_.Value' {propertyName=value,dereferenceType=PRIMITIVE,getPropertyPath=value,path=c.value,tableAlias=currencyqu0_,className=com.cmm.jft.financial.CurrencyQuote,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'currencyqu0_.currencyQuoteID' {alias=c, className=com.cmm.jft.financial.CurrencyQuote, tableAlias=currencyqu0_}
          |  \-[IDENT] IdentNode: 'value' {originalText=value}
          \-[NAMED_PARAM] ParameterNode: '?' {name=value, expectedType=org.hibernate.type.BigDecimalType@21a06946}

  2015-06-09 20:29:02,573 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,574 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.financial.CurrencyQuote c WHERE c.value = :value
  2015-06-09 20:29:02,574 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select currencyqu0_.currencyQuoteID as currency1_10_, currencyqu0_.currencyID as currency4_10_, currencyqu0_.QDateTime as QDateTim2_10_, currencyqu0_.Value as Value3_10_ from CurrencyQuote currencyqu0_ where currencyqu0_.Value=?
  2015-06-09 20:29:02,574 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,577 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: EntryRegister.findByEntryRegisterID
  2015-06-09 20:29:02,582 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.entryRegisterID = :entryRegisterID
  2015-06-09 20:29:02,585 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'EntryRegister'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'entryRegisterID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'entryRegisterID'

  2015-06-09 20:29:02,585 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,585 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,586 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.EntryRegister (e) -> entryregis0_
  2015-06-09 20:29:02,587 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:29:02,587 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:29:02,587 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : entryRegisterID -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:02,587 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.entryRegisterID -> entryregis0_.entryRegisterID
  2015-06-09 20:29:02,587 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,587 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} entryregis0_.entryRegisterID ) ( FromClause{level=1} EntryRegister entryregis0_ ) ( WHERE ( = ( entryregis0_.entryRegisterID entryregis0_.entryRegisterID entryRegisterID ) ? ) ) )
  2015-06-09 20:29:02,587 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [EntryRegister entryregis0_]
  2015-06-09 20:29:02,587 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,587 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EntryRegister)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID as entryReg1_14_' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
    |  \-[SQL_TOKEN] SqlFragment: 'entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[entryregis0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EntryRegister entryregis0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=EntryRegister,tableAlias=entryregis0_,origin=null,columns={,className=com.cmm.jft.financial.EntryRegister}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'entryregis0_.entryRegisterID' {propertyName=entryRegisterID,dereferenceType=PRIMITIVE,getPropertyPath=entryRegisterID,path=e.entryRegisterID,tableAlias=entryregis0_,className=com.cmm.jft.financial.EntryRegister,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
          |  \-[IDENT] IdentNode: 'entryRegisterID' {originalText=entryRegisterID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=entryRegisterID, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:02,588 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,588 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.entryRegisterID = :entryRegisterID
  2015-06-09 20:29:02,588 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select entryregis0_.entryRegisterID as entryReg1_14_, entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_ from EntryRegister entryregis0_ where entryregis0_.entryRegisterID=?
  2015-06-09 20:29:02,588 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,588 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Tax.findByTaxName
  2015-06-09 20:29:02,589 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT t FROM com.cmm.jft.financial.Tax t WHERE t.taxName = :taxName
  2015-06-09 20:29:02,592 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Tax'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'taxName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'taxName'

  2015-06-09 20:29:02,592 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,593 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,593 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Tax (t) -> tax0_
  2015-06-09 20:29:02,593 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> tax0_.taxID
  2015-06-09 20:29:02,594 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> tax0_.taxID
  2015-06-09 20:29:02,594 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : taxName -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,594 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t.taxName -> tax0_.TaxName
  2015-06-09 20:29:02,594 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,594 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} tax0_.taxID ) ( FromClause{level=1} Tax tax0_ ) ( WHERE ( = ( tax0_.TaxName tax0_.taxID taxName ) ? ) ) )
  2015-06-09 20:29:02,594 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Tax tax0_]
  2015-06-09 20:29:02,594 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,594 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Tax)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'tax0_.taxID as taxID1_35_' {alias=t, className=com.cmm.jft.financial.Tax, tableAlias=tax0_}
    |  \-[SQL_TOKEN] SqlFragment: 'tax0_.TaxName as TaxName2_35_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[tax0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Tax tax0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=Tax,tableAlias=tax0_,origin=null,columns={,className=com.cmm.jft.financial.Tax}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tax0_.TaxName' {propertyName=taxName,dereferenceType=PRIMITIVE,getPropertyPath=taxName,path=t.taxName,tableAlias=tax0_,className=com.cmm.jft.financial.Tax,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'tax0_.taxID' {alias=t, className=com.cmm.jft.financial.Tax, tableAlias=tax0_}
          |  \-[IDENT] IdentNode: 'taxName' {originalText=taxName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=taxName, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,594 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,595 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT t FROM com.cmm.jft.financial.Tax t WHERE t.taxName = :taxName
  2015-06-09 20:29:02,595 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select tax0_.taxID as taxID1_35_, tax0_.TaxName as TaxName2_35_ from Tax tax0_ where tax0_.TaxName=?
  2015-06-09 20:29:02,595 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,595 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Currency.findByCurrencyID
  2015-06-09 20:29:02,595 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.financial.Currency c WHERE c.currencyID = :currencyID
  2015-06-09 20:29:02,602 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Currency'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'currencyID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'currencyID'

  2015-06-09 20:29:02,602 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,602 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,603 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Currency (c) -> currency0_
  2015-06-09 20:29:02,603 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currency0_.currencyID
  2015-06-09 20:29:02,604 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currency0_.currencyID
  2015-06-09 20:29:02,604 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : currencyID -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,604 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.currencyID -> currency0_.currencyID
  2015-06-09 20:29:02,604 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,604 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} currency0_.currencyID ) ( FromClause{level=1} Currency currency0_ ) ( WHERE ( = ( currency0_.currencyID currency0_.currencyID currencyID ) ? ) ) )
  2015-06-09 20:29:02,604 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Currency currency0_]
  2015-06-09 20:29:02,604 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,605 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Currency)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currency0_.currencyID as currency1_9_' {alias=c, className=com.cmm.jft.financial.Currency, tableAlias=currency0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currency0_.CurrSymbol as CurrSymb2_9_, currency0_.Description as Descript3_9_, currency0_.FractionalUnit as Fraction4_9_, currency0_.Sign as Sign5_9_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currency0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Currency currency0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Currency,tableAlias=currency0_,origin=null,columns={,className=com.cmm.jft.financial.Currency}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'currency0_.currencyID' {propertyName=currencyID,dereferenceType=PRIMITIVE,getPropertyPath=currencyID,path=c.currencyID,tableAlias=currency0_,className=com.cmm.jft.financial.Currency,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'currency0_.currencyID' {alias=c, className=com.cmm.jft.financial.Currency, tableAlias=currency0_}
          |  \-[IDENT] IdentNode: 'currencyID' {originalText=currencyID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=currencyID, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,605 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,605 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.financial.Currency c WHERE c.currencyID = :currencyID
  2015-06-09 20:29:02,605 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select currency0_.currencyID as currency1_9_, currency0_.CurrSymbol as CurrSymb2_9_, currency0_.Description as Descript3_9_, currency0_.FractionalUnit as Fraction4_9_, currency0_.Sign as Sign5_9_ from Currency currency0_ where currency0_.currencyID=?
  2015-06-09 20:29:02,605 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,605 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: EntryRegister.findByDebit
  2015-06-09 20:29:02,606 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.debit = :debit
  2015-06-09 20:29:02,614 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'EntryRegister'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'debit'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'debit'

  2015-06-09 20:29:02,614 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,615 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,615 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.EntryRegister (e) -> entryregis0_
  2015-06-09 20:29:02,615 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:29:02,615 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:29:02,615 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : debit -> org.hibernate.type.BigDecimalType@21a06946
  2015-06-09 20:29:02,615 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.debit -> entryregis0_.Debit
  2015-06-09 20:29:02,615 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,615 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} entryregis0_.entryRegisterID ) ( FromClause{level=1} EntryRegister entryregis0_ ) ( WHERE ( = ( entryregis0_.Debit entryregis0_.entryRegisterID debit ) ? ) ) )
  2015-06-09 20:29:02,616 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [EntryRegister entryregis0_]
  2015-06-09 20:29:02,616 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,617 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EntryRegister)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID as entryReg1_14_' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
    |  \-[SQL_TOKEN] SqlFragment: 'entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[entryregis0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EntryRegister entryregis0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=EntryRegister,tableAlias=entryregis0_,origin=null,columns={,className=com.cmm.jft.financial.EntryRegister}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'entryregis0_.Debit' {propertyName=debit,dereferenceType=PRIMITIVE,getPropertyPath=debit,path=e.debit,tableAlias=entryregis0_,className=com.cmm.jft.financial.EntryRegister,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
          |  \-[IDENT] IdentNode: 'debit' {originalText=debit}
          \-[NAMED_PARAM] ParameterNode: '?' {name=debit, expectedType=org.hibernate.type.BigDecimalType@21a06946}

  2015-06-09 20:29:02,617 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,617 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.debit = :debit
  2015-06-09 20:29:02,617 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select entryregis0_.entryRegisterID as entryReg1_14_, entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_ from EntryRegister entryregis0_ where entryregis0_.Debit=?
  2015-06-09 20:29:02,617 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,617 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: IndexComposition.findAll
  2015-06-09 20:29:02,618 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT i FROM com.cmm.jft.trading.securities.IndexComposition i
  2015-06-09 20:29:02,620 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'IndexComposition'
       |     \-[ALIAS] Node: 'i'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'i'

  2015-06-09 20:29:02,620 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,620 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,620 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.IndexComposition (i) -> indexcompo0_
  2015-06-09 20:29:02,620 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> indexcompo0_.indexCompID
  2015-06-09 20:29:02,620 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,620 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} indexcompo0_.indexCompID ) ( FromClause{level=1} IndexComposition indexcompo0_ ) )
  2015-06-09 20:29:02,620 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [IndexComposition indexcompo0_]
  2015-06-09 20:29:02,620 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,620 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (IndexComposition)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'indexcompo0_.indexCompID as indexCom1_18_' {alias=i, className=com.cmm.jft.trading.securities.IndexComposition, tableAlias=indexcompo0_}
    |  \-[SQL_TOKEN] SqlFragment: 'indexcompo0_.IndexDate as IndexDat2_18_, indexcompo0_.indexID as indexID3_18_, indexcompo0_.securityID as security4_18_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[i], fromElementByTableAlias=[indexcompo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'IndexComposition indexcompo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=IndexComposition,tableAlias=indexcompo0_,origin=null,columns={,className=com.cmm.jft.trading.securities.IndexComposition}}

  2015-06-09 20:29:02,621 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,621 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT i FROM com.cmm.jft.trading.securities.IndexComposition i
  2015-06-09 20:29:02,621 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select indexcompo0_.indexCompID as indexCom1_18_, indexcompo0_.IndexDate as IndexDat2_18_, indexcompo0_.indexID as indexID3_18_, indexcompo0_.securityID as security4_18_ from IndexComposition indexcompo0_
  2015-06-09 20:29:02,621 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,621 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: DistributionRule.findByRuleName
  2015-06-09 20:29:02,622 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.DistributionRule d WHERE d.ruleName = :ruleName
  2015-06-09 20:29:02,627 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'DistributionRule'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'ruleName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'ruleName'

  2015-06-09 20:29:02,627 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,627 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,627 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.DistributionRule (d) -> distributi0_
  2015-06-09 20:29:02,628 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> distributi0_.distributionRuleID
  2015-06-09 20:29:02,628 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> distributi0_.distributionRuleID
  2015-06-09 20:29:02,628 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : ruleName -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,628 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d.ruleName -> distributi0_.RuleName
  2015-06-09 20:29:02,628 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,628 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} distributi0_.distributionRuleID ) ( FromClause{level=1} DistributionRule distributi0_ ) ( WHERE ( = ( distributi0_.RuleName distributi0_.distributionRuleID ruleName ) ? ) ) )
  2015-06-09 20:29:02,628 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [DistributionRule distributi0_]
  2015-06-09 20:29:02,628 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,629 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (DistributionRule)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'distributi0_.distributionRuleID as distribu1_12_' {alias=d, className=com.cmm.jft.financial.DistributionRule, tableAlias=distributi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'distributi0_.ObjectRule as ObjectRu2_12_, distributi0_.RuleName as RuleName3_12_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[distributi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'DistributionRule distributi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=DistributionRule,tableAlias=distributi0_,origin=null,columns={,className=com.cmm.jft.financial.DistributionRule}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'distributi0_.RuleName' {propertyName=ruleName,dereferenceType=PRIMITIVE,getPropertyPath=ruleName,path=d.ruleName,tableAlias=distributi0_,className=com.cmm.jft.financial.DistributionRule,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'distributi0_.distributionRuleID' {alias=d, className=com.cmm.jft.financial.DistributionRule, tableAlias=distributi0_}
          |  \-[IDENT] IdentNode: 'ruleName' {originalText=ruleName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=ruleName, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,629 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,630 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.DistributionRule d WHERE d.ruleName = :ruleName
  2015-06-09 20:29:02,630 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select distributi0_.distributionRuleID as distribu1_12_, distributi0_.ObjectRule as ObjectRu2_12_, distributi0_.RuleName as RuleName3_12_ from DistributionRule distributi0_ where distributi0_.RuleName=?
  2015-06-09 20:29:02,630 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,630 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: JournalEntry.findByEntryDate
  2015-06-09 20:29:02,630 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.entryDate = :entryDate
  2015-06-09 20:29:02,635 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'JournalEntry'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'entryDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'entryDate'

  2015-06-09 20:29:02,635 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,635 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,638 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.JournalEntry (e) -> journalent0_
  2015-06-09 20:29:02,638 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:29:02,638 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:29:02,638 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : entryDate -> org.hibernate.type.TimestampType@d7b1517
  2015-06-09 20:29:02,638 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.entryDate -> journalent0_.EntryDate
  2015-06-09 20:29:02,638 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,638 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} journalent0_.entryID ) ( FromClause{level=1} JournalEntry journalent0_ ) ( WHERE ( = ( journalent0_.EntryDate journalent0_.entryID entryDate ) ? ) ) )
  2015-06-09 20:29:02,638 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [JournalEntry journalent0_]
  2015-06-09 20:29:02,638 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,639 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JournalEntry)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID as entryID1_20_' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
    |  \-[SQL_TOKEN] SqlFragment: 'journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[journalent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JournalEntry journalent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JournalEntry,tableAlias=journalent0_,origin=null,columns={,className=com.cmm.jft.financial.JournalEntry}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'journalent0_.EntryDate' {propertyName=entryDate,dereferenceType=PRIMITIVE,getPropertyPath=entryDate,path=e.entryDate,tableAlias=journalent0_,className=com.cmm.jft.financial.JournalEntry,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
          |  \-[IDENT] IdentNode: 'entryDate' {originalText=entryDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=entryDate, expectedType=org.hibernate.type.TimestampType@d7b1517}

  2015-06-09 20:29:02,639 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,639 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.entryDate = :entryDate
  2015-06-09 20:29:02,639 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select journalent0_.entryID as entryID1_20_, journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_ from JournalEntry journalent0_ where journalent0_.EntryDate=?
  2015-06-09 20:29:02,639 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,639 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Segment.findBySegmentName
  2015-06-09 20:29:02,640 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Segment s WHERE s.segmentName = :segmentName
  2015-06-09 20:29:02,642 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Segment'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'segmentName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'segmentName'

  2015-06-09 20:29:02,642 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,643 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,645 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Segment (s) -> segment0_
  2015-06-09 20:29:02,645 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> segment0_.segmentID
  2015-06-09 20:29:02,645 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> segment0_.segmentID
  2015-06-09 20:29:02,646 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : segmentName -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,646 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s.segmentName -> segment0_.SegmentName
  2015-06-09 20:29:02,646 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,646 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} segment0_.segmentID ) ( FromClause{level=1} Segment segment0_ ) ( WHERE ( = ( segment0_.SegmentName segment0_.segmentID segmentName ) ? ) ) )
  2015-06-09 20:29:02,646 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Segment segment0_]
  2015-06-09 20:29:02,646 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,647 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Segment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'segment0_.segmentID as segmentI1_32_' {alias=s, className=com.cmm.jft.trading.securities.Segment, tableAlias=segment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'segment0_.SegmentName as SegmentN2_32_, segment0_.subsectorID as subsecto3_32_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[segment0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Segment segment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Segment,tableAlias=segment0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Segment}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'segment0_.SegmentName' {propertyName=segmentName,dereferenceType=PRIMITIVE,getPropertyPath=segmentName,path=s.segmentName,tableAlias=segment0_,className=com.cmm.jft.trading.securities.Segment,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'segment0_.segmentID' {alias=s, className=com.cmm.jft.trading.securities.Segment, tableAlias=segment0_}
          |  \-[IDENT] IdentNode: 'segmentName' {originalText=segmentName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=segmentName, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,647 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,647 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Segment s WHERE s.segmentName = :segmentName
  2015-06-09 20:29:02,647 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select segment0_.segmentID as segmentI1_32_, segment0_.SegmentName as SegmentN2_32_, segment0_.subsectorID as subsecto3_32_ from Segment segment0_ where segment0_.SegmentName=?
  2015-06-09 20:29:02,647 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,647 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Tax.findByTaxID
  2015-06-09 20:29:02,647 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT t FROM com.cmm.jft.financial.Tax t WHERE t.taxID = :taxID
  2015-06-09 20:29:02,650 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Tax'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'taxID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'taxID'

  2015-06-09 20:29:02,650 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,650 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,650 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Tax (t) -> tax0_
  2015-06-09 20:29:02,650 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> tax0_.taxID
  2015-06-09 20:29:02,650 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> tax0_.taxID
  2015-06-09 20:29:02,650 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : taxID -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,651 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t.taxID -> tax0_.taxID
  2015-06-09 20:29:02,651 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,651 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} tax0_.taxID ) ( FromClause{level=1} Tax tax0_ ) ( WHERE ( = ( tax0_.taxID tax0_.taxID taxID ) ? ) ) )
  2015-06-09 20:29:02,651 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Tax tax0_]
  2015-06-09 20:29:02,651 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,653 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Tax)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'tax0_.taxID as taxID1_35_' {alias=t, className=com.cmm.jft.financial.Tax, tableAlias=tax0_}
    |  \-[SQL_TOKEN] SqlFragment: 'tax0_.TaxName as TaxName2_35_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[tax0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Tax tax0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=Tax,tableAlias=tax0_,origin=null,columns={,className=com.cmm.jft.financial.Tax}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tax0_.taxID' {propertyName=taxID,dereferenceType=PRIMITIVE,getPropertyPath=taxID,path=t.taxID,tableAlias=tax0_,className=com.cmm.jft.financial.Tax,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'tax0_.taxID' {alias=t, className=com.cmm.jft.financial.Tax, tableAlias=tax0_}
          |  \-[IDENT] IdentNode: 'taxID' {originalText=taxID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=taxID, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,653 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,653 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT t FROM com.cmm.jft.financial.Tax t WHERE t.taxID = :taxID
  2015-06-09 20:29:02,653 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select tax0_.taxID as taxID1_35_, tax0_.TaxName as TaxName2_35_ from Tax tax0_ where tax0_.taxID=?
  2015-06-09 20:29:02,653 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,653 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Subsector.findAll
  2015-06-09 20:29:02,654 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Subsector s
  2015-06-09 20:29:02,656 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Subsector'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 's'

  2015-06-09 20:29:02,657 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,657 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,658 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Subsector (s) -> subsector0_
  2015-06-09 20:29:02,658 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> subsector0_.subsectorID
  2015-06-09 20:29:02,658 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,658 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} subsector0_.subsectorID ) ( FromClause{level=1} Subsector subsector0_ ) )
  2015-06-09 20:29:02,658 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Subsector subsector0_]
  2015-06-09 20:29:02,658 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,659 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Subsector)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'subsector0_.subsectorID as subsecto1_34_' {alias=s, className=com.cmm.jft.trading.securities.Subsector, tableAlias=subsector0_}
    |  \-[SQL_TOKEN] SqlFragment: 'subsector0_.sectorID as sectorID3_34_, subsector0_.SubsectorName as Subsecto2_34_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[subsector0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Subsector subsector0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Subsector,tableAlias=subsector0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Subsector}}

  2015-06-09 20:29:02,659 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,659 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Subsector s
  2015-06-09 20:29:02,659 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select subsector0_.subsectorID as subsecto1_34_, subsector0_.sectorID as sectorID3_34_, subsector0_.SubsectorName as Subsecto2_34_ from Subsector subsector0_
  2015-06-09 20:29:02,659 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,659 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Orders.findByOrderStatus
  2015-06-09 20:29:02,660 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.orderStatus = :orderStatus
  2015-06-09 20:29:02,666 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'trading'
    |  |     |  \-[IDENT] Node: 'Orders'
    |  |     \-[ALIAS] Node: 'o'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'o'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'o'
          |  \-[IDENT] Node: 'orderStatus'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'orderStatus'

  2015-06-09 20:29:02,666 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,666 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,667 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.Orders (o) -> orders0_
  2015-06-09 20:29:02,667 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:29:02,667 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:29:02,667 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : orderStatus -> org.hibernate.type.CustomType@3aacf32a
  2015-06-09 20:29:02,667 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o.orderStatus -> orders0_.OrderStatus
  2015-06-09 20:29:02,667 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,667 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} orders0_.orderID ) ( FromClause{level=1} Orders orders0_ ) ( WHERE ( = ( orders0_.OrderStatus orders0_.orderID orderStatus ) ? ) ) )
  2015-06-09 20:29:02,668 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Orders orders0_]
  2015-06-09 20:29:02,668 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,668 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID as orderID1_26_' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
    |  \-[SQL_TOKEN] SqlFragment: 'orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[orders0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Orders orders0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=Orders,tableAlias=orders0_,origin=null,columns={,className=com.cmm.jft.trading.Orders}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'orders0_.OrderStatus' {propertyName=orderStatus,dereferenceType=PRIMITIVE,getPropertyPath=orderStatus,path=o.orderStatus,tableAlias=orders0_,className=com.cmm.jft.trading.Orders,classAlias=o}
          |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
          |  \-[IDENT] IdentNode: 'orderStatus' {originalText=orderStatus}
          \-[NAMED_PARAM] ParameterNode: '?' {name=orderStatus, expectedType=org.hibernate.type.CustomType@3aacf32a}

  2015-06-09 20:29:02,668 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,668 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.orderStatus = :orderStatus
  2015-06-09 20:29:02,668 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select orders0_.orderID as orderID1_26_, orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_ from Orders orders0_ where orders0_.OrderStatus=?
  2015-06-09 20:29:02,668 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,668 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Deposit.findByDescription
  2015-06-09 20:29:02,669 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.Deposit d WHERE d.description = :description
  2015-06-09 20:29:02,674 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Deposit'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'description'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'description'

  2015-06-09 20:29:02,675 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,675 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,675 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Deposit (d) -> deposit0_
  2015-06-09 20:29:02,675 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:29:02,675 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:29:02,675 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : description -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,675 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d.description -> deposit0_.Description
  2015-06-09 20:29:02,676 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,676 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} deposit0_.depositID ) ( FromClause{level=1} Deposit deposit0_ ) ( WHERE ( = ( deposit0_.Description deposit0_.depositID description ) ? ) ) )
  2015-06-09 20:29:02,676 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Deposit deposit0_]
  2015-06-09 20:29:02,676 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,676 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Deposit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID as depositI1_11_' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[deposit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Deposit deposit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=Deposit,tableAlias=deposit0_,origin=null,columns={,className=com.cmm.jft.financial.Deposit}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'deposit0_.Description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=d.description,tableAlias=deposit0_,className=com.cmm.jft.financial.Deposit,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[NAMED_PARAM] ParameterNode: '?' {name=description, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,676 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,676 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.Deposit d WHERE d.description = :description
  2015-06-09 20:29:02,676 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select deposit0_.depositID as depositI1_11_, deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_ from Deposit deposit0_ where deposit0_.Description=?
  2015-06-09 20:29:02,676 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,676 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Currency.findByCurrSymbol
  2015-06-09 20:29:02,677 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.financial.Currency c WHERE c.currSymbol = :currSymbol
  2015-06-09 20:29:02,679 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Currency'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'currSymbol'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'currSymbol'

  2015-06-09 20:29:02,679 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,679 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,680 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Currency (c) -> currency0_
  2015-06-09 20:29:02,680 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currency0_.currencyID
  2015-06-09 20:29:02,680 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currency0_.currencyID
  2015-06-09 20:29:02,680 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : currSymbol -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,680 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.currSymbol -> currency0_.CurrSymbol
  2015-06-09 20:29:02,680 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,681 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} currency0_.currencyID ) ( FromClause{level=1} Currency currency0_ ) ( WHERE ( = ( currency0_.CurrSymbol currency0_.currencyID currSymbol ) ? ) ) )
  2015-06-09 20:29:02,681 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Currency currency0_]
  2015-06-09 20:29:02,681 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,681 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Currency)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currency0_.currencyID as currency1_9_' {alias=c, className=com.cmm.jft.financial.Currency, tableAlias=currency0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currency0_.CurrSymbol as CurrSymb2_9_, currency0_.Description as Descript3_9_, currency0_.FractionalUnit as Fraction4_9_, currency0_.Sign as Sign5_9_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currency0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Currency currency0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Currency,tableAlias=currency0_,origin=null,columns={,className=com.cmm.jft.financial.Currency}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'currency0_.CurrSymbol' {propertyName=currSymbol,dereferenceType=PRIMITIVE,getPropertyPath=currSymbol,path=c.currSymbol,tableAlias=currency0_,className=com.cmm.jft.financial.Currency,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'currency0_.currencyID' {alias=c, className=com.cmm.jft.financial.Currency, tableAlias=currency0_}
          |  \-[IDENT] IdentNode: 'currSymbol' {originalText=currSymbol}
          \-[NAMED_PARAM] ParameterNode: '?' {name=currSymbol, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,681 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,681 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.financial.Currency c WHERE c.currSymbol = :currSymbol
  2015-06-09 20:29:02,681 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select currency0_.currencyID as currency1_9_, currency0_.CurrSymbol as CurrSymb2_9_, currency0_.Description as Descript3_9_, currency0_.FractionalUnit as Fraction4_9_, currency0_.Sign as Sign5_9_ from Currency currency0_ where currency0_.CurrSymbol=?
  2015-06-09 20:29:02,681 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,681 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: CurrencyQuote.findByCurrencyQuoteID
  2015-06-09 20:29:02,682 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.financial.CurrencyQuote c WHERE c.currencyQuoteID = :currencyQuoteID
  2015-06-09 20:29:02,684 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'CurrencyQuote'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'currencyQuoteID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'currencyQuoteID'

  2015-06-09 20:29:02,684 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,684 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,685 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.CurrencyQuote (c) -> currencyqu0_
  2015-06-09 20:29:02,685 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currencyqu0_.currencyQuoteID
  2015-06-09 20:29:02,685 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currencyqu0_.currencyQuoteID
  2015-06-09 20:29:02,686 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : currencyQuoteID -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:02,686 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.currencyQuoteID -> currencyqu0_.currencyQuoteID
  2015-06-09 20:29:02,686 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,686 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} currencyqu0_.currencyQuoteID ) ( FromClause{level=1} CurrencyQuote currencyqu0_ ) ( WHERE ( = ( currencyqu0_.currencyQuoteID currencyqu0_.currencyQuoteID currencyQuoteID ) ? ) ) )
  2015-06-09 20:29:02,686 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [CurrencyQuote currencyqu0_]
  2015-06-09 20:29:02,686 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,686 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CurrencyQuote)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currencyqu0_.currencyQuoteID as currency1_10_' {alias=c, className=com.cmm.jft.financial.CurrencyQuote, tableAlias=currencyqu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currencyqu0_.currencyID as currency4_10_, currencyqu0_.QDateTime as QDateTim2_10_, currencyqu0_.Value as Value3_10_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currencyqu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CurrencyQuote currencyqu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CurrencyQuote,tableAlias=currencyqu0_,origin=null,columns={,className=com.cmm.jft.financial.CurrencyQuote}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'currencyqu0_.currencyQuoteID' {propertyName=currencyQuoteID,dereferenceType=PRIMITIVE,getPropertyPath=currencyQuoteID,path=c.currencyQuoteID,tableAlias=currencyqu0_,className=com.cmm.jft.financial.CurrencyQuote,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'currencyqu0_.currencyQuoteID' {alias=c, className=com.cmm.jft.financial.CurrencyQuote, tableAlias=currencyqu0_}
          |  \-[IDENT] IdentNode: 'currencyQuoteID' {originalText=currencyQuoteID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=currencyQuoteID, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:02,686 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,686 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.financial.CurrencyQuote c WHERE c.currencyQuoteID = :currencyQuoteID
  2015-06-09 20:29:02,686 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select currencyqu0_.currencyQuoteID as currency1_10_, currencyqu0_.currencyID as currency4_10_, currencyqu0_.QDateTime as QDateTim2_10_, currencyqu0_.Value as Value3_10_ from CurrencyQuote currencyqu0_ where currencyqu0_.currencyQuoteID=?
  2015-06-09 20:29:02,686 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,687 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Orders.findByAveragePrice
  2015-06-09 20:29:02,687 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.averagePrice = :averagePrice
  2015-06-09 20:29:02,689 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'trading'
    |  |     |  \-[IDENT] Node: 'Orders'
    |  |     \-[ALIAS] Node: 'o'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'o'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'o'
          |  \-[IDENT] Node: 'averagePrice'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'averagePrice'

  2015-06-09 20:29:02,689 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,689 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,690 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.Orders (o) -> orders0_
  2015-06-09 20:29:02,690 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:29:02,690 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:29:02,690 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : averagePrice -> org.hibernate.type.BigDecimalType@21a06946
  2015-06-09 20:29:02,690 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o.averagePrice -> orders0_.AveragePrice
  2015-06-09 20:29:02,690 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,690 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} orders0_.orderID ) ( FromClause{level=1} Orders orders0_ ) ( WHERE ( = ( orders0_.AveragePrice orders0_.orderID averagePrice ) ? ) ) )
  2015-06-09 20:29:02,690 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Orders orders0_]
  2015-06-09 20:29:02,690 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,690 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID as orderID1_26_' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
    |  \-[SQL_TOKEN] SqlFragment: 'orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[orders0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Orders orders0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=Orders,tableAlias=orders0_,origin=null,columns={,className=com.cmm.jft.trading.Orders}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'orders0_.AveragePrice' {propertyName=averagePrice,dereferenceType=PRIMITIVE,getPropertyPath=averagePrice,path=o.averagePrice,tableAlias=orders0_,className=com.cmm.jft.trading.Orders,classAlias=o}
          |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
          |  \-[IDENT] IdentNode: 'averagePrice' {originalText=averagePrice}
          \-[NAMED_PARAM] ParameterNode: '?' {name=averagePrice, expectedType=org.hibernate.type.BigDecimalType@21a06946}

  2015-06-09 20:29:02,690 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,692 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.averagePrice = :averagePrice
  2015-06-09 20:29:02,692 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select orders0_.orderID as orderID1_26_, orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_ from Orders orders0_ where orders0_.AveragePrice=?
  2015-06-09 20:29:02,692 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,692 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Company.findByCompanyID
  2015-06-09 20:29:02,693 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c WHERE c.companyID = :companyID
  2015-06-09 20:29:02,694 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Company'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'companyID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'companyID'

  2015-06-09 20:29:02,694 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,695 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,695 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Company (c) -> company0_
  2015-06-09 20:29:02,695 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:29:02,695 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:29:02,695 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : companyID -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:02,695 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.companyID -> company0_.companyID
  2015-06-09 20:29:02,696 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,696 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} company0_.companyID ) ( FromClause{level=1} Company company0_ ) ( WHERE ( = ( company0_.companyID company0_.companyID companyID ) ? ) ) )
  2015-06-09 20:29:02,696 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Company company0_]
  2015-06-09 20:29:02,696 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,696 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Company)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'company0_.companyID as companyI1_4_' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
    |  \-[SQL_TOKEN] SqlFragment: 'company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[company0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Company company0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Company,tableAlias=company0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Company}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'company0_.companyID' {propertyName=companyID,dereferenceType=PRIMITIVE,getPropertyPath=companyID,path=c.companyID,tableAlias=company0_,className=com.cmm.jft.trading.securities.Company,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'company0_.companyID' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
          |  \-[IDENT] IdentNode: 'companyID' {originalText=companyID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=companyID, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:02,696 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,696 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c WHERE c.companyID = :companyID
  2015-06-09 20:29:02,696 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select company0_.companyID as companyI1_4_, company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_ from Company company0_ where company0_.companyID=?
  2015-06-09 20:29:02,696 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,696 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: MarketTrade.findByTDateTime
  2015-06-09 20:29:02,697 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m WHERE m.tradeDateTime = :tradeDateTime
  2015-06-09 20:29:02,711 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'marketdata'
    |  |     |  \-[IDENT] Node: 'MarketTrade'
    |  |     \-[ALIAS] Node: 'm'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'm'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'm'
          |  \-[IDENT] Node: 'tradeDateTime'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'tradeDateTime'

  2015-06-09 20:29:02,711 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,711 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,711 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.marketdata.MarketTrade (m) -> markettrad0_
  2015-06-09 20:29:02,712 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:29:02,712 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:29:02,712 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : tradeDateTime -> org.hibernate.type.TimestampType@d7b1517
  2015-06-09 20:29:02,712 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m.tradeDateTime -> markettrad0_.TradeDateTime
  2015-06-09 20:29:02,713 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,713 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} markettrad0_.marketTradeID ) ( FromClause{level=1} MarketTrade markettrad0_ ) ( WHERE ( = ( markettrad0_.TradeDateTime markettrad0_.marketTradeID tradeDateTime ) ? ) ) )
  2015-06-09 20:29:02,713 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [MarketTrade markettrad0_]
  2015-06-09 20:29:02,713 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,714 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (MarketTrade)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID as marketTr1_23_' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
    |  \-[SQL_TOKEN] SqlFragment: 'markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[m], fromElementByTableAlias=[markettrad0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'MarketTrade markettrad0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=MarketTrade,tableAlias=markettrad0_,origin=null,columns={,className=com.cmm.jft.trading.marketdata.MarketTrade}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'markettrad0_.TradeDateTime' {propertyName=tradeDateTime,dereferenceType=PRIMITIVE,getPropertyPath=tradeDateTime,path=m.tradeDateTime,tableAlias=markettrad0_,className=com.cmm.jft.trading.marketdata.MarketTrade,classAlias=m}
          |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
          |  \-[IDENT] IdentNode: 'tradeDateTime' {originalText=tradeDateTime}
          \-[NAMED_PARAM] ParameterNode: '?' {name=tradeDateTime, expectedType=org.hibernate.type.TimestampType@d7b1517}

  2015-06-09 20:29:02,714 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,714 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m WHERE m.tradeDateTime = :tradeDateTime
  2015-06-09 20:29:02,714 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select markettrad0_.marketTradeID as marketTr1_23_, markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_ from MarketTrade markettrad0_ where markettrad0_.TradeDateTime=?
  2015-06-09 20:29:02,714 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,714 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Company.findByPnShares
  2015-06-09 20:29:02,714 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c WHERE c.pnShares = :pnShares
  2015-06-09 20:29:02,717 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Company'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'pnShares'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pnShares'

  2015-06-09 20:29:02,717 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,717 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,717 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Company (c) -> company0_
  2015-06-09 20:29:02,717 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:29:02,718 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:29:02,718 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : pnShares -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:02,718 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.pnShares -> company0_.PnShares
  2015-06-09 20:29:02,718 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,718 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} company0_.companyID ) ( FromClause{level=1} Company company0_ ) ( WHERE ( = ( company0_.PnShares company0_.companyID pnShares ) ? ) ) )
  2015-06-09 20:29:02,718 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Company company0_]
  2015-06-09 20:29:02,718 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,721 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Company)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'company0_.companyID as companyI1_4_' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
    |  \-[SQL_TOKEN] SqlFragment: 'company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[company0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Company company0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Company,tableAlias=company0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Company}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'company0_.PnShares' {propertyName=pnShares,dereferenceType=PRIMITIVE,getPropertyPath=pnShares,path=c.pnShares,tableAlias=company0_,className=com.cmm.jft.trading.securities.Company,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'company0_.companyID' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
          |  \-[IDENT] IdentNode: 'pnShares' {originalText=pnShares}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pnShares, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:02,721 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,722 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c WHERE c.pnShares = :pnShares
  2015-06-09 20:29:02,722 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select company0_.companyID as companyI1_4_, company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_ from Company company0_ where company0_.PnShares=?
  2015-06-09 20:29:02,722 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,722 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Account.findAll
  2015-06-09 20:29:02,722 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT a FROM com.cmm.jft.financial.Account a
  2015-06-09 20:29:02,725 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'Account'
       |     \-[ALIAS] Node: 'a'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'a'

  2015-06-09 20:29:02,725 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,725 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,725 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Account (a) -> account0_
  2015-06-09 20:29:02,725 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:29:02,725 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,725 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} account0_.accountID ) ( FromClause{level=1} Account account0_ ) )
  2015-06-09 20:29:02,726 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Account account0_]
  2015-06-09 20:29:02,726 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,726 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountID as accountI1_0_' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.cmm.jft.financial.Account}}

  2015-06-09 20:29:02,726 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,726 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT a FROM com.cmm.jft.financial.Account a
  2015-06-09 20:29:02,726 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select account0_.accountID as accountI1_0_, account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_ from Account account0_
  2015-06-09 20:29:02,726 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,726 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: EntryRegister.findByDescription
  2015-06-09 20:29:02,727 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.description = :description
  2015-06-09 20:29:02,729 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'EntryRegister'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'description'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'description'

  2015-06-09 20:29:02,729 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,729 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,729 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.EntryRegister (e) -> entryregis0_
  2015-06-09 20:29:02,729 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:29:02,730 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:29:02,730 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : description -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,730 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.description -> entryregis0_.Description
  2015-06-09 20:29:02,730 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,730 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} entryregis0_.entryRegisterID ) ( FromClause{level=1} EntryRegister entryregis0_ ) ( WHERE ( = ( entryregis0_.Description entryregis0_.entryRegisterID description ) ? ) ) )
  2015-06-09 20:29:02,730 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [EntryRegister entryregis0_]
  2015-06-09 20:29:02,730 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,730 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EntryRegister)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID as entryReg1_14_' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
    |  \-[SQL_TOKEN] SqlFragment: 'entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[entryregis0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EntryRegister entryregis0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=EntryRegister,tableAlias=entryregis0_,origin=null,columns={,className=com.cmm.jft.financial.EntryRegister}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'entryregis0_.Description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=e.description,tableAlias=entryregis0_,className=com.cmm.jft.financial.EntryRegister,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[NAMED_PARAM] ParameterNode: '?' {name=description, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,730 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,730 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.description = :description
  2015-06-09 20:29:02,730 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select entryregis0_.entryRegisterID as entryReg1_14_, entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_ from EntryRegister entryregis0_ where entryregis0_.Description=?
  2015-06-09 20:29:02,730 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,730 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Sector.findAll
  2015-06-09 20:29:02,731 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Sector s
  2015-06-09 20:29:02,732 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Sector'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 's'

  2015-06-09 20:29:02,732 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,732 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,732 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Sector (s) -> sector0_
  2015-06-09 20:29:02,732 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> sector0_.sectorID
  2015-06-09 20:29:02,732 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,732 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} sector0_.sectorID ) ( FromClause{level=1} Sector sector0_ ) )
  2015-06-09 20:29:02,733 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Sector sector0_]
  2015-06-09 20:29:02,733 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,733 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Sector)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'sector0_.sectorID as sectorID1_29_' {alias=s, className=com.cmm.jft.trading.securities.Sector, tableAlias=sector0_}
    |  \-[SQL_TOKEN] SqlFragment: 'sector0_.SectorName as SectorNa2_29_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[sector0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Sector sector0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Sector,tableAlias=sector0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Sector}}

  2015-06-09 20:29:02,733 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,733 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Sector s
  2015-06-09 20:29:02,733 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select sector0_.sectorID as sectorID1_29_, sector0_.SectorName as SectorNa2_29_ from Sector sector0_
  2015-06-09 20:29:02,733 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,733 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: JournalEntry.findAll
  2015-06-09 20:29:02,733 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e
  2015-06-09 20:29:02,736 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'JournalEntry'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'e'

  2015-06-09 20:29:02,736 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,736 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,736 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.JournalEntry (e) -> journalent0_
  2015-06-09 20:29:02,736 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:29:02,736 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,736 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} journalent0_.entryID ) ( FromClause{level=1} JournalEntry journalent0_ ) )
  2015-06-09 20:29:02,737 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [JournalEntry journalent0_]
  2015-06-09 20:29:02,737 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,737 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JournalEntry)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID as entryID1_20_' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
    |  \-[SQL_TOKEN] SqlFragment: 'journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[journalent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'JournalEntry journalent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JournalEntry,tableAlias=journalent0_,origin=null,columns={,className=com.cmm.jft.financial.JournalEntry}}

  2015-06-09 20:29:02,737 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,737 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e
  2015-06-09 20:29:02,737 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select journalent0_.entryID as entryID1_20_, journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_ from JournalEntry journalent0_
  2015-06-09 20:29:02,737 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,737 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: JournalEntry.findByDescription
  2015-06-09 20:29:02,737 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.description = :description
  2015-06-09 20:29:02,740 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'JournalEntry'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'description'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'description'

  2015-06-09 20:29:02,740 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,740 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,740 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.JournalEntry (e) -> journalent0_
  2015-06-09 20:29:02,740 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:29:02,740 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:29:02,741 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : description -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,741 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.description -> journalent0_.Description
  2015-06-09 20:29:02,741 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,741 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} journalent0_.entryID ) ( FromClause{level=1} JournalEntry journalent0_ ) ( WHERE ( = ( journalent0_.Description journalent0_.entryID description ) ? ) ) )
  2015-06-09 20:29:02,741 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [JournalEntry journalent0_]
  2015-06-09 20:29:02,741 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,742 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JournalEntry)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID as entryID1_20_' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
    |  \-[SQL_TOKEN] SqlFragment: 'journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[journalent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JournalEntry journalent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JournalEntry,tableAlias=journalent0_,origin=null,columns={,className=com.cmm.jft.financial.JournalEntry}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'journalent0_.Description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=e.description,tableAlias=journalent0_,className=com.cmm.jft.financial.JournalEntry,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[NAMED_PARAM] ParameterNode: '?' {name=description, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,742 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,742 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.description = :description
  2015-06-09 20:29:02,742 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select journalent0_.entryID as entryID1_20_, journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_ from JournalEntry journalent0_ where journalent0_.Description=?
  2015-06-09 20:29:02,742 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,742 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: MarketTrade.findAll
  2015-06-09 20:29:02,742 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m
  2015-06-09 20:29:02,743 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'marketdata'
       |     |  \-[IDENT] Node: 'MarketTrade'
       |     \-[ALIAS] Node: 'm'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'm'

  2015-06-09 20:29:02,743 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,744 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,745 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.marketdata.MarketTrade (m) -> markettrad0_
  2015-06-09 20:29:02,745 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:29:02,745 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,745 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} markettrad0_.marketTradeID ) ( FromClause{level=1} MarketTrade markettrad0_ ) )
  2015-06-09 20:29:02,745 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [MarketTrade markettrad0_]
  2015-06-09 20:29:02,745 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,745 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (MarketTrade)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID as marketTr1_23_' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
    |  \-[SQL_TOKEN] SqlFragment: 'markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[m], fromElementByTableAlias=[markettrad0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'MarketTrade markettrad0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=MarketTrade,tableAlias=markettrad0_,origin=null,columns={,className=com.cmm.jft.trading.marketdata.MarketTrade}}

  2015-06-09 20:29:02,746 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,746 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m
  2015-06-09 20:29:02,746 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select markettrad0_.marketTradeID as marketTr1_23_, markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_ from MarketTrade markettrad0_
  2015-06-09 20:29:02,746 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,746 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Sector.findBySectorID
  2015-06-09 20:29:02,747 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Sector s WHERE s.sectorID = :sectorID
  2015-06-09 20:29:02,748 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Sector'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'sectorID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'sectorID'

  2015-06-09 20:29:02,748 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,749 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,749 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Sector (s) -> sector0_
  2015-06-09 20:29:02,749 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> sector0_.sectorID
  2015-06-09 20:29:02,749 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> sector0_.sectorID
  2015-06-09 20:29:02,749 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : sectorID -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:02,749 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s.sectorID -> sector0_.sectorID
  2015-06-09 20:29:02,749 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,749 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} sector0_.sectorID ) ( FromClause{level=1} Sector sector0_ ) ( WHERE ( = ( sector0_.sectorID sector0_.sectorID sectorID ) ? ) ) )
  2015-06-09 20:29:02,749 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Sector sector0_]
  2015-06-09 20:29:02,749 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,750 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Sector)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'sector0_.sectorID as sectorID1_29_' {alias=s, className=com.cmm.jft.trading.securities.Sector, tableAlias=sector0_}
    |  \-[SQL_TOKEN] SqlFragment: 'sector0_.SectorName as SectorNa2_29_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[sector0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Sector sector0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Sector,tableAlias=sector0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Sector}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'sector0_.sectorID' {propertyName=sectorID,dereferenceType=PRIMITIVE,getPropertyPath=sectorID,path=s.sectorID,tableAlias=sector0_,className=com.cmm.jft.trading.securities.Sector,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'sector0_.sectorID' {alias=s, className=com.cmm.jft.trading.securities.Sector, tableAlias=sector0_}
          |  \-[IDENT] IdentNode: 'sectorID' {originalText=sectorID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=sectorID, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:02,750 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,750 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Sector s WHERE s.sectorID = :sectorID
  2015-06-09 20:29:02,750 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select sector0_.sectorID as sectorID1_29_, sector0_.SectorName as SectorNa2_29_ from Sector sector0_ where sector0_.sectorID=?
  2015-06-09 20:29:02,750 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,750 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Company.findByOnShares
  2015-06-09 20:29:02,750 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c WHERE c.onShares = :onShares
  2015-06-09 20:29:02,756 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Company'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'onShares'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'onShares'

  2015-06-09 20:29:02,756 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,756 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,756 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Company (c) -> company0_
  2015-06-09 20:29:02,757 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:29:02,757 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:29:02,757 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : onShares -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:02,757 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.onShares -> company0_.OnShares
  2015-06-09 20:29:02,757 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,757 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} company0_.companyID ) ( FromClause{level=1} Company company0_ ) ( WHERE ( = ( company0_.OnShares company0_.companyID onShares ) ? ) ) )
  2015-06-09 20:29:02,757 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Company company0_]
  2015-06-09 20:29:02,757 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,757 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Company)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'company0_.companyID as companyI1_4_' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
    |  \-[SQL_TOKEN] SqlFragment: 'company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[company0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Company company0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Company,tableAlias=company0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Company}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'company0_.OnShares' {propertyName=onShares,dereferenceType=PRIMITIVE,getPropertyPath=onShares,path=c.onShares,tableAlias=company0_,className=com.cmm.jft.trading.securities.Company,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'company0_.companyID' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
          |  \-[IDENT] IdentNode: 'onShares' {originalText=onShares}
          \-[NAMED_PARAM] ParameterNode: '?' {name=onShares, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:02,757 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,757 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c WHERE c.onShares = :onShares
  2015-06-09 20:29:02,757 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select company0_.companyID as companyI1_4_, company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_ from Company company0_ where company0_.OnShares=?
  2015-06-09 20:29:02,757 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,758 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Account.findByOpen
  2015-06-09 20:29:02,758 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.open = :open
  2015-06-09 20:29:02,761 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'open'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'open'

  2015-06-09 20:29:02,761 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,761 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,761 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Account (a) -> account0_
  2015-06-09 20:29:02,762 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:29:02,762 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:29:02,762 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : open -> org.hibernate.type.BooleanType@6fdb1f78
  2015-06-09 20:29:02,762 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a.open -> account0_.Open
  2015-06-09 20:29:02,762 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,762 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} account0_.accountID ) ( FromClause{level=1} Account account0_ ) ( WHERE ( = ( account0_.Open account0_.accountID open ) ? ) ) )
  2015-06-09 20:29:02,762 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Account account0_]
  2015-06-09 20:29:02,762 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,762 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountID as accountI1_0_' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.cmm.jft.financial.Account}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.Open' {propertyName=open,dereferenceType=PRIMITIVE,getPropertyPath=open,path=a.open,tableAlias=account0_,className=com.cmm.jft.financial.Account,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'account0_.accountID' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'open' {originalText=open}
          \-[NAMED_PARAM] ParameterNode: '?' {name=open, expectedType=org.hibernate.type.BooleanType@6fdb1f78}

  2015-06-09 20:29:02,762 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,763 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.open = :open
  2015-06-09 20:29:02,763 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select account0_.accountID as accountI1_0_, account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_ from Account account0_ where account0_.Open=?
  2015-06-09 20:29:02,763 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,763 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Orders.findByOrderID
  2015-06-09 20:29:02,763 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.orderID = :orderID
  2015-06-09 20:29:02,766 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'trading'
    |  |     |  \-[IDENT] Node: 'Orders'
    |  |     \-[ALIAS] Node: 'o'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'o'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'o'
          |  \-[IDENT] Node: 'orderID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'orderID'

  2015-06-09 20:29:02,766 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,767 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,768 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.Orders (o) -> orders0_
  2015-06-09 20:29:02,769 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:29:02,769 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:29:02,769 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : orderID -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:02,769 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o.orderID -> orders0_.orderID
  2015-06-09 20:29:02,769 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,772 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} orders0_.orderID ) ( FromClause{level=1} Orders orders0_ ) ( WHERE ( = ( orders0_.orderID orders0_.orderID orderID ) ? ) ) )
  2015-06-09 20:29:02,772 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Orders orders0_]
  2015-06-09 20:29:02,772 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,772 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID as orderID1_26_' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
    |  \-[SQL_TOKEN] SqlFragment: 'orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[orders0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Orders orders0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=Orders,tableAlias=orders0_,origin=null,columns={,className=com.cmm.jft.trading.Orders}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'orders0_.orderID' {propertyName=orderID,dereferenceType=PRIMITIVE,getPropertyPath=orderID,path=o.orderID,tableAlias=orders0_,className=com.cmm.jft.trading.Orders,classAlias=o}
          |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
          |  \-[IDENT] IdentNode: 'orderID' {originalText=orderID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=orderID, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:02,772 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,772 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.orderID = :orderID
  2015-06-09 20:29:02,772 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select orders0_.orderID as orderID1_26_, orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_ from Orders orders0_ where orders0_.orderID=?
  2015-06-09 20:29:02,772 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,772 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: EntryRegister.findByCredit
  2015-06-09 20:29:02,773 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.credit = :credit
  2015-06-09 20:29:02,774 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'EntryRegister'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'credit'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'credit'

  2015-06-09 20:29:02,774 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,775 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,775 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.EntryRegister (e) -> entryregis0_
  2015-06-09 20:29:02,775 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:29:02,775 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:29:02,775 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : credit -> org.hibernate.type.BigDecimalType@21a06946
  2015-06-09 20:29:02,776 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.credit -> entryregis0_.Credit
  2015-06-09 20:29:02,776 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,776 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} entryregis0_.entryRegisterID ) ( FromClause{level=1} EntryRegister entryregis0_ ) ( WHERE ( = ( entryregis0_.Credit entryregis0_.entryRegisterID credit ) ? ) ) )
  2015-06-09 20:29:02,777 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [EntryRegister entryregis0_]
  2015-06-09 20:29:02,777 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,777 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EntryRegister)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID as entryReg1_14_' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
    |  \-[SQL_TOKEN] SqlFragment: 'entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[entryregis0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EntryRegister entryregis0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=EntryRegister,tableAlias=entryregis0_,origin=null,columns={,className=com.cmm.jft.financial.EntryRegister}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'entryregis0_.Credit' {propertyName=credit,dereferenceType=PRIMITIVE,getPropertyPath=credit,path=e.credit,tableAlias=entryregis0_,className=com.cmm.jft.financial.EntryRegister,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
          |  \-[IDENT] IdentNode: 'credit' {originalText=credit}
          \-[NAMED_PARAM] ParameterNode: '?' {name=credit, expectedType=org.hibernate.type.BigDecimalType@21a06946}

  2015-06-09 20:29:02,777 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,777 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.credit = :credit
  2015-06-09 20:29:02,777 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select entryregis0_.entryRegisterID as entryReg1_14_, entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_ from EntryRegister entryregis0_ where entryregis0_.Credit=?
  2015-06-09 20:29:02,777 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,778 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Deposit.findAll
  2015-06-09 20:29:02,778 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.Deposit d
  2015-06-09 20:29:02,779 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'Deposit'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'd'

  2015-06-09 20:29:02,779 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,779 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,780 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Deposit (d) -> deposit0_
  2015-06-09 20:29:02,781 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:29:02,781 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,781 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} deposit0_.depositID ) ( FromClause{level=1} Deposit deposit0_ ) )
  2015-06-09 20:29:02,781 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Deposit deposit0_]
  2015-06-09 20:29:02,781 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,781 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Deposit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID as depositI1_11_' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[deposit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Deposit deposit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=Deposit,tableAlias=deposit0_,origin=null,columns={,className=com.cmm.jft.financial.Deposit}}

  2015-06-09 20:29:02,781 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,781 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.Deposit d
  2015-06-09 20:29:02,781 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select deposit0_.depositID as depositI1_11_, deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_ from Deposit deposit0_
  2015-06-09 20:29:02,781 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,782 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: JournalEntry.findByEntryID
  2015-06-09 20:29:02,782 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.entryID = :entryID
  2015-06-09 20:29:02,784 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'JournalEntry'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'entryID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'entryID'

  2015-06-09 20:29:02,784 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,784 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,785 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.JournalEntry (e) -> journalent0_
  2015-06-09 20:29:02,785 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:29:02,785 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:29:02,785 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : entryID -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:02,785 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.entryID -> journalent0_.entryID
  2015-06-09 20:29:02,785 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,785 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} journalent0_.entryID ) ( FromClause{level=1} JournalEntry journalent0_ ) ( WHERE ( = ( journalent0_.entryID journalent0_.entryID entryID ) ? ) ) )
  2015-06-09 20:29:02,785 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [JournalEntry journalent0_]
  2015-06-09 20:29:02,786 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,786 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JournalEntry)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID as entryID1_20_' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
    |  \-[SQL_TOKEN] SqlFragment: 'journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[journalent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JournalEntry journalent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JournalEntry,tableAlias=journalent0_,origin=null,columns={,className=com.cmm.jft.financial.JournalEntry}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'journalent0_.entryID' {propertyName=entryID,dereferenceType=PRIMITIVE,getPropertyPath=entryID,path=e.entryID,tableAlias=journalent0_,className=com.cmm.jft.financial.JournalEntry,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
          |  \-[IDENT] IdentNode: 'entryID' {originalText=entryID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=entryID, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:02,786 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,786 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.entryID = :entryID
  2015-06-09 20:29:02,786 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select journalent0_.entryID as entryID1_20_, journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_ from JournalEntry journalent0_ where journalent0_.entryID=?
  2015-06-09 20:29:02,786 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,786 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Orders.findByExecutedVolume
  2015-06-09 20:29:02,786 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.executedVolume = :executedVolume
  2015-06-09 20:29:02,788 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'trading'
    |  |     |  \-[IDENT] Node: 'Orders'
    |  |     \-[ALIAS] Node: 'o'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'o'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'o'
          |  \-[IDENT] Node: 'executedVolume'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'executedVolume'

  2015-06-09 20:29:02,788 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,788 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,788 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.Orders (o) -> orders0_
  2015-06-09 20:29:02,788 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:29:02,788 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:29:02,788 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : executedVolume -> org.hibernate.type.IntegerType@67117f44
  2015-06-09 20:29:02,788 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o.executedVolume -> orders0_.ExecutedVolume
  2015-06-09 20:29:02,789 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,789 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} orders0_.orderID ) ( FromClause{level=1} Orders orders0_ ) ( WHERE ( = ( orders0_.ExecutedVolume orders0_.orderID executedVolume ) ? ) ) )
  2015-06-09 20:29:02,789 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Orders orders0_]
  2015-06-09 20:29:02,789 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,789 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID as orderID1_26_' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
    |  \-[SQL_TOKEN] SqlFragment: 'orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[orders0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Orders orders0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=Orders,tableAlias=orders0_,origin=null,columns={,className=com.cmm.jft.trading.Orders}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'orders0_.ExecutedVolume' {propertyName=executedVolume,dereferenceType=PRIMITIVE,getPropertyPath=executedVolume,path=o.executedVolume,tableAlias=orders0_,className=com.cmm.jft.trading.Orders,classAlias=o}
          |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
          |  \-[IDENT] IdentNode: 'executedVolume' {originalText=executedVolume}
          \-[NAMED_PARAM] ParameterNode: '?' {name=executedVolume, expectedType=org.hibernate.type.IntegerType@67117f44}

  2015-06-09 20:29:02,789 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,790 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.executedVolume = :executedVolume
  2015-06-09 20:29:02,790 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select orders0_.orderID as orderID1_26_, orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_ from Orders orders0_ where orders0_.ExecutedVolume=?
  2015-06-09 20:29:02,790 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,791 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Country.findAll
  2015-06-09 20:29:02,791 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: select c from com.cmm.jft.trading.securities.Country c
  2015-06-09 20:29:02,805 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Country'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'c'

  2015-06-09 20:29:02,805 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,805 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,805 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Country (c) -> country0_
  2015-06-09 20:29:02,805 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> country0_.countryID
  2015-06-09 20:29:02,805 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,805 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} country0_.countryID ) ( FromClause{level=1} Country country0_ ) )
  2015-06-09 20:29:02,805 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Country country0_]
  2015-06-09 20:29:02,806 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,806 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Country)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'country0_.countryID as countryI1_8_' {alias=c, className=com.cmm.jft.trading.securities.Country, tableAlias=country0_}
    |  \-[SQL_TOKEN] SqlFragment: 'country0_.Area as Area2_8_, country0_.Continent as Continen3_8_, country0_.CountryName as CountryN4_8_, country0_.Population as Populati5_8_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[country0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Country country0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Country,tableAlias=country0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Country}}

  2015-06-09 20:29:02,806 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,806 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: select c from com.cmm.jft.trading.securities.Country c
  2015-06-09 20:29:02,806 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select country0_.countryID as countryI1_8_, country0_.Area as Area2_8_, country0_.Continent as Continen3_8_, country0_.CountryName as CountryN4_8_, country0_.Population as Populati5_8_ from Country country0_
  2015-06-09 20:29:02,806 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,806 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Index.findByIndexID
  2015-06-09 20:29:02,806 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT i FROM com.cmm.jft.trading.securities.Index i WHERE i.indexID = :indexID
  2015-06-09 20:29:02,816 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Index'
    |  |     \-[ALIAS] Node: 'i'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'i'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'i'
          |  \-[IDENT] Node: 'indexID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'indexID'

  2015-06-09 20:29:02,817 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,817 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,817 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Index (i) -> index0_
  2015-06-09 20:29:02,817 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> index0_.indexID
  2015-06-09 20:29:02,817 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> index0_.indexID
  2015-06-09 20:29:02,817 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : indexID -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:02,817 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i.indexID -> index0_.indexID
  2015-06-09 20:29:02,817 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,817 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} index0_.indexID ) ( FromClause{level=1} Index index0_ ) ( WHERE ( = ( index0_.indexID index0_.indexID indexID ) ? ) ) )
  2015-06-09 20:29:02,817 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Index index0_]
  2015-06-09 20:29:02,819 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,840 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Index)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'index0_.indexID as indexID1_17_' {alias=i, className=com.cmm.jft.trading.securities.Index, tableAlias=index0_}
    |  \-[SQL_TOKEN] SqlFragment: 'index0_.Index as Index2_17_, index0_.IndexName as IndexNam3_17_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[i], fromElementByTableAlias=[index0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Index index0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=Index,tableAlias=index0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Index}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'index0_.indexID' {propertyName=indexID,dereferenceType=PRIMITIVE,getPropertyPath=indexID,path=i.indexID,tableAlias=index0_,className=com.cmm.jft.trading.securities.Index,classAlias=i}
          |  +-[ALIAS_REF] IdentNode: 'index0_.indexID' {alias=i, className=com.cmm.jft.trading.securities.Index, tableAlias=index0_}
          |  \-[IDENT] IdentNode: 'indexID' {originalText=indexID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=indexID, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:02,840 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,840 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT i FROM com.cmm.jft.trading.securities.Index i WHERE i.indexID = :indexID
  2015-06-09 20:29:02,840 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select index0_.indexID as indexID1_17_, index0_.Index as Index2_17_, index0_.IndexName as IndexNam3_17_ from Index index0_ where index0_.indexID=?
  2015-06-09 20:29:02,840 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,840 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Segment.findAll
  2015-06-09 20:29:02,845 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Segment s
  2015-06-09 20:29:02,847 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Segment'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 's'

  2015-06-09 20:29:02,847 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,848 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,848 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Segment (s) -> segment0_
  2015-06-09 20:29:02,848 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> segment0_.segmentID
  2015-06-09 20:29:02,848 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,848 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} segment0_.segmentID ) ( FromClause{level=1} Segment segment0_ ) )
  2015-06-09 20:29:02,848 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Segment segment0_]
  2015-06-09 20:29:02,848 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,848 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Segment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'segment0_.segmentID as segmentI1_32_' {alias=s, className=com.cmm.jft.trading.securities.Segment, tableAlias=segment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'segment0_.SegmentName as SegmentN2_32_, segment0_.subsectorID as subsecto3_32_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[segment0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Segment segment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Segment,tableAlias=segment0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Segment}}

  2015-06-09 20:29:02,848 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,848 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Segment s
  2015-06-09 20:29:02,848 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select segment0_.segmentID as segmentI1_32_, segment0_.SegmentName as SegmentN2_32_, segment0_.subsectorID as subsecto3_32_ from Segment segment0_
  2015-06-09 20:29:02,848 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,849 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: TaxSetup.findAll
  2015-06-09 20:29:02,849 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t
  2015-06-09 20:29:02,850 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'TaxSetup'
       |     \-[ALIAS] Node: 't'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 't'

  2015-06-09 20:29:02,850 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,850 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,850 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.TaxSetup (t) -> taxsetup0_
  2015-06-09 20:29:02,850 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:29:02,850 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,850 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} taxsetup0_.taxSetupID ) ( FromClause{level=1} TaxSetup taxsetup0_ ) )
  2015-06-09 20:29:02,851 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [TaxSetup taxsetup0_]
  2015-06-09 20:29:02,851 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,851 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TaxSetup)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID as taxSetup1_36_' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
    |  \-[SQL_TOKEN] SqlFragment: 'taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[taxsetup0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TaxSetup taxsetup0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=TaxSetup,tableAlias=taxsetup0_,origin=null,columns={,className=com.cmm.jft.financial.TaxSetup}}

  2015-06-09 20:29:02,851 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,851 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t
  2015-06-09 20:29:02,851 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select taxsetup0_.taxSetupID as taxSetup1_36_, taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_ from TaxSetup taxsetup0_
  2015-06-09 20:29:02,851 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,851 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Subsector.findBySubsectorName
  2015-06-09 20:29:02,851 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Subsector s WHERE s.subsectorName = :subsectorName
  2015-06-09 20:29:02,857 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Subsector'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'subsectorName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'subsectorName'

  2015-06-09 20:29:02,857 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,858 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,858 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Subsector (s) -> subsector0_
  2015-06-09 20:29:02,858 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> subsector0_.subsectorID
  2015-06-09 20:29:02,858 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> subsector0_.subsectorID
  2015-06-09 20:29:02,858 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : subsectorName -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,858 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s.subsectorName -> subsector0_.SubsectorName
  2015-06-09 20:29:02,858 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,858 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} subsector0_.subsectorID ) ( FromClause{level=1} Subsector subsector0_ ) ( WHERE ( = ( subsector0_.SubsectorName subsector0_.subsectorID subsectorName ) ? ) ) )
  2015-06-09 20:29:02,858 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Subsector subsector0_]
  2015-06-09 20:29:02,858 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,858 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Subsector)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'subsector0_.subsectorID as subsecto1_34_' {alias=s, className=com.cmm.jft.trading.securities.Subsector, tableAlias=subsector0_}
    |  \-[SQL_TOKEN] SqlFragment: 'subsector0_.sectorID as sectorID3_34_, subsector0_.SubsectorName as Subsecto2_34_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[subsector0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Subsector subsector0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Subsector,tableAlias=subsector0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Subsector}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'subsector0_.SubsectorName' {propertyName=subsectorName,dereferenceType=PRIMITIVE,getPropertyPath=subsectorName,path=s.subsectorName,tableAlias=subsector0_,className=com.cmm.jft.trading.securities.Subsector,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'subsector0_.subsectorID' {alias=s, className=com.cmm.jft.trading.securities.Subsector, tableAlias=subsector0_}
          |  \-[IDENT] IdentNode: 'subsectorName' {originalText=subsectorName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=subsectorName, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,858 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,858 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Subsector s WHERE s.subsectorName = :subsectorName
  2015-06-09 20:29:02,858 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select subsector0_.subsectorID as subsecto1_34_, subsector0_.sectorID as sectorID3_34_, subsector0_.SubsectorName as Subsecto2_34_ from Subsector subsector0_ where subsector0_.SubsectorName=?
  2015-06-09 20:29:02,858 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,861 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: DistributionRule.findByDistributionRuleID
  2015-06-09 20:29:02,861 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.DistributionRule d WHERE d.distributionRuleID = :distributionRuleID
  2015-06-09 20:29:02,864 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'DistributionRule'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'distributionRuleID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'distributionRuleID'

  2015-06-09 20:29:02,864 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,864 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,864 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.DistributionRule (d) -> distributi0_
  2015-06-09 20:29:02,864 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> distributi0_.distributionRuleID
  2015-06-09 20:29:02,864 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> distributi0_.distributionRuleID
  2015-06-09 20:29:02,864 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : distributionRuleID -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:02,864 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d.distributionRuleID -> distributi0_.distributionRuleID
  2015-06-09 20:29:02,864 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,864 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} distributi0_.distributionRuleID ) ( FromClause{level=1} DistributionRule distributi0_ ) ( WHERE ( = ( distributi0_.distributionRuleID distributi0_.distributionRuleID distributionRuleID ) ? ) ) )
  2015-06-09 20:29:02,864 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [DistributionRule distributi0_]
  2015-06-09 20:29:02,865 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,865 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (DistributionRule)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'distributi0_.distributionRuleID as distribu1_12_' {alias=d, className=com.cmm.jft.financial.DistributionRule, tableAlias=distributi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'distributi0_.ObjectRule as ObjectRu2_12_, distributi0_.RuleName as RuleName3_12_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[distributi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'DistributionRule distributi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=DistributionRule,tableAlias=distributi0_,origin=null,columns={,className=com.cmm.jft.financial.DistributionRule}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'distributi0_.distributionRuleID' {propertyName=distributionRuleID,dereferenceType=PRIMITIVE,getPropertyPath=distributionRuleID,path=d.distributionRuleID,tableAlias=distributi0_,className=com.cmm.jft.financial.DistributionRule,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'distributi0_.distributionRuleID' {alias=d, className=com.cmm.jft.financial.DistributionRule, tableAlias=distributi0_}
          |  \-[IDENT] IdentNode: 'distributionRuleID' {originalText=distributionRuleID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=distributionRuleID, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:02,865 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,865 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.DistributionRule d WHERE d.distributionRuleID = :distributionRuleID
  2015-06-09 20:29:02,865 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select distributi0_.distributionRuleID as distribu1_12_, distributi0_.ObjectRule as ObjectRu2_12_, distributi0_.RuleName as RuleName3_12_ from DistributionRule distributi0_ where distributi0_.distributionRuleID=?
  2015-06-09 20:29:02,865 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,865 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Currency.findAll
  2015-06-09 20:29:02,865 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.financial.Currency c
  2015-06-09 20:29:02,866 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'Currency'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

  2015-06-09 20:29:02,866 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,866 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,866 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Currency (c) -> currency0_
  2015-06-09 20:29:02,867 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currency0_.currencyID
  2015-06-09 20:29:02,867 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,867 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} currency0_.currencyID ) ( FromClause{level=1} Currency currency0_ ) )
  2015-06-09 20:29:02,867 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Currency currency0_]
  2015-06-09 20:29:02,867 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,867 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Currency)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currency0_.currencyID as currency1_9_' {alias=c, className=com.cmm.jft.financial.Currency, tableAlias=currency0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currency0_.CurrSymbol as CurrSymb2_9_, currency0_.Description as Descript3_9_, currency0_.FractionalUnit as Fraction4_9_, currency0_.Sign as Sign5_9_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currency0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Currency currency0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Currency,tableAlias=currency0_,origin=null,columns={,className=com.cmm.jft.financial.Currency}}

  2015-06-09 20:29:02,867 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,867 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.financial.Currency c
  2015-06-09 20:29:02,867 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select currency0_.currencyID as currency1_9_, currency0_.CurrSymbol as CurrSymb2_9_, currency0_.Description as Descript3_9_, currency0_.FractionalUnit as Fraction4_9_, currency0_.Sign as Sign5_9_ from Currency currency0_
  2015-06-09 20:29:02,867 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,868 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Segment.findBySegmentID
  2015-06-09 20:29:02,868 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Segment s WHERE s.segmentID = :segmentID
  2015-06-09 20:29:02,870 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Segment'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'segmentID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'segmentID'

  2015-06-09 20:29:02,870 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,870 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,870 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Segment (s) -> segment0_
  2015-06-09 20:29:02,870 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> segment0_.segmentID
  2015-06-09 20:29:02,870 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> segment0_.segmentID
  2015-06-09 20:29:02,870 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : segmentID -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:02,870 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s.segmentID -> segment0_.segmentID
  2015-06-09 20:29:02,870 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,870 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} segment0_.segmentID ) ( FromClause{level=1} Segment segment0_ ) ( WHERE ( = ( segment0_.segmentID segment0_.segmentID segmentID ) ? ) ) )
  2015-06-09 20:29:02,871 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Segment segment0_]
  2015-06-09 20:29:02,871 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,871 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Segment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'segment0_.segmentID as segmentI1_32_' {alias=s, className=com.cmm.jft.trading.securities.Segment, tableAlias=segment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'segment0_.SegmentName as SegmentN2_32_, segment0_.subsectorID as subsecto3_32_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[segment0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Segment segment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Segment,tableAlias=segment0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Segment}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'segment0_.segmentID' {propertyName=segmentID,dereferenceType=PRIMITIVE,getPropertyPath=segmentID,path=s.segmentID,tableAlias=segment0_,className=com.cmm.jft.trading.securities.Segment,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'segment0_.segmentID' {alias=s, className=com.cmm.jft.trading.securities.Segment, tableAlias=segment0_}
          |  \-[IDENT] IdentNode: 'segmentID' {originalText=segmentID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=segmentID, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:02,871 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,871 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Segment s WHERE s.segmentID = :segmentID
  2015-06-09 20:29:02,871 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select segment0_.segmentID as segmentI1_32_, segment0_.SegmentName as SegmentN2_32_, segment0_.subsectorID as subsecto3_32_ from Segment segment0_ where segment0_.segmentID=?
  2015-06-09 20:29:02,871 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,871 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: TaxSetup.findByAliquota
  2015-06-09 20:29:02,871 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t WHERE t.aliquota = :aliquota
  2015-06-09 20:29:02,873 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'TaxSetup'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'aliquota'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'aliquota'

  2015-06-09 20:29:02,873 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,873 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,873 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.TaxSetup (t) -> taxsetup0_
  2015-06-09 20:29:02,874 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:29:02,874 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:29:02,874 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : aliquota -> org.hibernate.type.FloatType@1bc6a36e
  2015-06-09 20:29:02,874 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t.aliquota -> taxsetup0_.Aliquota
  2015-06-09 20:29:02,874 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,874 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} taxsetup0_.taxSetupID ) ( FromClause{level=1} TaxSetup taxsetup0_ ) ( WHERE ( = ( taxsetup0_.Aliquota taxsetup0_.taxSetupID aliquota ) ? ) ) )
  2015-06-09 20:29:02,874 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [TaxSetup taxsetup0_]
  2015-06-09 20:29:02,874 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,874 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TaxSetup)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID as taxSetup1_36_' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
    |  \-[SQL_TOKEN] SqlFragment: 'taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[taxsetup0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'TaxSetup taxsetup0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=TaxSetup,tableAlias=taxsetup0_,origin=null,columns={,className=com.cmm.jft.financial.TaxSetup}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'taxsetup0_.Aliquota' {propertyName=aliquota,dereferenceType=PRIMITIVE,getPropertyPath=aliquota,path=t.aliquota,tableAlias=taxsetup0_,className=com.cmm.jft.financial.TaxSetup,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
          |  \-[IDENT] IdentNode: 'aliquota' {originalText=aliquota}
          \-[NAMED_PARAM] ParameterNode: '?' {name=aliquota, expectedType=org.hibernate.type.FloatType@1bc6a36e}

  2015-06-09 20:29:02,874 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,874 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t WHERE t.aliquota = :aliquota
  2015-06-09 20:29:02,874 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select taxsetup0_.taxSetupID as taxSetup1_36_, taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_ from TaxSetup taxsetup0_ where taxsetup0_.Aliquota=?
  2015-06-09 20:29:02,874 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,875 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Isin.findAll
  2015-06-09 20:29:02,875 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT i FROM com.cmm.jft.trading.securities.Isin i
  2015-06-09 20:29:02,876 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Isin'
       |     \-[ALIAS] Node: 'i'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'i'

  2015-06-09 20:29:02,876 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,877 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,877 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Isin (i) -> isin0_
  2015-06-09 20:29:02,877 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> isin0_.isinID
  2015-06-09 20:29:02,877 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,877 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} isin0_.isinID ) ( FromClause{level=1} Isin isin0_ ) )
  2015-06-09 20:29:02,877 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Isin isin0_]
  2015-06-09 20:29:02,877 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,877 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Isin)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'isin0_.isinID as isinID1_19_' {alias=i, className=com.cmm.jft.trading.securities.Isin, tableAlias=isin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'isin0_.Description as Descript2_19_, isin0_.ISIN as ISIN3_19_, isin0_.Status as Status4_19_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[i], fromElementByTableAlias=[isin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Isin isin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=Isin,tableAlias=isin0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Isin}}

  2015-06-09 20:29:02,877 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,877 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT i FROM com.cmm.jft.trading.securities.Isin i
  2015-06-09 20:29:02,877 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select isin0_.isinID as isinID1_19_, isin0_.Description as Descript2_19_, isin0_.ISIN as ISIN3_19_, isin0_.Status as Status4_19_ from Isin isin0_
  2015-06-09 20:29:02,877 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,877 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Sector.findBySectorName
  2015-06-09 20:29:02,878 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Sector s WHERE s.sectorName = :sectorName
  2015-06-09 20:29:02,889 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Sector'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'sectorName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'sectorName'

  2015-06-09 20:29:02,889 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,889 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,889 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Sector (s) -> sector0_
  2015-06-09 20:29:02,889 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> sector0_.sectorID
  2015-06-09 20:29:02,889 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> sector0_.sectorID
  2015-06-09 20:29:02,890 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : sectorName -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,890 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s.sectorName -> sector0_.SectorName
  2015-06-09 20:29:02,890 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,890 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} sector0_.sectorID ) ( FromClause{level=1} Sector sector0_ ) ( WHERE ( = ( sector0_.SectorName sector0_.sectorID sectorName ) ? ) ) )
  2015-06-09 20:29:02,890 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Sector sector0_]
  2015-06-09 20:29:02,890 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,890 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Sector)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'sector0_.sectorID as sectorID1_29_' {alias=s, className=com.cmm.jft.trading.securities.Sector, tableAlias=sector0_}
    |  \-[SQL_TOKEN] SqlFragment: 'sector0_.SectorName as SectorNa2_29_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[sector0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Sector sector0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Sector,tableAlias=sector0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Sector}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'sector0_.SectorName' {propertyName=sectorName,dereferenceType=PRIMITIVE,getPropertyPath=sectorName,path=s.sectorName,tableAlias=sector0_,className=com.cmm.jft.trading.securities.Sector,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'sector0_.sectorID' {alias=s, className=com.cmm.jft.trading.securities.Sector, tableAlias=sector0_}
          |  \-[IDENT] IdentNode: 'sectorName' {originalText=sectorName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=sectorName, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,890 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,891 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Sector s WHERE s.sectorName = :sectorName
  2015-06-09 20:29:02,891 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select sector0_.sectorID as sectorID1_29_, sector0_.SectorName as SectorNa2_29_ from Sector sector0_ where sector0_.SectorName=?
  2015-06-09 20:29:02,891 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,891 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Company.findByCompanyName
  2015-06-09 20:29:02,891 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c WHERE c.companyName = :companyName
  2015-06-09 20:29:02,893 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Company'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'companyName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'companyName'

  2015-06-09 20:29:02,893 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,893 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,893 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Company (c) -> company0_
  2015-06-09 20:29:02,893 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:29:02,893 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:29:02,893 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : companyName -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,893 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.companyName -> company0_.CompanyName
  2015-06-09 20:29:02,893 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,894 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} company0_.companyID ) ( FromClause{level=1} Company company0_ ) ( WHERE ( = ( company0_.CompanyName company0_.companyID companyName ) ? ) ) )
  2015-06-09 20:29:02,894 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Company company0_]
  2015-06-09 20:29:02,894 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,904 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Company)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'company0_.companyID as companyI1_4_' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
    |  \-[SQL_TOKEN] SqlFragment: 'company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[company0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Company company0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Company,tableAlias=company0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Company}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'company0_.CompanyName' {propertyName=companyName,dereferenceType=PRIMITIVE,getPropertyPath=companyName,path=c.companyName,tableAlias=company0_,className=com.cmm.jft.trading.securities.Company,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'company0_.companyID' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
          |  \-[IDENT] IdentNode: 'companyName' {originalText=companyName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=companyName, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,904 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,904 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c WHERE c.companyName = :companyName
  2015-06-09 20:29:02,904 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select company0_.companyID as companyI1_4_, company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_ from Company company0_ where company0_.CompanyName=?
  2015-06-09 20:29:02,904 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,904 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: EntryRegister.findAll
  2015-06-09 20:29:02,905 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e
  2015-06-09 20:29:02,906 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'EntryRegister'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'e'

  2015-06-09 20:29:02,906 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,906 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,906 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.EntryRegister (e) -> entryregis0_
  2015-06-09 20:29:02,906 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:29:02,906 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,906 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} entryregis0_.entryRegisterID ) ( FromClause{level=1} EntryRegister entryregis0_ ) )
  2015-06-09 20:29:02,906 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [EntryRegister entryregis0_]
  2015-06-09 20:29:02,906 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,909 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EntryRegister)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID as entryReg1_14_' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
    |  \-[SQL_TOKEN] SqlFragment: 'entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[entryregis0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'EntryRegister entryregis0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=EntryRegister,tableAlias=entryregis0_,origin=null,columns={,className=com.cmm.jft.financial.EntryRegister}}

  2015-06-09 20:29:02,909 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,909 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e
  2015-06-09 20:29:02,909 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select entryregis0_.entryRegisterID as entryReg1_14_, entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_ from EntryRegister entryregis0_
  2015-06-09 20:29:02,909 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,909 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Currency.findByDescription
  2015-06-09 20:29:02,909 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.financial.Currency c WHERE c.description = :description
  2015-06-09 20:29:02,911 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Currency'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'description'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'description'

  2015-06-09 20:29:02,911 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,911 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,912 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Currency (c) -> currency0_
  2015-06-09 20:29:02,912 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currency0_.currencyID
  2015-06-09 20:29:02,912 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currency0_.currencyID
  2015-06-09 20:29:02,912 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : description -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,912 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.description -> currency0_.Description
  2015-06-09 20:29:02,912 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,912 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} currency0_.currencyID ) ( FromClause{level=1} Currency currency0_ ) ( WHERE ( = ( currency0_.Description currency0_.currencyID description ) ? ) ) )
  2015-06-09 20:29:02,912 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Currency currency0_]
  2015-06-09 20:29:02,912 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,912 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Currency)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currency0_.currencyID as currency1_9_' {alias=c, className=com.cmm.jft.financial.Currency, tableAlias=currency0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currency0_.CurrSymbol as CurrSymb2_9_, currency0_.Description as Descript3_9_, currency0_.FractionalUnit as Fraction4_9_, currency0_.Sign as Sign5_9_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currency0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Currency currency0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Currency,tableAlias=currency0_,origin=null,columns={,className=com.cmm.jft.financial.Currency}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'currency0_.Description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=c.description,tableAlias=currency0_,className=com.cmm.jft.financial.Currency,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'currency0_.currencyID' {alias=c, className=com.cmm.jft.financial.Currency, tableAlias=currency0_}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[NAMED_PARAM] ParameterNode: '?' {name=description, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,912 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,912 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.financial.Currency c WHERE c.description = :description
  2015-06-09 20:29:02,912 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select currency0_.currencyID as currency1_9_, currency0_.CurrSymbol as CurrSymb2_9_, currency0_.Description as Descript3_9_, currency0_.FractionalUnit as Fraction4_9_, currency0_.Sign as Sign5_9_ from Currency currency0_ where currency0_.Description=?
  2015-06-09 20:29:02,912 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,913 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: DistributionRule.findByObjectRule
  2015-06-09 20:29:02,913 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.DistributionRule d WHERE d.objectRule = :objectRule
  2015-06-09 20:29:02,915 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'DistributionRule'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'objectRule'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'objectRule'

  2015-06-09 20:29:02,915 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,915 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,915 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.DistributionRule (d) -> distributi0_
  2015-06-09 20:29:02,915 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> distributi0_.distributionRuleID
  2015-06-09 20:29:02,915 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> distributi0_.distributionRuleID
  2015-06-09 20:29:02,915 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : objectRule -> org.hibernate.type.CustomType@2a551a63
  2015-06-09 20:29:02,915 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d.objectRule -> distributi0_.ObjectRule
  2015-06-09 20:29:02,915 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,915 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} distributi0_.distributionRuleID ) ( FromClause{level=1} DistributionRule distributi0_ ) ( WHERE ( = ( distributi0_.ObjectRule distributi0_.distributionRuleID objectRule ) ? ) ) )
  2015-06-09 20:29:02,915 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [DistributionRule distributi0_]
  2015-06-09 20:29:02,916 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,916 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (DistributionRule)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'distributi0_.distributionRuleID as distribu1_12_' {alias=d, className=com.cmm.jft.financial.DistributionRule, tableAlias=distributi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'distributi0_.ObjectRule as ObjectRu2_12_, distributi0_.RuleName as RuleName3_12_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[distributi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'DistributionRule distributi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=DistributionRule,tableAlias=distributi0_,origin=null,columns={,className=com.cmm.jft.financial.DistributionRule}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'distributi0_.ObjectRule' {propertyName=objectRule,dereferenceType=PRIMITIVE,getPropertyPath=objectRule,path=d.objectRule,tableAlias=distributi0_,className=com.cmm.jft.financial.DistributionRule,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'distributi0_.distributionRuleID' {alias=d, className=com.cmm.jft.financial.DistributionRule, tableAlias=distributi0_}
          |  \-[IDENT] IdentNode: 'objectRule' {originalText=objectRule}
          \-[NAMED_PARAM] ParameterNode: '?' {name=objectRule, expectedType=org.hibernate.type.CustomType@2a551a63}

  2015-06-09 20:29:02,916 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,916 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.DistributionRule d WHERE d.objectRule = :objectRule
  2015-06-09 20:29:02,916 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select distributi0_.distributionRuleID as distribu1_12_, distributi0_.ObjectRule as ObjectRu2_12_, distributi0_.RuleName as RuleName3_12_ from DistributionRule distributi0_ where distributi0_.ObjectRule=?
  2015-06-09 20:29:02,916 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,916 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Orders.findBySide
  2015-06-09 20:29:02,916 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.side = :side
  2015-06-09 20:29:02,918 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'trading'
    |  |     |  \-[IDENT] Node: 'Orders'
    |  |     \-[ALIAS] Node: 'o'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'o'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'o'
          |  \-[IDENT] Node: 'side'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'side'

  2015-06-09 20:29:02,918 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,918 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,918 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.Orders (o) -> orders0_
  2015-06-09 20:29:02,918 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:29:02,918 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:29:02,918 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : side -> org.hibernate.type.CustomType@1edb61b1
  2015-06-09 20:29:02,918 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o.side -> orders0_.Side
  2015-06-09 20:29:02,918 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,918 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} orders0_.orderID ) ( FromClause{level=1} Orders orders0_ ) ( WHERE ( = ( orders0_.Side orders0_.orderID side ) ? ) ) )
  2015-06-09 20:29:02,919 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Orders orders0_]
  2015-06-09 20:29:02,919 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,919 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID as orderID1_26_' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
    |  \-[SQL_TOKEN] SqlFragment: 'orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[orders0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Orders orders0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=Orders,tableAlias=orders0_,origin=null,columns={,className=com.cmm.jft.trading.Orders}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'orders0_.Side' {propertyName=side,dereferenceType=PRIMITIVE,getPropertyPath=side,path=o.side,tableAlias=orders0_,className=com.cmm.jft.trading.Orders,classAlias=o}
          |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
          |  \-[IDENT] IdentNode: 'side' {originalText=side}
          \-[NAMED_PARAM] ParameterNode: '?' {name=side, expectedType=org.hibernate.type.CustomType@1edb61b1}

  2015-06-09 20:29:02,919 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,919 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.side = :side
  2015-06-09 20:29:02,919 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select orders0_.orderID as orderID1_26_, orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_ from Orders orders0_ where orders0_.Side=?
  2015-06-09 20:29:02,919 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,919 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Account.findByAccountID
  2015-06-09 20:29:02,919 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.accountID = :accountID
  2015-06-09 20:29:02,921 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'accountID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'accountID'

  2015-06-09 20:29:02,921 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,921 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,922 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Account (a) -> account0_
  2015-06-09 20:29:02,922 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:29:02,922 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:29:02,922 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : accountID -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,922 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a.accountID -> account0_.accountID
  2015-06-09 20:29:02,922 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,922 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} account0_.accountID ) ( FromClause{level=1} Account account0_ ) ( WHERE ( = ( account0_.accountID account0_.accountID accountID ) ? ) ) )
  2015-06-09 20:29:02,923 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Account account0_]
  2015-06-09 20:29:02,923 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,923 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountID as accountI1_0_' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.cmm.jft.financial.Account}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.accountID' {propertyName=accountID,dereferenceType=PRIMITIVE,getPropertyPath=accountID,path=a.accountID,tableAlias=account0_,className=com.cmm.jft.financial.Account,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'account0_.accountID' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'accountID' {originalText=accountID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=accountID, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,923 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,923 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.accountID = :accountID
  2015-06-09 20:29:02,923 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select account0_.accountID as accountI1_0_, account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_ from Account account0_ where account0_.accountID=?
  2015-06-09 20:29:02,923 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,923 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: TaxSetup.findBySetupName
  2015-06-09 20:29:02,924 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t WHERE t.setupName = :setupName
  2015-06-09 20:29:02,926 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'TaxSetup'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'setupName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'setupName'

  2015-06-09 20:29:02,926 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,926 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,926 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.TaxSetup (t) -> taxsetup0_
  2015-06-09 20:29:02,926 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:29:02,926 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:29:02,926 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : setupName -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,926 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t.setupName -> taxsetup0_.SetupName
  2015-06-09 20:29:02,927 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,927 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} taxsetup0_.taxSetupID ) ( FromClause{level=1} TaxSetup taxsetup0_ ) ( WHERE ( = ( taxsetup0_.SetupName taxsetup0_.taxSetupID setupName ) ? ) ) )
  2015-06-09 20:29:02,927 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [TaxSetup taxsetup0_]
  2015-06-09 20:29:02,927 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,929 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TaxSetup)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID as taxSetup1_36_' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
    |  \-[SQL_TOKEN] SqlFragment: 'taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[taxsetup0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'TaxSetup taxsetup0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=TaxSetup,tableAlias=taxsetup0_,origin=null,columns={,className=com.cmm.jft.financial.TaxSetup}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'taxsetup0_.SetupName' {propertyName=setupName,dereferenceType=PRIMITIVE,getPropertyPath=setupName,path=t.setupName,tableAlias=taxsetup0_,className=com.cmm.jft.financial.TaxSetup,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
          |  \-[IDENT] IdentNode: 'setupName' {originalText=setupName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=setupName, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,929 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,929 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t WHERE t.setupName = :setupName
  2015-06-09 20:29:02,929 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select taxsetup0_.taxSetupID as taxSetup1_36_, taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_ from TaxSetup taxsetup0_ where taxsetup0_.SetupName=?
  2015-06-09 20:29:02,929 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,929 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Security.findAll
  2015-06-09 20:29:02,930 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.trading.securities.Security e
  2015-06-09 20:29:02,931 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Security'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'e'

  2015-06-09 20:29:02,931 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,931 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,931 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Security (e) -> security0_
  2015-06-09 20:29:02,931 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> security0_.securityID
  2015-06-09 20:29:02,931 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,931 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} security0_.securityID ) ( FromClause{level=1} Security security0_ ) )
  2015-06-09 20:29:02,931 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Security security0_]
  2015-06-09 20:29:02,931 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,931 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Security)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'security0_.securityID as security1_30_' {alias=e, className=com.cmm.jft.trading.securities.Security, tableAlias=security0_}
    |  \-[SQL_TOKEN] SqlFragment: 'security0_.Description as Descript2_30_, security0_.securityInfoID_securityInfoID as security4_30_, security0_.Symbol as Symbol3_30_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[security0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Security security0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=Security,tableAlias=security0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Security}}

  2015-06-09 20:29:02,931 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,931 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.trading.securities.Security e
  2015-06-09 20:29:02,931 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select security0_.securityID as security1_30_, security0_.Description as Descript2_30_, security0_.securityInfoID_securityInfoID as security4_30_, security0_.Symbol as Symbol3_30_ from Security security0_
  2015-06-09 20:29:02,931 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,932 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Deposit.findByDepositID
  2015-06-09 20:29:02,932 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.Deposit d WHERE d.depositID = :depositID
  2015-06-09 20:29:02,933 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Deposit'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'depositID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'depositID'

  2015-06-09 20:29:02,934 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,934 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,935 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Deposit (d) -> deposit0_
  2015-06-09 20:29:02,935 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:29:02,935 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:29:02,935 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : depositID -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:02,935 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d.depositID -> deposit0_.depositID
  2015-06-09 20:29:02,935 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,935 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} deposit0_.depositID ) ( FromClause{level=1} Deposit deposit0_ ) ( WHERE ( = ( deposit0_.depositID deposit0_.depositID depositID ) ? ) ) )
  2015-06-09 20:29:02,935 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Deposit deposit0_]
  2015-06-09 20:29:02,935 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,935 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Deposit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID as depositI1_11_' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[deposit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Deposit deposit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=Deposit,tableAlias=deposit0_,origin=null,columns={,className=com.cmm.jft.financial.Deposit}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'deposit0_.depositID' {propertyName=depositID,dereferenceType=PRIMITIVE,getPropertyPath=depositID,path=d.depositID,tableAlias=deposit0_,className=com.cmm.jft.financial.Deposit,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
          |  \-[IDENT] IdentNode: 'depositID' {originalText=depositID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=depositID, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:02,935 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,936 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.Deposit d WHERE d.depositID = :depositID
  2015-06-09 20:29:02,936 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select deposit0_.depositID as depositI1_11_, deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_ from Deposit deposit0_ where deposit0_.depositID=?
  2015-06-09 20:29:02,936 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,936 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Account.findByAccName
  2015-06-09 20:29:02,936 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.accName = :accName
  2015-06-09 20:29:02,938 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'accName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'accName'

  2015-06-09 20:29:02,938 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,938 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,939 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Account (a) -> account0_
  2015-06-09 20:29:02,939 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:29:02,939 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:29:02,939 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : accName -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,939 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a.accName -> account0_.AccName
  2015-06-09 20:29:02,940 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,940 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} account0_.accountID ) ( FromClause{level=1} Account account0_ ) ( WHERE ( = ( account0_.AccName account0_.accountID accName ) ? ) ) )
  2015-06-09 20:29:02,940 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Account account0_]
  2015-06-09 20:29:02,940 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,940 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountID as accountI1_0_' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.cmm.jft.financial.Account}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.AccName' {propertyName=accName,dereferenceType=PRIMITIVE,getPropertyPath=accName,path=a.accName,tableAlias=account0_,className=com.cmm.jft.financial.Account,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'account0_.accountID' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'accName' {originalText=accName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=accName, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,940 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,940 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.accName = :accName
  2015-06-09 20:29:02,940 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select account0_.accountID as accountI1_0_, account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_ from Account account0_ where account0_.AccName=?
  2015-06-09 20:29:02,940 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,940 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Rule.findByRuleID
  2015-06-09 20:29:02,941 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT r FROM com.cmm.jft.financial.Rule r WHERE r.ruleID = :ruleID
  2015-06-09 20:29:02,942 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Rule'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'ruleID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'ruleID'

  2015-06-09 20:29:02,942 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,943 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,943 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Rule (r) -> rule0_
  2015-06-09 20:29:02,943 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : r -> rule0_.ruleID
  2015-06-09 20:29:02,943 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : r -> rule0_.ruleID
  2015-06-09 20:29:02,943 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : ruleID -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:02,943 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : r.ruleID -> rule0_.ruleID
  2015-06-09 20:29:02,943 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,943 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} rule0_.ruleID ) ( FromClause{level=1} Rule rule0_ ) ( WHERE ( = ( rule0_.ruleID rule0_.ruleID ruleID ) ? ) ) )
  2015-06-09 20:29:02,943 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Rule rule0_]
  2015-06-09 20:29:02,943 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,943 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Rule)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'rule0_.ruleID as ruleID1_27_' {alias=r, className=com.cmm.jft.financial.Rule, tableAlias=rule0_}
    |  \-[SQL_TOKEN] SqlFragment: 'rule0_.ApplyTax as ApplyTax2_27_, rule0_.ApplyValue as ApplyVal3_27_, rule0_.creditAccountID as creditAc5_27_, rule0_.debitAccountID as debitAcc6_27_, rule0_.distributionRuleID as distribu7_27_, rule0_.Object as Object4_27_, rule0_.ruleFormulaID as ruleForm8_27_, rule0_.taxSetupID as taxSetup9_27_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[rule0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Rule rule0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=Rule,tableAlias=rule0_,origin=null,columns={,className=com.cmm.jft.financial.Rule}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'rule0_.ruleID' {propertyName=ruleID,dereferenceType=PRIMITIVE,getPropertyPath=ruleID,path=r.ruleID,tableAlias=rule0_,className=com.cmm.jft.financial.Rule,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'rule0_.ruleID' {alias=r, className=com.cmm.jft.financial.Rule, tableAlias=rule0_}
          |  \-[IDENT] IdentNode: 'ruleID' {originalText=ruleID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=ruleID, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:02,943 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,944 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT r FROM com.cmm.jft.financial.Rule r WHERE r.ruleID = :ruleID
  2015-06-09 20:29:02,944 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select rule0_.ruleID as ruleID1_27_, rule0_.ApplyTax as ApplyTax2_27_, rule0_.ApplyValue as ApplyVal3_27_, rule0_.creditAccountID as creditAc5_27_, rule0_.debitAccountID as debitAcc6_27_, rule0_.distributionRuleID as distribu7_27_, rule0_.Object as Object4_27_, rule0_.ruleFormulaID as ruleForm8_27_, rule0_.taxSetupID as taxSetup9_27_ from Rule rule0_ where rule0_.ruleID=?
  2015-06-09 20:29:02,944 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,944 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: JournalEntry.findByEntryStatus
  2015-06-09 20:29:02,944 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.journalStatus = :journalStatus
  2015-06-09 20:29:02,946 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'JournalEntry'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'journalStatus'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'journalStatus'

  2015-06-09 20:29:02,946 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,946 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,946 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.JournalEntry (e) -> journalent0_
  2015-06-09 20:29:02,946 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:29:02,946 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:29:02,946 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : journalStatus -> org.hibernate.type.CustomType@5305c37d
  2015-06-09 20:29:02,946 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.journalStatus -> journalent0_.JournalStatus
  2015-06-09 20:29:02,946 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,946 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} journalent0_.entryID ) ( FromClause{level=1} JournalEntry journalent0_ ) ( WHERE ( = ( journalent0_.JournalStatus journalent0_.entryID journalStatus ) ? ) ) )
  2015-06-09 20:29:02,947 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [JournalEntry journalent0_]
  2015-06-09 20:29:02,947 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,947 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JournalEntry)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID as entryID1_20_' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
    |  \-[SQL_TOKEN] SqlFragment: 'journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[journalent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JournalEntry journalent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JournalEntry,tableAlias=journalent0_,origin=null,columns={,className=com.cmm.jft.financial.JournalEntry}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'journalent0_.JournalStatus' {propertyName=journalStatus,dereferenceType=PRIMITIVE,getPropertyPath=journalStatus,path=e.journalStatus,tableAlias=journalent0_,className=com.cmm.jft.financial.JournalEntry,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
          |  \-[IDENT] IdentNode: 'journalStatus' {originalText=journalStatus}
          \-[NAMED_PARAM] ParameterNode: '?' {name=journalStatus, expectedType=org.hibernate.type.CustomType@5305c37d}

  2015-06-09 20:29:02,947 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,947 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.journalStatus = :journalStatus
  2015-06-09 20:29:02,947 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select journalent0_.entryID as entryID1_20_, journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_ from JournalEntry journalent0_ where journalent0_.JournalStatus=?
  2015-06-09 20:29:02,947 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,947 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Tax.findAll
  2015-06-09 20:29:02,948 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT t FROM com.cmm.jft.financial.Tax t
  2015-06-09 20:29:02,949 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'Tax'
       |     \-[ALIAS] Node: 't'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 't'

  2015-06-09 20:29:02,949 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,950 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,950 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Tax (t) -> tax0_
  2015-06-09 20:29:02,950 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> tax0_.taxID
  2015-06-09 20:29:02,950 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,950 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} tax0_.taxID ) ( FromClause{level=1} Tax tax0_ ) )
  2015-06-09 20:29:02,951 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Tax tax0_]
  2015-06-09 20:29:02,951 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,951 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Tax)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'tax0_.taxID as taxID1_35_' {alias=t, className=com.cmm.jft.financial.Tax, tableAlias=tax0_}
    |  \-[SQL_TOKEN] SqlFragment: 'tax0_.TaxName as TaxName2_35_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[tax0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Tax tax0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=Tax,tableAlias=tax0_,origin=null,columns={,className=com.cmm.jft.financial.Tax}}

  2015-06-09 20:29:02,951 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,952 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT t FROM com.cmm.jft.financial.Tax t
  2015-06-09 20:29:02,952 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select tax0_.taxID as taxID1_35_, tax0_.TaxName as TaxName2_35_ from Tax tax0_
  2015-06-09 20:29:02,952 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,952 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Orders.findAll
  2015-06-09 20:29:02,952 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT o FROM com.cmm.jft.trading.Orders o
  2015-06-09 20:29:02,953 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'trading'
       |     |  \-[IDENT] Node: 'Orders'
       |     \-[ALIAS] Node: 'o'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'o'

  2015-06-09 20:29:02,953 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,953 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,953 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.Orders (o) -> orders0_
  2015-06-09 20:29:02,953 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:29:02,953 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,953 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} orders0_.orderID ) ( FromClause{level=1} Orders orders0_ ) )
  2015-06-09 20:29:02,954 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Orders orders0_]
  2015-06-09 20:29:02,954 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,954 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID as orderID1_26_' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
    |  \-[SQL_TOKEN] SqlFragment: 'orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[orders0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Orders orders0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=Orders,tableAlias=orders0_,origin=null,columns={,className=com.cmm.jft.trading.Orders}}

  2015-06-09 20:29:02,954 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,954 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT o FROM com.cmm.jft.trading.Orders o
  2015-06-09 20:29:02,954 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select orders0_.orderID as orderID1_26_, orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_ from Orders orders0_
  2015-06-09 20:29:02,954 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,954 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: JournalEntry.findByEntryClose
  2015-06-09 20:29:02,954 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.entryClose = :entryClose
  2015-06-09 20:29:02,956 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'JournalEntry'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'entryClose'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'entryClose'

  2015-06-09 20:29:02,956 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,956 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,956 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.JournalEntry (e) -> journalent0_
  2015-06-09 20:29:02,956 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:29:02,956 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> journalent0_.entryID
  2015-06-09 20:29:02,956 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : entryClose -> org.hibernate.type.TimestampType@d7b1517
  2015-06-09 20:29:02,956 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.entryClose -> journalent0_.EntryClose
  2015-06-09 20:29:02,957 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,957 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} journalent0_.entryID ) ( FromClause{level=1} JournalEntry journalent0_ ) ( WHERE ( = ( journalent0_.EntryClose journalent0_.entryID entryClose ) ? ) ) )
  2015-06-09 20:29:02,957 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [JournalEntry journalent0_]
  2015-06-09 20:29:02,957 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,957 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JournalEntry)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID as entryID1_20_' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
    |  \-[SQL_TOKEN] SqlFragment: 'journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[journalent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JournalEntry journalent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JournalEntry,tableAlias=journalent0_,origin=null,columns={,className=com.cmm.jft.financial.JournalEntry}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'journalent0_.EntryClose' {propertyName=entryClose,dereferenceType=PRIMITIVE,getPropertyPath=entryClose,path=e.entryClose,tableAlias=journalent0_,className=com.cmm.jft.financial.JournalEntry,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'journalent0_.entryID' {alias=e, className=com.cmm.jft.financial.JournalEntry, tableAlias=journalent0_}
          |  \-[IDENT] IdentNode: 'entryClose' {originalText=entryClose}
          \-[NAMED_PARAM] ParameterNode: '?' {name=entryClose, expectedType=org.hibernate.type.TimestampType@d7b1517}

  2015-06-09 20:29:02,957 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,957 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.JournalEntry e WHERE e.entryClose = :entryClose
  2015-06-09 20:29:02,957 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select journalent0_.entryID as entryID1_20_, journalent0_.Description as Descript2_20_, journalent0_.EntryClose as EntryClo3_20_, journalent0_.EntryDate as EntryDat4_20_, journalent0_.JournalStatus as JournalS5_20_ from JournalEntry journalent0_ where journalent0_.EntryClose=?
  2015-06-09 20:29:02,957 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,957 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Broker.findByBrokerCode
  2015-06-09 20:29:02,958 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT b FROM com.cmm.jft.trading.account.Broker b WHERE b.brokerCode = :brokerCode
  2015-06-09 20:29:02,959 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'account'
    |  |     |  \-[IDENT] Node: 'Broker'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'b'
          |  \-[IDENT] Node: 'brokerCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'brokerCode'

  2015-06-09 20:29:02,959 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,960 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,960 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.account.Broker (b) -> broker0_
  2015-06-09 20:29:02,960 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : b -> broker0_.brokerID
  2015-06-09 20:29:02,960 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : b -> broker0_.brokerID
  2015-06-09 20:29:02,960 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : brokerCode -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,960 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : b.brokerCode -> broker0_.BrokerCode
  2015-06-09 20:29:02,960 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,960 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} broker0_.brokerID ) ( FromClause{level=1} Broker broker0_ ) ( WHERE ( = ( broker0_.BrokerCode broker0_.brokerID brokerCode ) ? ) ) )
  2015-06-09 20:29:02,960 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Broker broker0_]
  2015-06-09 20:29:02,960 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,960 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Broker)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'broker0_.brokerID as brokerID1_1_' {alias=b, className=com.cmm.jft.trading.account.Broker, tableAlias=broker0_}
    |  \-[SQL_TOKEN] SqlFragment: 'broker0_.BrokerCode as BrokerCo2_1_, broker0_.BrokerName as BrokerNa3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[broker0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Broker broker0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=Broker,tableAlias=broker0_,origin=null,columns={,className=com.cmm.jft.trading.account.Broker}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'broker0_.BrokerCode' {propertyName=brokerCode,dereferenceType=PRIMITIVE,getPropertyPath=brokerCode,path=b.brokerCode,tableAlias=broker0_,className=com.cmm.jft.trading.account.Broker,classAlias=b}
          |  +-[ALIAS_REF] IdentNode: 'broker0_.brokerID' {alias=b, className=com.cmm.jft.trading.account.Broker, tableAlias=broker0_}
          |  \-[IDENT] IdentNode: 'brokerCode' {originalText=brokerCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=brokerCode, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,960 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,960 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT b FROM com.cmm.jft.trading.account.Broker b WHERE b.brokerCode = :brokerCode
  2015-06-09 20:29:02,960 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select broker0_.brokerID as brokerID1_1_, broker0_.BrokerCode as BrokerCo2_1_, broker0_.BrokerName as BrokerNa3_1_ from Broker broker0_ where broker0_.BrokerCode=?
  2015-06-09 20:29:02,960 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,960 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: IndexComposition.findByIndexDate
  2015-06-09 20:29:02,961 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT i FROM com.cmm.jft.trading.securities.IndexComposition i WHERE i.indexDate = :indexDate
  2015-06-09 20:29:02,962 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'IndexComposition'
    |  |     \-[ALIAS] Node: 'i'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'i'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'i'
          |  \-[IDENT] Node: 'indexDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'indexDate'

  2015-06-09 20:29:02,962 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,962 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,963 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.IndexComposition (i) -> indexcompo0_
  2015-06-09 20:29:02,963 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> indexcompo0_.indexCompID
  2015-06-09 20:29:02,963 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> indexcompo0_.indexCompID
  2015-06-09 20:29:02,963 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : indexDate -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,963 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i.indexDate -> indexcompo0_.IndexDate
  2015-06-09 20:29:02,963 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,963 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} indexcompo0_.indexCompID ) ( FromClause{level=1} IndexComposition indexcompo0_ ) ( WHERE ( = ( indexcompo0_.IndexDate indexcompo0_.indexCompID indexDate ) ? ) ) )
  2015-06-09 20:29:02,963 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [IndexComposition indexcompo0_]
  2015-06-09 20:29:02,963 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,963 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (IndexComposition)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'indexcompo0_.indexCompID as indexCom1_18_' {alias=i, className=com.cmm.jft.trading.securities.IndexComposition, tableAlias=indexcompo0_}
    |  \-[SQL_TOKEN] SqlFragment: 'indexcompo0_.IndexDate as IndexDat2_18_, indexcompo0_.indexID as indexID3_18_, indexcompo0_.securityID as security4_18_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[i], fromElementByTableAlias=[indexcompo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'IndexComposition indexcompo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=IndexComposition,tableAlias=indexcompo0_,origin=null,columns={,className=com.cmm.jft.trading.securities.IndexComposition}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'indexcompo0_.IndexDate' {propertyName=indexDate,dereferenceType=PRIMITIVE,getPropertyPath=indexDate,path=i.indexDate,tableAlias=indexcompo0_,className=com.cmm.jft.trading.securities.IndexComposition,classAlias=i}
          |  +-[ALIAS_REF] IdentNode: 'indexcompo0_.indexCompID' {alias=i, className=com.cmm.jft.trading.securities.IndexComposition, tableAlias=indexcompo0_}
          |  \-[IDENT] IdentNode: 'indexDate' {originalText=indexDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=indexDate, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,963 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,963 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT i FROM com.cmm.jft.trading.securities.IndexComposition i WHERE i.indexDate = :indexDate
  2015-06-09 20:29:02,963 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select indexcompo0_.indexCompID as indexCom1_18_, indexcompo0_.IndexDate as IndexDat2_18_, indexcompo0_.indexID as indexID3_18_, indexcompo0_.securityID as security4_18_ from IndexComposition indexcompo0_ where indexcompo0_.IndexDate=?
  2015-06-09 20:29:02,963 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,964 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Orders.findByVolume
  2015-06-09 20:29:02,964 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.volume = :volume
  2015-06-09 20:29:02,965 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'trading'
    |  |     |  \-[IDENT] Node: 'Orders'
    |  |     \-[ALIAS] Node: 'o'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'o'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'o'
          |  \-[IDENT] Node: 'volume'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'volume'

  2015-06-09 20:29:02,965 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,965 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,965 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.Orders (o) -> orders0_
  2015-06-09 20:29:02,966 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:29:02,966 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o -> orders0_.orderID
  2015-06-09 20:29:02,966 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : volume -> org.hibernate.type.IntegerType@67117f44
  2015-06-09 20:29:02,966 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : o.volume -> orders0_.Volume
  2015-06-09 20:29:02,966 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,966 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} orders0_.orderID ) ( FromClause{level=1} Orders orders0_ ) ( WHERE ( = ( orders0_.Volume orders0_.orderID volume ) ? ) ) )
  2015-06-09 20:29:02,966 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Orders orders0_]
  2015-06-09 20:29:02,966 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,966 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Orders)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID as orderID1_26_' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
    |  \-[SQL_TOKEN] SqlFragment: 'orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[o], fromElementByTableAlias=[orders0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Orders orders0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=o,role=null,tableName=Orders,tableAlias=orders0_,origin=null,columns={,className=com.cmm.jft.trading.Orders}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'orders0_.Volume' {propertyName=volume,dereferenceType=PRIMITIVE,getPropertyPath=volume,path=o.volume,tableAlias=orders0_,className=com.cmm.jft.trading.Orders,classAlias=o}
          |  +-[ALIAS_REF] IdentNode: 'orders0_.orderID' {alias=o, className=com.cmm.jft.trading.Orders, tableAlias=orders0_}
          |  \-[IDENT] IdentNode: 'volume' {originalText=volume}
          \-[NAMED_PARAM] ParameterNode: '?' {name=volume, expectedType=org.hibernate.type.IntegerType@67117f44}

  2015-06-09 20:29:02,966 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,966 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT o FROM com.cmm.jft.trading.Orders o WHERE o.volume = :volume
  2015-06-09 20:29:02,966 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select orders0_.orderID as orderID1_26_, orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_ from Orders orders0_ where orders0_.Volume=?
  2015-06-09 20:29:02,966 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,966 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: StockExchange.findByStockExchangeID
  2015-06-09 20:29:02,967 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.trading.securities.StockExchange e WHERE e.stockExchangeID = :stockExchangeID
  2015-06-09 20:29:02,969 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'StockExchange'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'stockExchangeID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'stockExchangeID'

  2015-06-09 20:29:02,969 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,969 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,970 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.StockExchange (e) -> stockexcha0_
  2015-06-09 20:29:02,970 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> stockexcha0_.stockExchangeID
  2015-06-09 20:29:02,970 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> stockexcha0_.stockExchangeID
  2015-06-09 20:29:02,970 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : stockExchangeID -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,970 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.stockExchangeID -> stockexcha0_.stockExchangeID
  2015-06-09 20:29:02,970 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,970 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} stockexcha0_.stockExchangeID ) ( FromClause{level=1} StockExchange stockexcha0_ ) ( WHERE ( = ( stockexcha0_.stockExchangeID stockexcha0_.stockExchangeID stockExchangeID ) ? ) ) )
  2015-06-09 20:29:02,970 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [StockExchange stockexcha0_]
  2015-06-09 20:29:02,970 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,970 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (StockExchange)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'stockexcha0_.stockExchangeID as stockExc1_33_' {alias=e, className=com.cmm.jft.trading.securities.StockExchange, tableAlias=stockexcha0_}
    |  \-[SQL_TOKEN] SqlFragment: 'stockexcha0_.countryID as countryI3_33_, stockexcha0_.ExchangeName as Exchange2_33_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[stockexcha0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'StockExchange stockexcha0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=StockExchange,tableAlias=stockexcha0_,origin=null,columns={,className=com.cmm.jft.trading.securities.StockExchange}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'stockexcha0_.stockExchangeID' {propertyName=stockExchangeID,dereferenceType=PRIMITIVE,getPropertyPath=stockExchangeID,path=e.stockExchangeID,tableAlias=stockexcha0_,className=com.cmm.jft.trading.securities.StockExchange,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'stockexcha0_.stockExchangeID' {alias=e, className=com.cmm.jft.trading.securities.StockExchange, tableAlias=stockexcha0_}
          |  \-[IDENT] IdentNode: 'stockExchangeID' {originalText=stockExchangeID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=stockExchangeID, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,970 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,970 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.trading.securities.StockExchange e WHERE e.stockExchangeID = :stockExchangeID
  2015-06-09 20:29:02,970 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select stockexcha0_.stockExchangeID as stockExc1_33_, stockexcha0_.countryID as countryI3_33_, stockexcha0_.ExchangeName as Exchange2_33_ from StockExchange stockexcha0_ where stockexcha0_.stockExchangeID=?
  2015-06-09 20:29:02,970 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,971 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: MarketTrade.findByVolume
  2015-06-09 20:29:02,971 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m WHERE m.volume = :volume
  2015-06-09 20:29:02,972 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'marketdata'
    |  |     |  \-[IDENT] Node: 'MarketTrade'
    |  |     \-[ALIAS] Node: 'm'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'm'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'm'
          |  \-[IDENT] Node: 'volume'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'volume'

  2015-06-09 20:29:02,972 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,973 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,973 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.marketdata.MarketTrade (m) -> markettrad0_
  2015-06-09 20:29:02,973 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:29:02,973 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:29:02,973 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : volume -> org.hibernate.type.IntegerType@67117f44
  2015-06-09 20:29:02,973 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m.volume -> markettrad0_.Volume
  2015-06-09 20:29:02,973 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,973 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} markettrad0_.marketTradeID ) ( FromClause{level=1} MarketTrade markettrad0_ ) ( WHERE ( = ( markettrad0_.Volume markettrad0_.marketTradeID volume ) ? ) ) )
  2015-06-09 20:29:02,973 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [MarketTrade markettrad0_]
  2015-06-09 20:29:02,973 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,973 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (MarketTrade)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID as marketTr1_23_' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
    |  \-[SQL_TOKEN] SqlFragment: 'markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[m], fromElementByTableAlias=[markettrad0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'MarketTrade markettrad0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=MarketTrade,tableAlias=markettrad0_,origin=null,columns={,className=com.cmm.jft.trading.marketdata.MarketTrade}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'markettrad0_.Volume' {propertyName=volume,dereferenceType=PRIMITIVE,getPropertyPath=volume,path=m.volume,tableAlias=markettrad0_,className=com.cmm.jft.trading.marketdata.MarketTrade,classAlias=m}
          |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
          |  \-[IDENT] IdentNode: 'volume' {originalText=volume}
          \-[NAMED_PARAM] ParameterNode: '?' {name=volume, expectedType=org.hibernate.type.IntegerType@67117f44}

  2015-06-09 20:29:02,973 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,973 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m WHERE m.volume = :volume
  2015-06-09 20:29:02,973 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select markettrad0_.marketTradeID as marketTr1_23_, markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_ from MarketTrade markettrad0_ where markettrad0_.Volume=?
  2015-06-09 20:29:02,973 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,974 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Company.findAll
  2015-06-09 20:29:02,974 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c
  2015-06-09 20:29:02,975 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Company'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

  2015-06-09 20:29:02,975 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,975 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,975 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Company (c) -> company0_
  2015-06-09 20:29:02,975 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> company0_.companyID
  2015-06-09 20:29:02,975 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,975 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} company0_.companyID ) ( FromClause{level=1} Company company0_ ) )
  2015-06-09 20:29:02,975 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Company company0_]
  2015-06-09 20:29:02,975 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,975 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Company)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'company0_.companyID as companyI1_4_' {alias=c, className=com.cmm.jft.trading.securities.Company, tableAlias=company0_}
    |  \-[SQL_TOKEN] SqlFragment: 'company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[company0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Company company0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Company,tableAlias=company0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Company}}

  2015-06-09 20:29:02,975 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,975 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.trading.securities.Company c
  2015-06-09 20:29:02,975 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select company0_.companyID as companyI1_4_, company0_.CNPJ as CNPJ2_4_, company0_.CompanyDate as CompanyD3_4_, company0_.CompanyName as CompanyN4_4_, company0_.MarketName as MarketNa5_4_, company0_.OnShares as OnShares6_4_, company0_.PnShares as PnShares7_4_, company0_.Status as Status8_4_, company0_.stockExchangeID as stockExc9_4_ from Company company0_
  2015-06-09 20:29:02,975 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,975 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Rule.findAll
  2015-06-09 20:29:02,976 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT r FROM com.cmm.jft.financial.Rule r
  2015-06-09 20:29:02,976 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'Rule'
       |     \-[ALIAS] Node: 'r'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'r'

  2015-06-09 20:29:02,976 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,977 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,977 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Rule (r) -> rule0_
  2015-06-09 20:29:02,977 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : r -> rule0_.ruleID
  2015-06-09 20:29:02,977 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,977 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} rule0_.ruleID ) ( FromClause{level=1} Rule rule0_ ) )
  2015-06-09 20:29:02,977 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Rule rule0_]
  2015-06-09 20:29:02,977 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,977 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Rule)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'rule0_.ruleID as ruleID1_27_' {alias=r, className=com.cmm.jft.financial.Rule, tableAlias=rule0_}
    |  \-[SQL_TOKEN] SqlFragment: 'rule0_.ApplyTax as ApplyTax2_27_, rule0_.ApplyValue as ApplyVal3_27_, rule0_.creditAccountID as creditAc5_27_, rule0_.debitAccountID as debitAcc6_27_, rule0_.distributionRuleID as distribu7_27_, rule0_.Object as Object4_27_, rule0_.ruleFormulaID as ruleForm8_27_, rule0_.taxSetupID as taxSetup9_27_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[rule0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Rule rule0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=Rule,tableAlias=rule0_,origin=null,columns={,className=com.cmm.jft.financial.Rule}}

  2015-06-09 20:29:02,977 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,977 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT r FROM com.cmm.jft.financial.Rule r
  2015-06-09 20:29:02,977 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select rule0_.ruleID as ruleID1_27_, rule0_.ApplyTax as ApplyTax2_27_, rule0_.ApplyValue as ApplyVal3_27_, rule0_.creditAccountID as creditAc5_27_, rule0_.debitAccountID as debitAcc6_27_, rule0_.distributionRuleID as distribu7_27_, rule0_.Object as Object4_27_, rule0_.ruleFormulaID as ruleForm8_27_, rule0_.taxSetupID as taxSetup9_27_ from Rule rule0_
  2015-06-09 20:29:02,977 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,977 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: EntryRegister.findByOperationID
  2015-06-09 20:29:02,977 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.operationID = :operationID
  2015-06-09 20:29:02,979 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'EntryRegister'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'operationID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'operationID'

  2015-06-09 20:29:02,979 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,979 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,979 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.EntryRegister (e) -> entryregis0_
  2015-06-09 20:29:02,979 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:29:02,979 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:29:02,979 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : operationID -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:02,979 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.operationID -> entryregis0_.OperationID
  2015-06-09 20:29:02,979 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,979 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} entryregis0_.entryRegisterID ) ( FromClause{level=1} EntryRegister entryregis0_ ) ( WHERE ( = ( entryregis0_.OperationID entryregis0_.entryRegisterID operationID ) ? ) ) )
  2015-06-09 20:29:02,979 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [EntryRegister entryregis0_]
  2015-06-09 20:29:02,979 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,980 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EntryRegister)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID as entryReg1_14_' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
    |  \-[SQL_TOKEN] SqlFragment: 'entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[entryregis0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EntryRegister entryregis0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=EntryRegister,tableAlias=entryregis0_,origin=null,columns={,className=com.cmm.jft.financial.EntryRegister}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'entryregis0_.OperationID' {propertyName=operationID,dereferenceType=PRIMITIVE,getPropertyPath=operationID,path=e.operationID,tableAlias=entryregis0_,className=com.cmm.jft.financial.EntryRegister,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
          |  \-[IDENT] IdentNode: 'operationID' {originalText=operationID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=operationID, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:02,980 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,980 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.operationID = :operationID
  2015-06-09 20:29:02,980 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select entryregis0_.entryRegisterID as entryReg1_14_, entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_ from EntryRegister entryregis0_ where entryregis0_.OperationID=?
  2015-06-09 20:29:02,980 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,980 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Security.findBySecurityID
  2015-06-09 20:29:02,980 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.trading.securities.Security e WHERE e.securityID = :securityID
  2015-06-09 20:29:02,982 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Security'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'securityID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'securityID'

  2015-06-09 20:29:02,982 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,982 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,982 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Security (e) -> security0_
  2015-06-09 20:29:02,982 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> security0_.securityID
  2015-06-09 20:29:02,982 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> security0_.securityID
  2015-06-09 20:29:02,982 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : securityID -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:02,982 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.securityID -> security0_.securityID
  2015-06-09 20:29:02,982 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,982 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} security0_.securityID ) ( FromClause{level=1} Security security0_ ) ( WHERE ( = ( security0_.securityID security0_.securityID securityID ) ? ) ) )
  2015-06-09 20:29:02,983 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Security security0_]
  2015-06-09 20:29:02,983 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,983 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Security)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'security0_.securityID as security1_30_' {alias=e, className=com.cmm.jft.trading.securities.Security, tableAlias=security0_}
    |  \-[SQL_TOKEN] SqlFragment: 'security0_.Description as Descript2_30_, security0_.securityInfoID_securityInfoID as security4_30_, security0_.Symbol as Symbol3_30_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[security0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Security security0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=Security,tableAlias=security0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Security}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'security0_.securityID' {propertyName=securityID,dereferenceType=PRIMITIVE,getPropertyPath=securityID,path=e.securityID,tableAlias=security0_,className=com.cmm.jft.trading.securities.Security,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'security0_.securityID' {alias=e, className=com.cmm.jft.trading.securities.Security, tableAlias=security0_}
          |  \-[IDENT] IdentNode: 'securityID' {originalText=securityID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=securityID, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:02,983 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,983 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.trading.securities.Security e WHERE e.securityID = :securityID
  2015-06-09 20:29:02,983 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select security0_.securityID as security1_30_, security0_.Description as Descript2_30_, security0_.securityInfoID_securityInfoID as security4_30_, security0_.Symbol as Symbol3_30_ from Security security0_ where security0_.securityID=?
  2015-06-09 20:29:02,983 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,983 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Deposit.findByDepositDate
  2015-06-09 20:29:02,983 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.Deposit d WHERE d.depositDate = :depositDate
  2015-06-09 20:29:02,985 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Deposit'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'depositDate'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'depositDate'

  2015-06-09 20:29:02,985 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,985 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,985 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Deposit (d) -> deposit0_
  2015-06-09 20:29:02,985 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:29:02,985 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:29:02,985 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : depositDate -> org.hibernate.type.TimestampType@d7b1517
  2015-06-09 20:29:02,985 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d.depositDate -> deposit0_.DepositDate
  2015-06-09 20:29:02,985 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,985 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} deposit0_.depositID ) ( FromClause{level=1} Deposit deposit0_ ) ( WHERE ( = ( deposit0_.DepositDate deposit0_.depositID depositDate ) ? ) ) )
  2015-06-09 20:29:02,985 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Deposit deposit0_]
  2015-06-09 20:29:02,986 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,986 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Deposit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID as depositI1_11_' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[deposit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Deposit deposit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=Deposit,tableAlias=deposit0_,origin=null,columns={,className=com.cmm.jft.financial.Deposit}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'deposit0_.DepositDate' {propertyName=depositDate,dereferenceType=PRIMITIVE,getPropertyPath=depositDate,path=d.depositDate,tableAlias=deposit0_,className=com.cmm.jft.financial.Deposit,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
          |  \-[IDENT] IdentNode: 'depositDate' {originalText=depositDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=depositDate, expectedType=org.hibernate.type.TimestampType@d7b1517}

  2015-06-09 20:29:02,986 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,986 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.Deposit d WHERE d.depositDate = :depositDate
  2015-06-09 20:29:02,986 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select deposit0_.depositID as depositI1_11_, deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_ from Deposit deposit0_ where deposit0_.DepositDate=?
  2015-06-09 20:29:02,986 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,986 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Index.findAll
  2015-06-09 20:29:02,986 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT i FROM com.cmm.jft.trading.securities.Index i
  2015-06-09 20:29:02,987 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Index'
       |     \-[ALIAS] Node: 'i'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'i'

  2015-06-09 20:29:02,987 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,988 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,988 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Index (i) -> index0_
  2015-06-09 20:29:02,988 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> index0_.indexID
  2015-06-09 20:29:02,988 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,988 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} index0_.indexID ) ( FromClause{level=1} Index index0_ ) )
  2015-06-09 20:29:02,988 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Index index0_]
  2015-06-09 20:29:02,988 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,988 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Index)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'index0_.indexID as indexID1_17_' {alias=i, className=com.cmm.jft.trading.securities.Index, tableAlias=index0_}
    |  \-[SQL_TOKEN] SqlFragment: 'index0_.Index as Index2_17_, index0_.IndexName as IndexNam3_17_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[i], fromElementByTableAlias=[index0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Index index0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=Index,tableAlias=index0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Index}}

  2015-06-09 20:29:02,988 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,988 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT i FROM com.cmm.jft.trading.securities.Index i
  2015-06-09 20:29:02,988 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select index0_.indexID as indexID1_17_, index0_.Index as Index2_17_, index0_.IndexName as IndexNam3_17_ from Index index0_
  2015-06-09 20:29:02,988 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,988 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: EntryRegister.findByEntryType
  2015-06-09 20:29:02,988 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.entryType = :entryType
  2015-06-09 20:29:02,990 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'EntryRegister'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'entryType'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'entryType'

  2015-06-09 20:29:02,990 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,990 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,990 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.EntryRegister (e) -> entryregis0_
  2015-06-09 20:29:02,990 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:29:02,990 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> entryregis0_.entryRegisterID
  2015-06-09 20:29:02,990 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : entryType -> org.hibernate.type.CustomType@60d84f61
  2015-06-09 20:29:02,990 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.entryType -> entryregis0_.EntryType
  2015-06-09 20:29:02,990 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,990 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} entryregis0_.entryRegisterID ) ( FromClause{level=1} EntryRegister entryregis0_ ) ( WHERE ( = ( entryregis0_.EntryType entryregis0_.entryRegisterID entryType ) ? ) ) )
  2015-06-09 20:29:02,990 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [EntryRegister entryregis0_]
  2015-06-09 20:29:02,991 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,991 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EntryRegister)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID as entryReg1_14_' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
    |  \-[SQL_TOKEN] SqlFragment: 'entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[entryregis0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EntryRegister entryregis0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=EntryRegister,tableAlias=entryregis0_,origin=null,columns={,className=com.cmm.jft.financial.EntryRegister}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'entryregis0_.EntryType' {propertyName=entryType,dereferenceType=PRIMITIVE,getPropertyPath=entryType,path=e.entryType,tableAlias=entryregis0_,className=com.cmm.jft.financial.EntryRegister,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'entryregis0_.entryRegisterID' {alias=e, className=com.cmm.jft.financial.EntryRegister, tableAlias=entryregis0_}
          |  \-[IDENT] IdentNode: 'entryType' {originalText=entryType}
          \-[NAMED_PARAM] ParameterNode: '?' {name=entryType, expectedType=org.hibernate.type.CustomType@60d84f61}

  2015-06-09 20:29:02,991 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,991 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.financial.EntryRegister e WHERE e.entryType = :entryType
  2015-06-09 20:29:02,991 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select entryregis0_.entryRegisterID as entryReg1_14_, entryregis0_.Credit as Credit2_14_, entryregis0_.creditAccountID as creditAc7_14_, entryregis0_.currencyID as currency8_14_, entryregis0_.Debit as Debit3_14_, entryregis0_.debitAccountID as debitAcc9_14_, entryregis0_.Description as Descript4_14_, entryregis0_.entryID as entryID10_14_, entryregis0_.EntryType as EntryTyp5_14_, entryregis0_.OperationID as Operatio6_14_ from EntryRegister entryregis0_ where entryregis0_.EntryType=?
  2015-06-09 20:29:02,991 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,991 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: DistributionRule.findAll
  2015-06-09 20:29:02,991 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.DistributionRule d
  2015-06-09 20:29:02,992 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'DistributionRule'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'd'

  2015-06-09 20:29:02,992 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,992 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,992 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.DistributionRule (d) -> distributi0_
  2015-06-09 20:29:02,992 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> distributi0_.distributionRuleID
  2015-06-09 20:29:02,994 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,994 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} distributi0_.distributionRuleID ) ( FromClause{level=1} DistributionRule distributi0_ ) )
  2015-06-09 20:29:02,994 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [DistributionRule distributi0_]
  2015-06-09 20:29:02,994 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,995 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (DistributionRule)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'distributi0_.distributionRuleID as distribu1_12_' {alias=d, className=com.cmm.jft.financial.DistributionRule, tableAlias=distributi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'distributi0_.ObjectRule as ObjectRu2_12_, distributi0_.RuleName as RuleName3_12_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[distributi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'DistributionRule distributi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=DistributionRule,tableAlias=distributi0_,origin=null,columns={,className=com.cmm.jft.financial.DistributionRule}}

  2015-06-09 20:29:02,995 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,995 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.DistributionRule d
  2015-06-09 20:29:02,995 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select distributi0_.distributionRuleID as distribu1_12_, distributi0_.ObjectRule as ObjectRu2_12_, distributi0_.RuleName as RuleName3_12_ from DistributionRule distributi0_
  2015-06-09 20:29:02,995 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,995 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: MarketTrade.findByMarketTradeID
  2015-06-09 20:29:02,996 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m WHERE m.marketTradeID = :marketTradeID
  2015-06-09 20:29:02,998 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'marketdata'
    |  |     |  \-[IDENT] Node: 'MarketTrade'
    |  |     \-[ALIAS] Node: 'm'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'm'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'm'
          |  \-[IDENT] Node: 'marketTradeID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'marketTradeID'

  2015-06-09 20:29:02,998 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,998 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:02,998 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.marketdata.MarketTrade (m) -> markettrad0_
  2015-06-09 20:29:02,998 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:29:02,998 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:29:02,998 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : marketTradeID -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:02,998 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m.marketTradeID -> markettrad0_.marketTradeID
  2015-06-09 20:29:02,999 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:02,999 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} markettrad0_.marketTradeID ) ( FromClause{level=1} MarketTrade markettrad0_ ) ( WHERE ( = ( markettrad0_.marketTradeID markettrad0_.marketTradeID marketTradeID ) ? ) ) )
  2015-06-09 20:29:02,999 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [MarketTrade markettrad0_]
  2015-06-09 20:29:02,999 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:02,999 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (MarketTrade)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID as marketTr1_23_' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
    |  \-[SQL_TOKEN] SqlFragment: 'markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[m], fromElementByTableAlias=[markettrad0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'MarketTrade markettrad0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=MarketTrade,tableAlias=markettrad0_,origin=null,columns={,className=com.cmm.jft.trading.marketdata.MarketTrade}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'markettrad0_.marketTradeID' {propertyName=marketTradeID,dereferenceType=PRIMITIVE,getPropertyPath=marketTradeID,path=m.marketTradeID,tableAlias=markettrad0_,className=com.cmm.jft.trading.marketdata.MarketTrade,classAlias=m}
          |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
          |  \-[IDENT] IdentNode: 'marketTradeID' {originalText=marketTradeID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=marketTradeID, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:02,999 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,999 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m WHERE m.marketTradeID = :marketTradeID
  2015-06-09 20:29:02,999 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select markettrad0_.marketTradeID as marketTr1_23_, markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_ from MarketTrade markettrad0_ where markettrad0_.marketTradeID=?
  2015-06-09 20:29:02,999 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:02,999 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Rule.findByApplyTax
  2015-06-09 20:29:03,001 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT r FROM com.cmm.jft.financial.Rule r WHERE r.applyTax = :applyTax
  2015-06-09 20:29:03,005 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Rule'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'applyTax'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'applyTax'

  2015-06-09 20:29:03,005 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,005 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:03,005 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Rule (r) -> rule0_
  2015-06-09 20:29:03,007 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : r -> rule0_.ruleID
  2015-06-09 20:29:03,011 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : r -> rule0_.ruleID
  2015-06-09 20:29:03,011 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : applyTax -> org.hibernate.type.BooleanType@6fdb1f78
  2015-06-09 20:29:03,011 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : r.applyTax -> rule0_.ApplyTax
  2015-06-09 20:29:03,011 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:03,011 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} rule0_.ruleID ) ( FromClause{level=1} Rule rule0_ ) ( WHERE ( = ( rule0_.ApplyTax rule0_.ruleID applyTax ) ? ) ) )
  2015-06-09 20:29:03,011 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Rule rule0_]
  2015-06-09 20:29:03,011 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:03,011 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Rule)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'rule0_.ruleID as ruleID1_27_' {alias=r, className=com.cmm.jft.financial.Rule, tableAlias=rule0_}
    |  \-[SQL_TOKEN] SqlFragment: 'rule0_.ApplyTax as ApplyTax2_27_, rule0_.ApplyValue as ApplyVal3_27_, rule0_.creditAccountID as creditAc5_27_, rule0_.debitAccountID as debitAcc6_27_, rule0_.distributionRuleID as distribu7_27_, rule0_.Object as Object4_27_, rule0_.ruleFormulaID as ruleForm8_27_, rule0_.taxSetupID as taxSetup9_27_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[rule0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Rule rule0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=Rule,tableAlias=rule0_,origin=null,columns={,className=com.cmm.jft.financial.Rule}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'rule0_.ApplyTax' {propertyName=applyTax,dereferenceType=PRIMITIVE,getPropertyPath=applyTax,path=r.applyTax,tableAlias=rule0_,className=com.cmm.jft.financial.Rule,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'rule0_.ruleID' {alias=r, className=com.cmm.jft.financial.Rule, tableAlias=rule0_}
          |  \-[IDENT] IdentNode: 'applyTax' {originalText=applyTax}
          \-[NAMED_PARAM] ParameterNode: '?' {name=applyTax, expectedType=org.hibernate.type.BooleanType@6fdb1f78}

  2015-06-09 20:29:03,012 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,012 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT r FROM com.cmm.jft.financial.Rule r WHERE r.applyTax = :applyTax
  2015-06-09 20:29:03,012 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select rule0_.ruleID as ruleID1_27_, rule0_.ApplyTax as ApplyTax2_27_, rule0_.ApplyValue as ApplyVal3_27_, rule0_.creditAccountID as creditAc5_27_, rule0_.debitAccountID as debitAcc6_27_, rule0_.distributionRuleID as distribu7_27_, rule0_.Object as Object4_27_, rule0_.ruleFormulaID as ruleForm8_27_, rule0_.taxSetupID as taxSetup9_27_ from Rule rule0_ where rule0_.ApplyTax=?
  2015-06-09 20:29:03,012 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,012 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: CurrencyQuote.findAll
  2015-06-09 20:29:03,012 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.financial.CurrencyQuote c
  2015-06-09 20:29:03,013 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  \-[IDENT] Node: 'financial'
       |     |  \-[IDENT] Node: 'CurrencyQuote'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

  2015-06-09 20:29:03,013 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,013 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:03,013 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.CurrencyQuote (c) -> currencyqu0_
  2015-06-09 20:29:03,013 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currencyqu0_.currencyQuoteID
  2015-06-09 20:29:03,013 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:03,013 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} currencyqu0_.currencyQuoteID ) ( FromClause{level=1} CurrencyQuote currencyqu0_ ) )
  2015-06-09 20:29:03,014 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [CurrencyQuote currencyqu0_]
  2015-06-09 20:29:03,014 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:03,014 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CurrencyQuote)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currencyqu0_.currencyQuoteID as currency1_10_' {alias=c, className=com.cmm.jft.financial.CurrencyQuote, tableAlias=currencyqu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currencyqu0_.currencyID as currency4_10_, currencyqu0_.QDateTime as QDateTim2_10_, currencyqu0_.Value as Value3_10_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currencyqu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CurrencyQuote currencyqu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CurrencyQuote,tableAlias=currencyqu0_,origin=null,columns={,className=com.cmm.jft.financial.CurrencyQuote}}

  2015-06-09 20:29:03,014 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,014 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.financial.CurrencyQuote c
  2015-06-09 20:29:03,014 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select currencyqu0_.currencyQuoteID as currency1_10_, currencyqu0_.currencyID as currency4_10_, currencyqu0_.QDateTime as QDateTim2_10_, currencyqu0_.Value as Value3_10_ from CurrencyQuote currencyqu0_
  2015-06-09 20:29:03,014 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,014 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: TaxSetup.findByTaxSetupID
  2015-06-09 20:29:03,014 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t WHERE t.taxSetupID = :taxSetupID
  2015-06-09 20:29:03,016 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'TaxSetup'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'taxSetupID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'taxSetupID'

  2015-06-09 20:29:03,016 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,016 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:03,016 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.TaxSetup (t) -> taxsetup0_
  2015-06-09 20:29:03,016 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:29:03,016 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:29:03,016 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : taxSetupID -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:03,016 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t.taxSetupID -> taxsetup0_.taxSetupID
  2015-06-09 20:29:03,016 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:03,016 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} taxsetup0_.taxSetupID ) ( FromClause{level=1} TaxSetup taxsetup0_ ) ( WHERE ( = ( taxsetup0_.taxSetupID taxsetup0_.taxSetupID taxSetupID ) ? ) ) )
  2015-06-09 20:29:03,017 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [TaxSetup taxsetup0_]
  2015-06-09 20:29:03,017 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:03,017 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TaxSetup)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID as taxSetup1_36_' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
    |  \-[SQL_TOKEN] SqlFragment: 'taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[taxsetup0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'TaxSetup taxsetup0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=TaxSetup,tableAlias=taxsetup0_,origin=null,columns={,className=com.cmm.jft.financial.TaxSetup}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'taxsetup0_.taxSetupID' {propertyName=taxSetupID,dereferenceType=PRIMITIVE,getPropertyPath=taxSetupID,path=t.taxSetupID,tableAlias=taxsetup0_,className=com.cmm.jft.financial.TaxSetup,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
          |  \-[IDENT] IdentNode: 'taxSetupID' {originalText=taxSetupID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=taxSetupID, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:03,017 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,017 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t WHERE t.taxSetupID = :taxSetupID
  2015-06-09 20:29:03,017 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select taxsetup0_.taxSetupID as taxSetup1_36_, taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_ from TaxSetup taxsetup0_ where taxsetup0_.taxSetupID=?
  2015-06-09 20:29:03,017 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,017 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: StockExchange.findByExchangeName
  2015-06-09 20:29:03,017 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.trading.securities.StockExchange e WHERE e.exchangeName = :exchangeName
  2015-06-09 20:29:03,019 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'StockExchange'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'exchangeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'exchangeName'

  2015-06-09 20:29:03,019 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,019 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:03,019 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.StockExchange (e) -> stockexcha0_
  2015-06-09 20:29:03,019 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> stockexcha0_.stockExchangeID
  2015-06-09 20:29:03,019 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> stockexcha0_.stockExchangeID
  2015-06-09 20:29:03,020 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : exchangeName -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:03,020 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.exchangeName -> stockexcha0_.ExchangeName
  2015-06-09 20:29:03,020 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:03,020 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} stockexcha0_.stockExchangeID ) ( FromClause{level=1} StockExchange stockexcha0_ ) ( WHERE ( = ( stockexcha0_.ExchangeName stockexcha0_.stockExchangeID exchangeName ) ? ) ) )
  2015-06-09 20:29:03,020 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [StockExchange stockexcha0_]
  2015-06-09 20:29:03,020 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:03,020 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (StockExchange)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'stockexcha0_.stockExchangeID as stockExc1_33_' {alias=e, className=com.cmm.jft.trading.securities.StockExchange, tableAlias=stockexcha0_}
    |  \-[SQL_TOKEN] SqlFragment: 'stockexcha0_.countryID as countryI3_33_, stockexcha0_.ExchangeName as Exchange2_33_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[stockexcha0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'StockExchange stockexcha0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=StockExchange,tableAlias=stockexcha0_,origin=null,columns={,className=com.cmm.jft.trading.securities.StockExchange}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'stockexcha0_.ExchangeName' {propertyName=exchangeName,dereferenceType=PRIMITIVE,getPropertyPath=exchangeName,path=e.exchangeName,tableAlias=stockexcha0_,className=com.cmm.jft.trading.securities.StockExchange,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'stockexcha0_.stockExchangeID' {alias=e, className=com.cmm.jft.trading.securities.StockExchange, tableAlias=stockexcha0_}
          |  \-[IDENT] IdentNode: 'exchangeName' {originalText=exchangeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=exchangeName, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:03,020 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,020 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.trading.securities.StockExchange e WHERE e.exchangeName = :exchangeName
  2015-06-09 20:29:03,020 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select stockexcha0_.stockExchangeID as stockExc1_33_, stockexcha0_.countryID as countryI3_33_, stockexcha0_.ExchangeName as Exchange2_33_ from StockExchange stockexcha0_ where stockexcha0_.ExchangeName=?
  2015-06-09 20:29:03,020 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,020 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: CurrencyQuote.findByQDateTime
  2015-06-09 20:29:03,021 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT c FROM com.cmm.jft.financial.CurrencyQuote c WHERE c.qDateTime = :qDateTime
  2015-06-09 20:29:03,022 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'CurrencyQuote'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'qDateTime'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'qDateTime'

  2015-06-09 20:29:03,022 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,022 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:03,022 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.CurrencyQuote (c) -> currencyqu0_
  2015-06-09 20:29:03,022 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currencyqu0_.currencyQuoteID
  2015-06-09 20:29:03,022 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c -> currencyqu0_.currencyQuoteID
  2015-06-09 20:29:03,022 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : qDateTime -> org.hibernate.type.TimestampType@d7b1517
  2015-06-09 20:29:03,022 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : c.qDateTime -> currencyqu0_.QDateTime
  2015-06-09 20:29:03,022 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:03,023 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} currencyqu0_.currencyQuoteID ) ( FromClause{level=1} CurrencyQuote currencyqu0_ ) ( WHERE ( = ( currencyqu0_.QDateTime currencyqu0_.currencyQuoteID qDateTime ) ? ) ) )
  2015-06-09 20:29:03,023 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [CurrencyQuote currencyqu0_]
  2015-06-09 20:29:03,023 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:03,023 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CurrencyQuote)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currencyqu0_.currencyQuoteID as currency1_10_' {alias=c, className=com.cmm.jft.financial.CurrencyQuote, tableAlias=currencyqu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currencyqu0_.currencyID as currency4_10_, currencyqu0_.QDateTime as QDateTim2_10_, currencyqu0_.Value as Value3_10_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currencyqu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CurrencyQuote currencyqu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CurrencyQuote,tableAlias=currencyqu0_,origin=null,columns={,className=com.cmm.jft.financial.CurrencyQuote}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'currencyqu0_.QDateTime' {propertyName=qDateTime,dereferenceType=PRIMITIVE,getPropertyPath=qDateTime,path=c.qDateTime,tableAlias=currencyqu0_,className=com.cmm.jft.financial.CurrencyQuote,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'currencyqu0_.currencyQuoteID' {alias=c, className=com.cmm.jft.financial.CurrencyQuote, tableAlias=currencyqu0_}
          |  \-[IDENT] IdentNode: 'qDateTime' {originalText=qDateTime}
          \-[NAMED_PARAM] ParameterNode: '?' {name=qDateTime, expectedType=org.hibernate.type.TimestampType@d7b1517}

  2015-06-09 20:29:03,023 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,023 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT c FROM com.cmm.jft.financial.CurrencyQuote c WHERE c.qDateTime = :qDateTime
  2015-06-09 20:29:03,023 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select currencyqu0_.currencyQuoteID as currency1_10_, currencyqu0_.currencyID as currency4_10_, currencyqu0_.QDateTime as QDateTim2_10_, currencyqu0_.Value as Value3_10_ from CurrencyQuote currencyqu0_ where currencyqu0_.QDateTime=?
  2015-06-09 20:29:03,023 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,023 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Account.findByBalance
  2015-06-09 20:29:03,023 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.balance = :balance
  2015-06-09 20:29:03,025 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'balance'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'balance'

  2015-06-09 20:29:03,025 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,025 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:03,025 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Account (a) -> account0_
  2015-06-09 20:29:03,025 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:29:03,025 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:29:03,025 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : balance -> org.hibernate.type.BigDecimalType@21a06946
  2015-06-09 20:29:03,025 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a.balance -> account0_.Balance
  2015-06-09 20:29:03,025 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:03,025 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} account0_.accountID ) ( FromClause{level=1} Account account0_ ) ( WHERE ( = ( account0_.Balance account0_.accountID balance ) ? ) ) )
  2015-06-09 20:29:03,026 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Account account0_]
  2015-06-09 20:29:03,026 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:03,026 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountID as accountI1_0_' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.cmm.jft.financial.Account}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.Balance' {propertyName=balance,dereferenceType=PRIMITIVE,getPropertyPath=balance,path=a.balance,tableAlias=account0_,className=com.cmm.jft.financial.Account,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'account0_.accountID' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'balance' {originalText=balance}
          \-[NAMED_PARAM] ParameterNode: '?' {name=balance, expectedType=org.hibernate.type.BigDecimalType@21a06946}

  2015-06-09 20:29:03,026 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,026 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.balance = :balance
  2015-06-09 20:29:03,026 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select account0_.accountID as accountI1_0_, account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_ from Account account0_ where account0_.Balance=?
  2015-06-09 20:29:03,026 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,026 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: StockExchange.findAll
  2015-06-09 20:29:03,026 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.trading.securities.StockExchange e
  2015-06-09 20:29:03,027 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'StockExchange'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'e'

  2015-06-09 20:29:03,027 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,027 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:03,027 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.StockExchange (e) -> stockexcha0_
  2015-06-09 20:29:03,028 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> stockexcha0_.stockExchangeID
  2015-06-09 20:29:03,028 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:03,028 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} stockexcha0_.stockExchangeID ) ( FromClause{level=1} StockExchange stockexcha0_ ) )
  2015-06-09 20:29:03,028 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [StockExchange stockexcha0_]
  2015-06-09 20:29:03,028 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:03,028 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (StockExchange)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'stockexcha0_.stockExchangeID as stockExc1_33_' {alias=e, className=com.cmm.jft.trading.securities.StockExchange, tableAlias=stockexcha0_}
    |  \-[SQL_TOKEN] SqlFragment: 'stockexcha0_.countryID as countryI3_33_, stockexcha0_.ExchangeName as Exchange2_33_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[stockexcha0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'StockExchange stockexcha0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=StockExchange,tableAlias=stockexcha0_,origin=null,columns={,className=com.cmm.jft.trading.securities.StockExchange}}

  2015-06-09 20:29:03,028 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,028 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.trading.securities.StockExchange e
  2015-06-09 20:29:03,028 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select stockexcha0_.stockExchangeID as stockExc1_33_, stockexcha0_.countryID as countryI3_33_, stockexcha0_.ExchangeName as Exchange2_33_ from StockExchange stockexcha0_
  2015-06-09 20:29:03,028 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,028 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Security.findBySymbol
  2015-06-09 20:29:03,028 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT e FROM com.cmm.jft.trading.securities.Security e WHERE e.symbol = :symbol
  2015-06-09 20:29:03,030 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Security'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'symbol'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'symbol'

  2015-06-09 20:29:03,030 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,030 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:03,030 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Security (e) -> security0_
  2015-06-09 20:29:03,030 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> security0_.securityID
  2015-06-09 20:29:03,030 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> security0_.securityID
  2015-06-09 20:29:03,030 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : symbol -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:03,030 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e.symbol -> security0_.Symbol
  2015-06-09 20:29:03,030 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:03,030 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} security0_.securityID ) ( FromClause{level=1} Security security0_ ) ( WHERE ( = ( security0_.Symbol security0_.securityID symbol ) ? ) ) )
  2015-06-09 20:29:03,035 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Security security0_]
  2015-06-09 20:29:03,035 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:03,035 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Security)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'security0_.securityID as security1_30_' {alias=e, className=com.cmm.jft.trading.securities.Security, tableAlias=security0_}
    |  \-[SQL_TOKEN] SqlFragment: 'security0_.Description as Descript2_30_, security0_.securityInfoID_securityInfoID as security4_30_, security0_.Symbol as Symbol3_30_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[security0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Security security0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=Security,tableAlias=security0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Security}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'security0_.Symbol' {propertyName=symbol,dereferenceType=PRIMITIVE,getPropertyPath=symbol,path=e.symbol,tableAlias=security0_,className=com.cmm.jft.trading.securities.Security,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'security0_.securityID' {alias=e, className=com.cmm.jft.trading.securities.Security, tableAlias=security0_}
          |  \-[IDENT] IdentNode: 'symbol' {originalText=symbol}
          \-[NAMED_PARAM] ParameterNode: '?' {name=symbol, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:03,035 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,035 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT e FROM com.cmm.jft.trading.securities.Security e WHERE e.symbol = :symbol
  2015-06-09 20:29:03,035 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select security0_.securityID as security1_30_, security0_.Description as Descript2_30_, security0_.securityInfoID_securityInfoID as security4_30_, security0_.Symbol as Symbol3_30_ from Security security0_ where security0_.Symbol=?
  2015-06-09 20:29:03,035 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,035 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: IndexComposition.findByIndexCompID
  2015-06-09 20:29:03,036 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT i FROM com.cmm.jft.trading.securities.IndexComposition i WHERE i.indexCompID = :indexCompID
  2015-06-09 20:29:03,037 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'IndexComposition'
    |  |     \-[ALIAS] Node: 'i'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'i'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'i'
          |  \-[IDENT] Node: 'indexCompID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'indexCompID'

  2015-06-09 20:29:03,037 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,038 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:03,038 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.IndexComposition (i) -> indexcompo0_
  2015-06-09 20:29:03,038 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> indexcompo0_.indexCompID
  2015-06-09 20:29:03,038 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i -> indexcompo0_.indexCompID
  2015-06-09 20:29:03,038 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : indexCompID -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:03,038 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : i.indexCompID -> indexcompo0_.indexCompID
  2015-06-09 20:29:03,038 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:03,038 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} indexcompo0_.indexCompID ) ( FromClause{level=1} IndexComposition indexcompo0_ ) ( WHERE ( = ( indexcompo0_.indexCompID indexcompo0_.indexCompID indexCompID ) ? ) ) )
  2015-06-09 20:29:03,038 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [IndexComposition indexcompo0_]
  2015-06-09 20:29:03,038 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:03,038 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (IndexComposition)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'indexcompo0_.indexCompID as indexCom1_18_' {alias=i, className=com.cmm.jft.trading.securities.IndexComposition, tableAlias=indexcompo0_}
    |  \-[SQL_TOKEN] SqlFragment: 'indexcompo0_.IndexDate as IndexDat2_18_, indexcompo0_.indexID as indexID3_18_, indexcompo0_.securityID as security4_18_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[i], fromElementByTableAlias=[indexcompo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'IndexComposition indexcompo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=IndexComposition,tableAlias=indexcompo0_,origin=null,columns={,className=com.cmm.jft.trading.securities.IndexComposition}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'indexcompo0_.indexCompID' {propertyName=indexCompID,dereferenceType=PRIMITIVE,getPropertyPath=indexCompID,path=i.indexCompID,tableAlias=indexcompo0_,className=com.cmm.jft.trading.securities.IndexComposition,classAlias=i}
          |  +-[ALIAS_REF] IdentNode: 'indexcompo0_.indexCompID' {alias=i, className=com.cmm.jft.trading.securities.IndexComposition, tableAlias=indexcompo0_}
          |  \-[IDENT] IdentNode: 'indexCompID' {originalText=indexCompID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=indexCompID, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:03,038 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,039 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT i FROM com.cmm.jft.trading.securities.IndexComposition i WHERE i.indexCompID = :indexCompID
  2015-06-09 20:29:03,039 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select indexcompo0_.indexCompID as indexCom1_18_, indexcompo0_.IndexDate as IndexDat2_18_, indexcompo0_.indexID as indexID3_18_, indexcompo0_.securityID as security4_18_ from IndexComposition indexcompo0_ where indexcompo0_.indexCompID=?
  2015-06-09 20:29:03,039 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,039 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Subsector.findBySubsectorID
  2015-06-09 20:29:03,039 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT s FROM com.cmm.jft.trading.securities.Subsector s WHERE s.subsectorID = :subsectorID
  2015-06-09 20:29:03,041 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'securities'
    |  |     |  \-[IDENT] Node: 'Subsector'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'subsectorID'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'subsectorID'

  2015-06-09 20:29:03,041 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,041 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:03,041 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Subsector (s) -> subsector0_
  2015-06-09 20:29:03,041 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> subsector0_.subsectorID
  2015-06-09 20:29:03,041 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s -> subsector0_.subsectorID
  2015-06-09 20:29:03,041 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : subsectorID -> org.hibernate.type.LongType@d70c109
  2015-06-09 20:29:03,041 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : s.subsectorID -> subsector0_.subsectorID
  2015-06-09 20:29:03,041 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:03,041 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} subsector0_.subsectorID ) ( FromClause{level=1} Subsector subsector0_ ) ( WHERE ( = ( subsector0_.subsectorID subsector0_.subsectorID subsectorID ) ? ) ) )
  2015-06-09 20:29:03,041 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Subsector subsector0_]
  2015-06-09 20:29:03,041 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:03,042 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Subsector)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'subsector0_.subsectorID as subsecto1_34_' {alias=s, className=com.cmm.jft.trading.securities.Subsector, tableAlias=subsector0_}
    |  \-[SQL_TOKEN] SqlFragment: 'subsector0_.sectorID as sectorID3_34_, subsector0_.SubsectorName as Subsecto2_34_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[subsector0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Subsector subsector0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=Subsector,tableAlias=subsector0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Subsector}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'subsector0_.subsectorID' {propertyName=subsectorID,dereferenceType=PRIMITIVE,getPropertyPath=subsectorID,path=s.subsectorID,tableAlias=subsector0_,className=com.cmm.jft.trading.securities.Subsector,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'subsector0_.subsectorID' {alias=s, className=com.cmm.jft.trading.securities.Subsector, tableAlias=subsector0_}
          |  \-[IDENT] IdentNode: 'subsectorID' {originalText=subsectorID}
          \-[NAMED_PARAM] ParameterNode: '?' {name=subsectorID, expectedType=org.hibernate.type.LongType@d70c109}

  2015-06-09 20:29:03,042 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,042 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT s FROM com.cmm.jft.trading.securities.Subsector s WHERE s.subsectorID = :subsectorID
  2015-06-09 20:29:03,042 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select subsector0_.subsectorID as subsecto1_34_, subsector0_.sectorID as sectorID3_34_, subsector0_.SubsectorName as Subsecto2_34_ from Subsector subsector0_ where subsector0_.subsectorID=?
  2015-06-09 20:29:03,042 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,042 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Account.findByDescription
  2015-06-09 20:29:03,042 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.description = :description
  2015-06-09 20:29:03,044 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'description'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'description'

  2015-06-09 20:29:03,044 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,044 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:03,044 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Account (a) -> account0_
  2015-06-09 20:29:03,044 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:29:03,044 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a -> account0_.accountID
  2015-06-09 20:29:03,044 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : description -> org.hibernate.type.StringType@66048bfd
  2015-06-09 20:29:03,044 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : a.description -> account0_.Description
  2015-06-09 20:29:03,044 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:03,045 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} account0_.accountID ) ( FromClause{level=1} Account account0_ ) ( WHERE ( = ( account0_.Description account0_.accountID description ) ? ) ) )
  2015-06-09 20:29:03,045 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Account account0_]
  2015-06-09 20:29:03,045 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:03,045 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountID as accountI1_0_' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.cmm.jft.financial.Account}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.Description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=a.description,tableAlias=account0_,className=com.cmm.jft.financial.Account,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'account0_.accountID' {alias=a, className=com.cmm.jft.financial.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[NAMED_PARAM] ParameterNode: '?' {name=description, expectedType=org.hibernate.type.StringType@66048bfd}

  2015-06-09 20:29:03,045 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,045 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT a FROM com.cmm.jft.financial.Account a WHERE a.description = :description
  2015-06-09 20:29:03,045 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select account0_.accountID as accountI1_0_, account0_.AccName as AccName2_0_, account0_.AccountCategory as AccountC3_0_, account0_.AccountType as AccountT4_0_, account0_.Balance as Balance5_0_, account0_.CreditLimit as CreditLi6_0_, account0_.currencyID as currency9_0_, account0_.Description as Descript7_0_, account0_.fatherAccountID as fatherA10_0_, account0_.Open as Open8_0_ from Account account0_ where account0_.Description=?
  2015-06-09 20:29:03,045 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,045 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: TaxSetup.findByTaxValue
  2015-06-09 20:29:03,045 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t WHERE t.taxValue = :taxValue
  2015-06-09 20:29:03,047 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'TaxSetup'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'taxValue'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'taxValue'

  2015-06-09 20:29:03,047 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,047 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:03,047 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.TaxSetup (t) -> taxsetup0_
  2015-06-09 20:29:03,047 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:29:03,047 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t -> taxsetup0_.taxSetupID
  2015-06-09 20:29:03,047 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : taxValue -> org.hibernate.type.BigDecimalType@21a06946
  2015-06-09 20:29:03,047 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : t.taxValue -> taxsetup0_.TaxValue
  2015-06-09 20:29:03,047 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:03,047 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} taxsetup0_.taxSetupID ) ( FromClause{level=1} TaxSetup taxsetup0_ ) ( WHERE ( = ( taxsetup0_.TaxValue taxsetup0_.taxSetupID taxValue ) ? ) ) )
  2015-06-09 20:29:03,048 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [TaxSetup taxsetup0_]
  2015-06-09 20:29:03,048 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:03,048 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TaxSetup)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID as taxSetup1_36_' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
    |  \-[SQL_TOKEN] SqlFragment: 'taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[taxsetup0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'TaxSetup taxsetup0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=TaxSetup,tableAlias=taxsetup0_,origin=null,columns={,className=com.cmm.jft.financial.TaxSetup}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'taxsetup0_.TaxValue' {propertyName=taxValue,dereferenceType=PRIMITIVE,getPropertyPath=taxValue,path=t.taxValue,tableAlias=taxsetup0_,className=com.cmm.jft.financial.TaxSetup,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'taxsetup0_.taxSetupID' {alias=t, className=com.cmm.jft.financial.TaxSetup, tableAlias=taxsetup0_}
          |  \-[IDENT] IdentNode: 'taxValue' {originalText=taxValue}
          \-[NAMED_PARAM] ParameterNode: '?' {name=taxValue, expectedType=org.hibernate.type.BigDecimalType@21a06946}

  2015-06-09 20:29:03,048 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,049 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT t FROM com.cmm.jft.financial.TaxSetup t WHERE t.taxValue = :taxValue
  2015-06-09 20:29:03,049 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select taxsetup0_.taxSetupID as taxSetup1_36_, taxsetup0_.Aliquota as Aliquota2_36_, taxsetup0_.SetupName as SetupNam3_36_, taxsetup0_.taxID as taxID5_36_, taxsetup0_.TaxValue as TaxValue4_36_ from TaxSetup taxsetup0_ where taxsetup0_.TaxValue=?
  2015-06-09 20:29:03,049 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,049 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: MarketTrade.findByPrice
  2015-06-09 20:29:03,049 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m WHERE m.price = :price
  2015-06-09 20:29:03,052 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  |  \-[IDENT] Node: 'trading'
    |  |     |  |  \-[IDENT] Node: 'marketdata'
    |  |     |  \-[IDENT] Node: 'MarketTrade'
    |  |     \-[ALIAS] Node: 'm'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'm'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'm'
          |  \-[IDENT] Node: 'price'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'price'

  2015-06-09 20:29:03,053 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,053 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:03,053 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.marketdata.MarketTrade (m) -> markettrad0_
  2015-06-09 20:29:03,054 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:29:03,055 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m -> markettrad0_.marketTradeID
  2015-06-09 20:29:03,055 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : price -> org.hibernate.type.BigDecimalType@21a06946
  2015-06-09 20:29:03,055 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : m.price -> markettrad0_.Price
  2015-06-09 20:29:03,055 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:03,055 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} markettrad0_.marketTradeID ) ( FromClause{level=1} MarketTrade markettrad0_ ) ( WHERE ( = ( markettrad0_.Price markettrad0_.marketTradeID price ) ? ) ) )
  2015-06-09 20:29:03,055 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [MarketTrade markettrad0_]
  2015-06-09 20:29:03,055 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:03,055 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (MarketTrade)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID as marketTr1_23_' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
    |  \-[SQL_TOKEN] SqlFragment: 'markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[m], fromElementByTableAlias=[markettrad0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'MarketTrade markettrad0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=MarketTrade,tableAlias=markettrad0_,origin=null,columns={,className=com.cmm.jft.trading.marketdata.MarketTrade}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'markettrad0_.Price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=m.price,tableAlias=markettrad0_,className=com.cmm.jft.trading.marketdata.MarketTrade,classAlias=m}
          |  +-[ALIAS_REF] IdentNode: 'markettrad0_.marketTradeID' {alias=m, className=com.cmm.jft.trading.marketdata.MarketTrade, tableAlias=markettrad0_}
          |  \-[IDENT] IdentNode: 'price' {originalText=price}
          \-[NAMED_PARAM] ParameterNode: '?' {name=price, expectedType=org.hibernate.type.BigDecimalType@21a06946}

  2015-06-09 20:29:03,055 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,056 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT m FROM com.cmm.jft.trading.marketdata.MarketTrade m WHERE m.price = :price
  2015-06-09 20:29:03,056 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select markettrad0_.marketTradeID as marketTr1_23_, markettrad0_.buyOrderID as buyOrder5_23_, markettrad0_.Price as Price2_23_, markettrad0_.sellOrderID as sellOrde6_23_, markettrad0_.TradeDateTime as TradeDat3_23_, markettrad0_.Volume as Volume4_23_ from MarketTrade markettrad0_ where markettrad0_.Price=?
  2015-06-09 20:29:03,056 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,056 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Earning.findAll
  2015-06-09 20:29:03,056 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: select e from com.cmm.jft.trading.securities.Earning e
  2015-06-09 20:29:03,057 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'cmm'
       |     |  |  |  |  \-[IDENT] Node: 'jft'
       |     |  |  |  \-[IDENT] Node: 'trading'
       |     |  |  \-[IDENT] Node: 'securities'
       |     |  \-[IDENT] Node: 'Earning'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'e'

  2015-06-09 20:29:03,057 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,057 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:03,057 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.trading.securities.Earning (e) -> earning0_
  2015-06-09 20:29:03,057 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : e -> earning0_.earningID
  2015-06-09 20:29:03,057 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:03,057 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} earning0_.earningID ) ( FromClause{level=1} Earning earning0_ ) )
  2015-06-09 20:29:03,058 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Earning earning0_]
  2015-06-09 20:29:03,058 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:03,058 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Earning)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'earning0_.earningID as earningI1_13_' {alias=e, className=com.cmm.jft.trading.securities.Earning, tableAlias=earning0_}
    |  \-[SQL_TOKEN] SqlFragment: 'earning0_.EarningType as EarningT2_13_, earning0_.EarningValue as EarningV3_13_, earning0_.ExDate as ExDate4_13_, earning0_.ExPrice as ExPrice5_13_, earning0_.securityID as security6_13_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[earning0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Earning earning0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=Earning,tableAlias=earning0_,origin=null,columns={,className=com.cmm.jft.trading.securities.Earning}}

  2015-06-09 20:29:03,058 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,058 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: select e from com.cmm.jft.trading.securities.Earning e
  2015-06-09 20:29:03,058 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select earning0_.earningID as earningI1_13_, earning0_.EarningType as EarningT2_13_, earning0_.EarningValue as EarningV3_13_, earning0_.ExDate as ExDate4_13_, earning0_.ExPrice as ExPrice5_13_, earning0_.securityID as security6_13_ from Earning earning0_
  2015-06-09 20:29:03,058 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,058 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking named query: Deposit.findByValue
  2015-06-09 20:29:03,059 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> parse() - HQL: SELECT d FROM com.cmm.jft.financial.Deposit d WHERE d.value = :value
  2015-06-09 20:29:03,060 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'cmm'
    |  |     |  |  |  \-[IDENT] Node: 'jft'
    |  |     |  |  \-[IDENT] Node: 'financial'
    |  |     |  \-[IDENT] Node: 'Deposit'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'value'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'value'

  2015-06-09 20:29:03,060 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,060 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select << begin [level=1, statement=select]
  2015-06-09 20:29:03,060 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromElement -> FromClause{level=1} : com.cmm.jft.financial.Deposit (d) -> deposit0_
  2015-06-09 20:29:03,060 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:29:03,060 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d -> deposit0_.depositID
  2015-06-09 20:29:03,060 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.DotNode -> getDataType() : value -> org.hibernate.type.BigDecimalType@21a06946
  2015-06-09 20:29:03,060 [main] (DEBUG) org.hibernate.hql.internal.ast.tree.FromReferenceNode -> Resolved : d.value -> deposit0_.Value
  2015-06-09 20:29:03,061 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select : finishing up [level=1, statement=select]
  2015-06-09 20:29:03,061 [main] (DEBUG) org.hibernate.hql.internal.ast.HqlSqlWalker -> processQuery() :  ( SELECT ( {select clause} deposit0_.depositID ) ( FromClause{level=1} Deposit deposit0_ ) ( WHERE ( = ( deposit0_.Value deposit0_.depositID value ) ? ) ) )
  2015-06-09 20:29:03,061 [main] (DEBUG) org.hibernate.hql.internal.ast.util.JoinProcessor -> Using FROM fragment [Deposit deposit0_]
  2015-06-09 20:29:03,061 [main] (DEBUG) org.hibernate.hql.internal.antlr.HqlSqlBaseWalker -> select >> end [level=1, statement=select]
  2015-06-09 20:29:03,061 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Deposit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID as depositI1_11_' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[deposit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Deposit deposit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=Deposit,tableAlias=deposit0_,origin=null,columns={,className=com.cmm.jft.financial.Deposit}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'deposit0_.Value' {propertyName=value,dereferenceType=PRIMITIVE,getPropertyPath=value,path=d.value,tableAlias=deposit0_,className=com.cmm.jft.financial.Deposit,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'deposit0_.depositID' {alias=d, className=com.cmm.jft.financial.Deposit, tableAlias=deposit0_}
          |  \-[IDENT] IdentNode: 'value' {originalText=value}
          \-[NAMED_PARAM] ParameterNode: '?' {name=value, expectedType=org.hibernate.type.BigDecimalType@21a06946}

  2015-06-09 20:29:03,061 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,061 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> HQL: SELECT d FROM com.cmm.jft.financial.Deposit d WHERE d.value = :value
  2015-06-09 20:29:03,061 [main] (DEBUG) org.hibernate.hql.internal.ast.QueryTranslatorImpl -> SQL: select deposit0_.depositID as depositI1_11_, deposit0_.DepositAccount as DepositA5_11_, deposit0_.DepositDate as DepositD2_11_, deposit0_.Description as Descript3_11_, deposit0_.Value as Value4_11_ from Deposit deposit0_ where deposit0_.Value=?
  2015-06-09 20:29:03,061 [main] (DEBUG) org.hibernate.hql.internal.ast.ErrorCounter -> throwQueryException() : no errors
  2015-06-09 20:29:03,061 [main] (DEBUG) org.hibernate.internal.NamedQueryRepository -> Checking 0 named SQL queries
  2015-06-09 20:29:03,071 [main] (DEBUG) org.hibernate.stat.internal.StatisticsInitiator -> Statistics initialized [enabled=false]
  2015-06-09 20:29:09,925 [AWT-EventQueue-0] (DEBUG) org.hibernate.SQL -> select orders0_.orderID as orderID1_26_, orders0_.AveragePrice as AverageP2_26_, orders0_.Comment as Comment3_26_, orders0_.Duration as Duration4_26_, orders0_.ExecutedVolume as Executed5_26_, orders0_.OrderDateTime as OrderDat6_26_, orders0_.OrderSerial as OrderSer7_26_, orders0_.OrderStatus as OrderSta8_26_, orders0_.OrderType as OrderTyp9_26_, orders0_.Price as Price10_26_, orders0_.securityID as securit15_26_, orders0_.Side as Side11_26_, orders0_.StopPrice as StopPri12_26_, orders0_.TradeType as TradeTy13_26_, orders0_.Volume as Volume14_26_ from Orders orders0_
  2015-06-09 20:29:09,926 [AWT-EventQueue-0] (DEBUG) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl -> Obtaining JDBC connection
  2015-06-09 20:29:09,926 [AWT-EventQueue-0] (DEBUG) org.hibernate.engine.jdbc.internal.LogicalConnectionImpl -> Obtained JDBC connection
  